// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: freight.proto

package freightv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ProcessingStatus indicates the result of freight processing
type ProcessingStatus int32

const (
	ProcessingStatus_PROCESSING_STATUS_UNSPECIFIED ProcessingStatus = 0
	ProcessingStatus_PROCESSING_STATUS_SUCCESS     ProcessingStatus = 1
	ProcessingStatus_PROCESSING_STATUS_ERROR       ProcessingStatus = 2
	ProcessingStatus_PROCESSING_STATUS_PENDING     ProcessingStatus = 3
)

// Enum value maps for ProcessingStatus.
var (
	ProcessingStatus_name = map[int32]string{
		0: "PROCESSING_STATUS_UNSPECIFIED",
		1: "PROCESSING_STATUS_SUCCESS",
		2: "PROCESSING_STATUS_ERROR",
		3: "PROCESSING_STATUS_PENDING",
	}
	ProcessingStatus_value = map[string]int32{
		"PROCESSING_STATUS_UNSPECIFIED": 0,
		"PROCESSING_STATUS_SUCCESS":     1,
		"PROCESSING_STATUS_ERROR":       2,
		"PROCESSING_STATUS_PENDING":     3,
	}
)

func (x ProcessingStatus) Enum() *ProcessingStatus {
	p := new(ProcessingStatus)
	*p = x
	return p
}

func (x ProcessingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_freight_proto_enumTypes[0].Descriptor()
}

func (ProcessingStatus) Type() protoreflect.EnumType {
	return &file_freight_proto_enumTypes[0]
}

func (x ProcessingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessingStatus.Descriptor instead.
func (ProcessingStatus) EnumDescriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{0}
}

// HealthStatus indicates service health
type HealthStatus int32

const (
	HealthStatus_HEALTH_STATUS_UNSPECIFIED     HealthStatus = 0
	HealthStatus_HEALTH_STATUS_SERVING         HealthStatus = 1
	HealthStatus_HEALTH_STATUS_NOT_SERVING     HealthStatus = 2
	HealthStatus_HEALTH_STATUS_SERVICE_UNKNOWN HealthStatus = 3
)

// Enum value maps for HealthStatus.
var (
	HealthStatus_name = map[int32]string{
		0: "HEALTH_STATUS_UNSPECIFIED",
		1: "HEALTH_STATUS_SERVING",
		2: "HEALTH_STATUS_NOT_SERVING",
		3: "HEALTH_STATUS_SERVICE_UNKNOWN",
	}
	HealthStatus_value = map[string]int32{
		"HEALTH_STATUS_UNSPECIFIED":     0,
		"HEALTH_STATUS_SERVING":         1,
		"HEALTH_STATUS_NOT_SERVING":     2,
		"HEALTH_STATUS_SERVICE_UNKNOWN": 3,
	}
)

func (x HealthStatus) Enum() *HealthStatus {
	p := new(HealthStatus)
	*p = x
	return p
}

func (x HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_freight_proto_enumTypes[1].Descriptor()
}

func (HealthStatus) Type() protoreflect.EnumType {
	return &file_freight_proto_enumTypes[1]
}

func (x HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthStatus.Descriptor instead.
func (HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{1}
}

// ProcessFreightRequest contains the freight data and context to be processed
type ProcessFreightRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Context information about the promotion
	Context *PromotionContext `protobuf:"bytes,1,opt,name=context,proto3" json:"context,omitempty"`
	// The freight collection being processed
	Freight *FreightCollection `protobuf:"bytes,2,opt,name=freight,proto3" json:"freight,omitempty"`
	// The specific freight that triggered this promotion
	TargetFreight *FreightReference `protobuf:"bytes,3,opt,name=target_freight,json=targetFreight,proto3" json:"target_freight,omitempty"`
	// Step configuration passed from the Kargo step
	Config map[string]string `protobuf:"bytes,4,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Environment variables
	Env           map[string]string `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessFreightRequest) Reset() {
	*x = ProcessFreightRequest{}
	mi := &file_freight_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessFreightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessFreightRequest) ProtoMessage() {}

func (x *ProcessFreightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessFreightRequest.ProtoReflect.Descriptor instead.
func (*ProcessFreightRequest) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessFreightRequest) GetContext() *PromotionContext {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *ProcessFreightRequest) GetFreight() *FreightCollection {
	if x != nil {
		return x.Freight
	}
	return nil
}

func (x *ProcessFreightRequest) GetTargetFreight() *FreightReference {
	if x != nil {
		return x.TargetFreight
	}
	return nil
}

func (x *ProcessFreightRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *ProcessFreightRequest) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

// ProcessFreightResponse contains the processed freight and any metadata
type ProcessFreightResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Status of the processing
	Status ProcessingStatus `protobuf:"varint,1,opt,name=status,proto3,enum=freight.v1.ProcessingStatus" json:"status,omitempty"`
	// Modified freight collection (if any changes were made)
	ModifiedFreight *FreightCollection `protobuf:"bytes,2,opt,name=modified_freight,json=modifiedFreight,proto3" json:"modified_freight,omitempty"`
	// Output metadata that can be used by subsequent steps
	Output map[string]string `protobuf:"bytes,3,rep,name=output,proto3" json:"output,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Logs or messages from the processing
	Logs []string `protobuf:"bytes,4,rep,name=logs,proto3" json:"logs,omitempty"`
	// Error message if status is ERROR
	ErrorMessage  string `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessFreightResponse) Reset() {
	*x = ProcessFreightResponse{}
	mi := &file_freight_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessFreightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessFreightResponse) ProtoMessage() {}

func (x *ProcessFreightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessFreightResponse.ProtoReflect.Descriptor instead.
func (*ProcessFreightResponse) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessFreightResponse) GetStatus() ProcessingStatus {
	if x != nil {
		return x.Status
	}
	return ProcessingStatus_PROCESSING_STATUS_UNSPECIFIED
}

func (x *ProcessFreightResponse) GetModifiedFreight() *FreightCollection {
	if x != nil {
		return x.ModifiedFreight
	}
	return nil
}

func (x *ProcessFreightResponse) GetOutput() map[string]string {
	if x != nil {
		return x.Output
	}
	return nil
}

func (x *ProcessFreightResponse) GetLogs() []string {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *ProcessFreightResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// PromotionContext provides context about the current promotion
type PromotionContext struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Project name
	Project string `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	// Stage name
	Stage string `protobuf:"bytes,2,opt,name=stage,proto3" json:"stage,omitempty"`
	// Promotion name
	Promotion string `protobuf:"bytes,3,opt,name=promotion,proto3" json:"promotion,omitempty"`
	// Step alias
	StepAlias string `protobuf:"bytes,4,opt,name=step_alias,json=stepAlias,proto3" json:"step_alias,omitempty"`
	// Actor who triggered the promotion
	Actor         string `protobuf:"bytes,5,opt,name=actor,proto3" json:"actor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PromotionContext) Reset() {
	*x = PromotionContext{}
	mi := &file_freight_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PromotionContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionContext) ProtoMessage() {}

func (x *PromotionContext) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionContext.ProtoReflect.Descriptor instead.
func (*PromotionContext) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{2}
}

func (x *PromotionContext) GetProject() string {
	if x != nil {
		return x.Project
	}
	return ""
}

func (x *PromotionContext) GetStage() string {
	if x != nil {
		return x.Stage
	}
	return ""
}

func (x *PromotionContext) GetPromotion() string {
	if x != nil {
		return x.Promotion
	}
	return ""
}

func (x *PromotionContext) GetStepAlias() string {
	if x != nil {
		return x.StepAlias
	}
	return ""
}

func (x *PromotionContext) GetActor() string {
	if x != nil {
		return x.Actor
	}
	return ""
}

// FreightCollection represents a collection of freight references
type FreightCollection struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Unique identifier for this collection
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Map of freight references indexed by warehouse origin
	Freight       map[string]*FreightReference `protobuf:"bytes,2,rep,name=freight,proto3" json:"freight,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreightCollection) Reset() {
	*x = FreightCollection{}
	mi := &file_freight_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreightCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreightCollection) ProtoMessage() {}

func (x *FreightCollection) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreightCollection.ProtoReflect.Descriptor instead.
func (*FreightCollection) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{3}
}

func (x *FreightCollection) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FreightCollection) GetFreight() map[string]*FreightReference {
	if x != nil {
		return x.Freight
	}
	return nil
}

// FreightReference represents a reference to a piece of freight
type FreightReference struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// System-assigned identifier
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Origin of the freight
	Origin *FreightOrigin `protobuf:"bytes,2,opt,name=origin,proto3" json:"origin,omitempty"`
	// Git commits in this freight
	Commits []*GitCommit `protobuf:"bytes,3,rep,name=commits,proto3" json:"commits,omitempty"`
	// Container images in this freight
	Images []*Image `protobuf:"bytes,4,rep,name=images,proto3" json:"images,omitempty"`
	// Helm charts in this freight
	Charts []*Chart `protobuf:"bytes,5,rep,name=charts,proto3" json:"charts,omitempty"`
	// Metadata associated with this freight
	Metadata      map[string]string `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreightReference) Reset() {
	*x = FreightReference{}
	mi := &file_freight_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreightReference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreightReference) ProtoMessage() {}

func (x *FreightReference) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreightReference.ProtoReflect.Descriptor instead.
func (*FreightReference) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{4}
}

func (x *FreightReference) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FreightReference) GetOrigin() *FreightOrigin {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *FreightReference) GetCommits() []*GitCommit {
	if x != nil {
		return x.Commits
	}
	return nil
}

func (x *FreightReference) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *FreightReference) GetCharts() []*Chart {
	if x != nil {
		return x.Charts
	}
	return nil
}

func (x *FreightReference) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// FreightOrigin describes where freight originated from
type FreightOrigin struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Kind of origin (e.g., "Warehouse")
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// Name of the origin resource
	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FreightOrigin) Reset() {
	*x = FreightOrigin{}
	mi := &file_freight_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FreightOrigin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreightOrigin) ProtoMessage() {}

func (x *FreightOrigin) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreightOrigin.ProtoReflect.Descriptor instead.
func (*FreightOrigin) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{5}
}

func (x *FreightOrigin) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *FreightOrigin) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// GitCommit represents a Git commit
type GitCommit struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Repository URL
	RepoUrl string `protobuf:"bytes,1,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`
	// Commit ID/hash
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Branch name
	Branch string `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
	// Tag name (if any)
	Tag string `protobuf:"bytes,4,opt,name=tag,proto3" json:"tag,omitempty"`
	// Commit message
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// Author information
	Author *GitUser `protobuf:"bytes,6,opt,name=author,proto3" json:"author,omitempty"`
	// Committer information
	Committer *GitUser `protobuf:"bytes,7,opt,name=committer,proto3" json:"committer,omitempty"`
	// Commit timestamp
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GitCommit) Reset() {
	*x = GitCommit{}
	mi := &file_freight_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitCommit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitCommit) ProtoMessage() {}

func (x *GitCommit) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitCommit.ProtoReflect.Descriptor instead.
func (*GitCommit) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{6}
}

func (x *GitCommit) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *GitCommit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GitCommit) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *GitCommit) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *GitCommit) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GitCommit) GetAuthor() *GitUser {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *GitCommit) GetCommitter() *GitUser {
	if x != nil {
		return x.Committer
	}
	return nil
}

func (x *GitCommit) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// GitUser represents a Git user (author or committer)
type GitUser struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// User name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// User email
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	// Timestamp
	When          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=when,proto3" json:"when,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GitUser) Reset() {
	*x = GitUser{}
	mi := &file_freight_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GitUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GitUser) ProtoMessage() {}

func (x *GitUser) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GitUser.ProtoReflect.Descriptor instead.
func (*GitUser) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{7}
}

func (x *GitUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GitUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GitUser) GetWhen() *timestamppb.Timestamp {
	if x != nil {
		return x.When
	}
	return nil
}

// Image represents a container image
type Image struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Repository URL
	RepoUrl string `protobuf:"bytes,1,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`
	// Image tag
	Tag string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	// Image digest
	Digest string `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	// Creation timestamp
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Image annotations/labels
	Annotations   map[string]string `protobuf:"bytes,5,rep,name=annotations,proto3" json:"annotations,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Image) Reset() {
	*x = Image{}
	mi := &file_freight_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{8}
}

func (x *Image) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *Image) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *Image) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *Image) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Image) GetAnnotations() map[string]string {
	if x != nil {
		return x.Annotations
	}
	return nil
}

// Chart represents a Helm chart
type Chart struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Repository URL
	RepoUrl string `protobuf:"bytes,1,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`
	// Chart name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Chart version
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	// Chart metadata
	Metadata      map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chart) Reset() {
	*x = Chart{}
	mi := &file_freight_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chart) ProtoMessage() {}

func (x *Chart) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chart.ProtoReflect.Descriptor instead.
func (*Chart) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{9}
}

func (x *Chart) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *Chart) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chart) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Chart) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

// HealthCheckRequest for service health checks
type HealthCheckRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional service name to check
	Service       string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_freight_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{10}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// HealthCheckResponse returns health status
type HealthCheckResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Health status
	Status HealthStatus `protobuf:"varint,1,opt,name=status,proto3,enum=freight.v1.HealthStatus" json:"status,omitempty"`
	// Optional message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_freight_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_freight_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_freight_proto_rawDescGZIP(), []int{11}
}

func (x *HealthCheckResponse) GetStatus() HealthStatus {
	if x != nil {
		return x.Status
	}
	return HealthStatus_HEALTH_STATUS_UNSPECIFIED
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_freight_proto protoreflect.FileDescriptor

const file_freight_proto_rawDesc = "" +
	"\n" +
	"\rfreight.proto\x12\n" +
	"freight.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc5\x03\n" +
	"\x15ProcessFreightRequest\x126\n" +
	"\acontext\x18\x01 \x01(\v2\x1c.freight.v1.PromotionContextR\acontext\x127\n" +
	"\afreight\x18\x02 \x01(\v2\x1d.freight.v1.FreightCollectionR\afreight\x12C\n" +
	"\x0etarget_freight\x18\x03 \x01(\v2\x1c.freight.v1.FreightReferenceR\rtargetFreight\x12E\n" +
	"\x06config\x18\x04 \x03(\v2-.freight.v1.ProcessFreightRequest.ConfigEntryR\x06config\x12<\n" +
	"\x03env\x18\x05 \x03(\v2*.freight.v1.ProcessFreightRequest.EnvEntryR\x03env\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd4\x02\n" +
	"\x16ProcessFreightResponse\x124\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1c.freight.v1.ProcessingStatusR\x06status\x12H\n" +
	"\x10modified_freight\x18\x02 \x01(\v2\x1d.freight.v1.FreightCollectionR\x0fmodifiedFreight\x12F\n" +
	"\x06output\x18\x03 \x03(\v2..freight.v1.ProcessFreightResponse.OutputEntryR\x06output\x12\x12\n" +
	"\x04logs\x18\x04 \x03(\tR\x04logs\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\x1a9\n" +
	"\vOutputEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x95\x01\n" +
	"\x10PromotionContext\x12\x18\n" +
	"\aproject\x18\x01 \x01(\tR\aproject\x12\x14\n" +
	"\x05stage\x18\x02 \x01(\tR\x05stage\x12\x1c\n" +
	"\tpromotion\x18\x03 \x01(\tR\tpromotion\x12\x1d\n" +
	"\n" +
	"step_alias\x18\x04 \x01(\tR\tstepAlias\x12\x14\n" +
	"\x05actor\x18\x05 \x01(\tR\x05actor\"\xc3\x01\n" +
	"\x11FreightCollection\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12D\n" +
	"\afreight\x18\x02 \x03(\v2*.freight.v1.FreightCollection.FreightEntryR\afreight\x1aX\n" +
	"\fFreightEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.freight.v1.FreightReferenceR\x05value:\x028\x01\"\xe5\x02\n" +
	"\x10FreightReference\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x121\n" +
	"\x06origin\x18\x02 \x01(\v2\x19.freight.v1.FreightOriginR\x06origin\x12/\n" +
	"\acommits\x18\x03 \x03(\v2\x15.freight.v1.GitCommitR\acommits\x12)\n" +
	"\x06images\x18\x04 \x03(\v2\x11.freight.v1.ImageR\x06images\x12)\n" +
	"\x06charts\x18\x05 \x03(\v2\x11.freight.v1.ChartR\x06charts\x12F\n" +
	"\bmetadata\x18\x06 \x03(\v2*.freight.v1.FreightReference.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"7\n" +
	"\rFreightOrigin\x12\x12\n" +
	"\x04kind\x18\x01 \x01(\tR\x04kind\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"\x94\x02\n" +
	"\tGitCommit\x12\x19\n" +
	"\brepo_url\x18\x01 \x01(\tR\arepoUrl\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x16\n" +
	"\x06branch\x18\x03 \x01(\tR\x06branch\x12\x10\n" +
	"\x03tag\x18\x04 \x01(\tR\x03tag\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12+\n" +
	"\x06author\x18\x06 \x01(\v2\x13.freight.v1.GitUserR\x06author\x121\n" +
	"\tcommitter\x18\a \x01(\v2\x13.freight.v1.GitUserR\tcommitter\x128\n" +
	"\ttimestamp\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"c\n" +
	"\aGitUser\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12.\n" +
	"\x04when\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x04when\"\x8d\x02\n" +
	"\x05Image\x12\x19\n" +
	"\brepo_url\x18\x01 \x01(\tR\arepoUrl\x12\x10\n" +
	"\x03tag\x18\x02 \x01(\tR\x03tag\x12\x16\n" +
	"\x06digest\x18\x03 \x01(\tR\x06digest\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12D\n" +
	"\vannotations\x18\x05 \x03(\v2\".freight.v1.Image.AnnotationsEntryR\vannotations\x1a>\n" +
	"\x10AnnotationsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xca\x01\n" +
	"\x05Chart\x12\x19\n" +
	"\brepo_url\x18\x01 \x01(\tR\arepoUrl\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12;\n" +
	"\bmetadata\x18\x04 \x03(\v2\x1f.freight.v1.Chart.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"a\n" +
	"\x13HealthCheckResponse\x120\n" +
	"\x06status\x18\x01 \x01(\x0e2\x18.freight.v1.HealthStatusR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*\x90\x01\n" +
	"\x10ProcessingStatus\x12!\n" +
	"\x1dPROCESSING_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19PROCESSING_STATUS_SUCCESS\x10\x01\x12\x1b\n" +
	"\x17PROCESSING_STATUS_ERROR\x10\x02\x12\x1d\n" +
	"\x19PROCESSING_STATUS_PENDING\x10\x03*\x8a\x01\n" +
	"\fHealthStatus\x12\x1d\n" +
	"\x19HEALTH_STATUS_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15HEALTH_STATUS_SERVING\x10\x01\x12\x1d\n" +
	"\x19HEALTH_STATUS_NOT_SERVING\x10\x02\x12!\n" +
	"\x1dHEALTH_STATUS_SERVICE_UNKNOWN\x10\x032\xc2\x01\n" +
	"\x17FreightProcessorService\x12W\n" +
	"\x0eProcessFreight\x12!.freight.v1.ProcessFreightRequest\x1a\".freight.v1.ProcessFreightResponse\x12N\n" +
	"\vHealthCheck\x12\x1e.freight.v1.HealthCheckRequest\x1a\x1f.freight.v1.HealthCheckResponseB<Z:github.com/akuity/kargo/pkg/generated/freight/v1;freightv1b\x06proto3"

var (
	file_freight_proto_rawDescOnce sync.Once
	file_freight_proto_rawDescData []byte
)

func file_freight_proto_rawDescGZIP() []byte {
	file_freight_proto_rawDescOnce.Do(func() {
		file_freight_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_freight_proto_rawDesc), len(file_freight_proto_rawDesc)))
	})
	return file_freight_proto_rawDescData
}

var file_freight_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_freight_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_freight_proto_goTypes = []any{
	(ProcessingStatus)(0),          // 0: freight.v1.ProcessingStatus
	(HealthStatus)(0),              // 1: freight.v1.HealthStatus
	(*ProcessFreightRequest)(nil),  // 2: freight.v1.ProcessFreightRequest
	(*ProcessFreightResponse)(nil), // 3: freight.v1.ProcessFreightResponse
	(*PromotionContext)(nil),       // 4: freight.v1.PromotionContext
	(*FreightCollection)(nil),      // 5: freight.v1.FreightCollection
	(*FreightReference)(nil),       // 6: freight.v1.FreightReference
	(*FreightOrigin)(nil),          // 7: freight.v1.FreightOrigin
	(*GitCommit)(nil),              // 8: freight.v1.GitCommit
	(*GitUser)(nil),                // 9: freight.v1.GitUser
	(*Image)(nil),                  // 10: freight.v1.Image
	(*Chart)(nil),                  // 11: freight.v1.Chart
	(*HealthCheckRequest)(nil),     // 12: freight.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),    // 13: freight.v1.HealthCheckResponse
	nil,                            // 14: freight.v1.ProcessFreightRequest.ConfigEntry
	nil,                            // 15: freight.v1.ProcessFreightRequest.EnvEntry
	nil,                            // 16: freight.v1.ProcessFreightResponse.OutputEntry
	nil,                            // 17: freight.v1.FreightCollection.FreightEntry
	nil,                            // 18: freight.v1.FreightReference.MetadataEntry
	nil,                            // 19: freight.v1.Image.AnnotationsEntry
	nil,                            // 20: freight.v1.Chart.MetadataEntry
	(*timestamppb.Timestamp)(nil),  // 21: google.protobuf.Timestamp
}
var file_freight_proto_depIdxs = []int32{
	4,  // 0: freight.v1.ProcessFreightRequest.context:type_name -> freight.v1.PromotionContext
	5,  // 1: freight.v1.ProcessFreightRequest.freight:type_name -> freight.v1.FreightCollection
	6,  // 2: freight.v1.ProcessFreightRequest.target_freight:type_name -> freight.v1.FreightReference
	14, // 3: freight.v1.ProcessFreightRequest.config:type_name -> freight.v1.ProcessFreightRequest.ConfigEntry
	15, // 4: freight.v1.ProcessFreightRequest.env:type_name -> freight.v1.ProcessFreightRequest.EnvEntry
	0,  // 5: freight.v1.ProcessFreightResponse.status:type_name -> freight.v1.ProcessingStatus
	5,  // 6: freight.v1.ProcessFreightResponse.modified_freight:type_name -> freight.v1.FreightCollection
	16, // 7: freight.v1.ProcessFreightResponse.output:type_name -> freight.v1.ProcessFreightResponse.OutputEntry
	17, // 8: freight.v1.FreightCollection.freight:type_name -> freight.v1.FreightCollection.FreightEntry
	7,  // 9: freight.v1.FreightReference.origin:type_name -> freight.v1.FreightOrigin
	8,  // 10: freight.v1.FreightReference.commits:type_name -> freight.v1.GitCommit
	10, // 11: freight.v1.FreightReference.images:type_name -> freight.v1.Image
	11, // 12: freight.v1.FreightReference.charts:type_name -> freight.v1.Chart
	18, // 13: freight.v1.FreightReference.metadata:type_name -> freight.v1.FreightReference.MetadataEntry
	9,  // 14: freight.v1.GitCommit.author:type_name -> freight.v1.GitUser
	9,  // 15: freight.v1.GitCommit.committer:type_name -> freight.v1.GitUser
	21, // 16: freight.v1.GitCommit.timestamp:type_name -> google.protobuf.Timestamp
	21, // 17: freight.v1.GitUser.when:type_name -> google.protobuf.Timestamp
	21, // 18: freight.v1.Image.created_at:type_name -> google.protobuf.Timestamp
	19, // 19: freight.v1.Image.annotations:type_name -> freight.v1.Image.AnnotationsEntry
	20, // 20: freight.v1.Chart.metadata:type_name -> freight.v1.Chart.MetadataEntry
	1,  // 21: freight.v1.HealthCheckResponse.status:type_name -> freight.v1.HealthStatus
	6,  // 22: freight.v1.FreightCollection.FreightEntry.value:type_name -> freight.v1.FreightReference
	2,  // 23: freight.v1.FreightProcessorService.ProcessFreight:input_type -> freight.v1.ProcessFreightRequest
	12, // 24: freight.v1.FreightProcessorService.HealthCheck:input_type -> freight.v1.HealthCheckRequest
	3,  // 25: freight.v1.FreightProcessorService.ProcessFreight:output_type -> freight.v1.ProcessFreightResponse
	13, // 26: freight.v1.FreightProcessorService.HealthCheck:output_type -> freight.v1.HealthCheckResponse
	25, // [25:27] is the sub-list for method output_type
	23, // [23:25] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_freight_proto_init() }
func file_freight_proto_init() {
	if File_freight_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_freight_proto_rawDesc), len(file_freight_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_freight_proto_goTypes,
		DependencyIndexes: file_freight_proto_depIdxs,
		EnumInfos:         file_freight_proto_enumTypes,
		MessageInfos:      file_freight_proto_msgTypes,
	}.Build()
	File_freight_proto = out.File
	file_freight_proto_goTypes = nil
	file_freight_proto_depIdxs = nil
}
