name: CI

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main

jobs:

  test-unit:
    runs-on: ubuntu-latest
    container:
      image: golang:1.19.3-bullseye
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: /go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Allow access to private modules
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: git config --global url."https://krancour:${GH_TOKEN}@github.com".insteadOf https://github.com
    - name: Run unit tests
      run: make test-unit
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  lint:
    runs-on: ubuntu-latest
    container:
      image: golang:1.19.3-bullseye
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: /go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Allow access to private modules
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: git config --global url."https://krancour:${GH_TOKEN}@github.com".insteadOf https://github.com
    - name: Install linter
      run: |
        cd /usr/local/bin
        curl -sSfL https://github.com/golangci/golangci-lint/releases/download/v1.49.0/golangci-lint-1.49.0-linux-amd64.tar.gz \
          | tar xvz golangci-lint-1.49.0-linux-amd64/golangci-lint --strip-components=1
    - name: Run linter
      run: make lint

  check-codegen:
    runs-on: ubuntu-latest
    container:
      image: golang:1.19.3-bullseye
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        path: /go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Allow access to private modules
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: git config --global url."https://krancour:${GH_TOKEN}@github.com".insteadOf https://github.com
    - name: Install controller-gen
      run: go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.10.0
    - name: Run Codegen
      run: make codegen
    - name: Check nothing has changed
      run: git diff --exit-code -- .

  lint-chart:
    runs-on: ubuntu-latest
    container:
      image: golang:1.19.3-bullseye
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install linter
      run: |
        cd /usr/local/bin
        curl -sSfL https://get.helm.sh/helm-v3.10.0-linux-amd64.tar.gz \
        | tar xvz linux-amd64/helm --strip-components=1
    - name: Run linter
      run: make lint-chart

  build:
    needs: [test-unit, lint, check-codegen, lint-chart]
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.GH_USERNAME }}
        password: ${{ secrets.GH_TOKEN }}
    - name: Build
      uses: docker/build-push-action@v3
      with:
        platforms: linux/amd64,linux/arm64
        push: false
        cache-from: type=gha
        cache-to: type=gha,mode=max
