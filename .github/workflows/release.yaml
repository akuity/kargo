name: Release

on:
  release:
    types: 
    - created

jobs:

  push:
    runs-on: ubuntu-latest
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Install Cosign
      uses: sigstore/cosign-installer@v2
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.GH_USERNAME }}
        password: ${{ secrets.GH_TOKEN }}
    - name: Checkout
      uses: actions/checkout@v3
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/akuityio/kargo
        flavor: latest=false
        tags: type=semver,pattern={{raw}}
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        platforms: linux/amd64,linux/arm64
        build-args: |
          VERSION=${{ github.ref_name }}
        tags: ${{ steps.meta.outputs.tags }}
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
    - name: Sign image
      env:
        TAGS: ${{ steps.meta.outputs.tags }}
        COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
        COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      run: cosign sign --key env://COSIGN_PRIVATE_KEY ${TAGS}
    - name: Publish SBOM
      uses: anchore/sbom-action@v0
      with:
        image: ${{ steps.meta.outputs.tags }}

  publish-charts:
    needs: push
    runs-on: ubuntu-latest
    steps:
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: '3.10.0'
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ secrets.GH_USERNAME }}
        password: ${{ secrets.GH_TOKEN }}
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Publish chart
      env:
        HELM_EXPERIMENTAL_OCI: '1'
        KARGO_CHARTS_REPO: ghcr.io/akuityio/kargo-charts
        VERSION: ${{ github.ref_name }}
      run: |
        CHART_VERSION=$(echo $VERSION | cut -c 2-)
        cd charts/kargo
        helm dep up
        helm package . --version ${CHART_VERSION} --app-version ${VERSION}
        helm push kargo-${CHART_VERSION}.tgz oci://${KARGO_CHARTS_REPO}
        cd ../kargo-kit
        helm dep up
        helm package . --version ${CHART_VERSION}
        helm push kargo-kit-${CHART_VERSION}.tgz oci://${KARGO_CHARTS_REPO}
