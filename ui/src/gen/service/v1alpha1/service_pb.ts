// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file service/v1alpha1/service.proto (package akuity.io.kargo.service.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Promotion, Stage, StageSpec } from "../../v1alpha1/generated_pb.js";

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateStageRequest
 */
export class CreateStageRequest extends Message<CreateStageRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.StageSpec spec = 3;
   */
  spec?: StageSpec;

  constructor(data?: PartialMessage<CreateStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "spec", kind: "message", T: StageSpec },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateStageRequest {
    return new CreateStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateStageRequest {
    return new CreateStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateStageRequest {
    return new CreateStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateStageRequest | PlainMessage<CreateStageRequest> | undefined, b: CreateStageRequest | PlainMessage<CreateStageRequest> | undefined): boolean {
    return proto3.util.equals(CreateStageRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateStageResponse
 */
export class CreateStageResponse extends Message<CreateStageResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Stage stage = 1;
   */
  stage?: Stage;

  constructor(data?: PartialMessage<CreateStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stage", kind: "message", T: Stage },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateStageResponse {
    return new CreateStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateStageResponse {
    return new CreateStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateStageResponse {
    return new CreateStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateStageResponse | PlainMessage<CreateStageResponse> | undefined, b: CreateStageResponse | PlainMessage<CreateStageResponse> | undefined): boolean {
    return proto3.util.equals(CreateStageResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ListStagesRequest
 */
export class ListStagesRequest extends Message<ListStagesRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  constructor(data?: PartialMessage<ListStagesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListStagesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListStagesRequest {
    return new ListStagesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListStagesRequest {
    return new ListStagesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListStagesRequest {
    return new ListStagesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListStagesRequest | PlainMessage<ListStagesRequest> | undefined, b: ListStagesRequest | PlainMessage<ListStagesRequest> | undefined): boolean {
    return proto3.util.equals(ListStagesRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ListStagesResponse
 */
export class ListStagesResponse extends Message<ListStagesResponse> {
  /**
   * @generated from field: repeated github.com.akuity.kargo.pkg.api.v1alpha1.Stage stages = 1;
   */
  stages: Stage[] = [];

  constructor(data?: PartialMessage<ListStagesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListStagesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stages", kind: "message", T: Stage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListStagesResponse {
    return new ListStagesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListStagesResponse {
    return new ListStagesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListStagesResponse {
    return new ListStagesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListStagesResponse | PlainMessage<ListStagesResponse> | undefined, b: ListStagesResponse | PlainMessage<ListStagesResponse> | undefined): boolean {
    return proto3.util.equals(ListStagesResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetStageRequest
 */
export class GetStageRequest extends Message<GetStageRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<GetStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStageRequest {
    return new GetStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStageRequest {
    return new GetStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStageRequest {
    return new GetStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetStageRequest | PlainMessage<GetStageRequest> | undefined, b: GetStageRequest | PlainMessage<GetStageRequest> | undefined): boolean {
    return proto3.util.equals(GetStageRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetStageResponse
 */
export class GetStageResponse extends Message<GetStageResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Stage stage = 1;
   */
  stage?: Stage;

  constructor(data?: PartialMessage<GetStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stage", kind: "message", T: Stage },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStageResponse {
    return new GetStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStageResponse {
    return new GetStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStageResponse {
    return new GetStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetStageResponse | PlainMessage<GetStageResponse> | undefined, b: GetStageResponse | PlainMessage<GetStageResponse> | undefined): boolean {
    return proto3.util.equals(GetStageResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.DeleteStageRequest
 */
export class DeleteStageRequest extends Message<DeleteStageRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeleteStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteStageRequest {
    return new DeleteStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteStageRequest {
    return new DeleteStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteStageRequest {
    return new DeleteStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteStageRequest | PlainMessage<DeleteStageRequest> | undefined, b: DeleteStageRequest | PlainMessage<DeleteStageRequest> | undefined): boolean {
    return proto3.util.equals(DeleteStageRequest, a, b);
  }
}

/**
 * explicitly empty 
 *
 * @generated from message akuity.io.kargo.service.v1alpha1.DeleteStageResponse
 */
export class DeleteStageResponse extends Message<DeleteStageResponse> {
  constructor(data?: PartialMessage<DeleteStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeleteStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteStageResponse {
    return new DeleteStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteStageResponse {
    return new DeleteStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteStageResponse {
    return new DeleteStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteStageResponse | PlainMessage<DeleteStageResponse> | undefined, b: DeleteStageResponse | PlainMessage<DeleteStageResponse> | undefined): boolean {
    return proto3.util.equals(DeleteStageResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.PromoteStageRequest
 */
export class PromoteStageRequest extends Message<PromoteStageRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string state = 3;
   */
  state = "";

  constructor(data?: PartialMessage<PromoteStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.PromoteStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "state", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PromoteStageRequest {
    return new PromoteStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PromoteStageRequest {
    return new PromoteStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PromoteStageRequest {
    return new PromoteStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PromoteStageRequest | PlainMessage<PromoteStageRequest> | undefined, b: PromoteStageRequest | PlainMessage<PromoteStageRequest> | undefined): boolean {
    return proto3.util.equals(PromoteStageRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.PromoteStageResponse
 */
export class PromoteStageResponse extends Message<PromoteStageResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Promotion promotion = 1;
   */
  promotion?: Promotion;

  constructor(data?: PartialMessage<PromoteStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.PromoteStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotion", kind: "message", T: Promotion },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PromoteStageResponse {
    return new PromoteStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PromoteStageResponse {
    return new PromoteStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PromoteStageResponse {
    return new PromoteStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PromoteStageResponse | PlainMessage<PromoteStageResponse> | undefined, b: PromoteStageResponse | PlainMessage<PromoteStageResponse> | undefined): boolean {
    return proto3.util.equals(PromoteStageResponse, a, b);
  }
}

/**
 * explicitly empty 
 *
 * @generated from message akuity.io.kargo.service.v1alpha1.ListProjectsRequest
 */
export class ListProjectsRequest extends Message<ListProjectsRequest> {
  constructor(data?: PartialMessage<ListProjectsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListProjectsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectsRequest {
    return new ListProjectsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectsRequest {
    return new ListProjectsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectsRequest {
    return new ListProjectsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectsRequest | PlainMessage<ListProjectsRequest> | undefined, b: ListProjectsRequest | PlainMessage<ListProjectsRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectsRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ListProjectsResponse
 */
export class ListProjectsResponse extends Message<ListProjectsResponse> {
  /**
   * @generated from field: repeated akuity.io.kargo.service.v1alpha1.Project projects = 1;
   */
  projects: Project[] = [];

  constructor(data?: PartialMessage<ListProjectsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListProjectsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "projects", kind: "message", T: Project, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectsResponse {
    return new ListProjectsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectsResponse {
    return new ListProjectsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectsResponse {
    return new ListProjectsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectsResponse | PlainMessage<ListProjectsResponse> | undefined, b: ListProjectsResponse | PlainMessage<ListProjectsResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectsResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.Project
 */
export class Project extends Message<Project> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<Project>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.Project";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Project {
    return new Project().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Project {
    return new Project().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Project {
    return new Project().fromJsonString(jsonString, options);
  }

  static equals(a: Project | PlainMessage<Project> | undefined, b: Project | PlainMessage<Project> | undefined): boolean {
    return proto3.util.equals(Project, a, b);
  }
}

