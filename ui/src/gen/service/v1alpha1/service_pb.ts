// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file service/v1alpha1/service.proto (package akuity.io.kargo.service.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Freight, Promotion, PromotionPolicy, Stage, StageSpec } from "../../v1alpha1/types_pb.js";

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ComponentVersions
 */
export class ComponentVersions extends Message<ComponentVersions> {
  /**
   * @generated from field: optional akuity.io.kargo.service.v1alpha1.VersionInfo server = 1;
   */
  server?: VersionInfo;

  /**
   * @generated from field: optional akuity.io.kargo.service.v1alpha1.VersionInfo cli = 2;
   */
  cli?: VersionInfo;

  constructor(data?: PartialMessage<ComponentVersions>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ComponentVersions";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "server", kind: "message", T: VersionInfo, opt: true },
    { no: 2, name: "cli", kind: "message", T: VersionInfo, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ComponentVersions {
    return new ComponentVersions().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ComponentVersions {
    return new ComponentVersions().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ComponentVersions {
    return new ComponentVersions().fromJsonString(jsonString, options);
  }

  static equals(a: ComponentVersions | PlainMessage<ComponentVersions> | undefined, b: ComponentVersions | PlainMessage<ComponentVersions> | undefined): boolean {
    return proto3.util.equals(ComponentVersions, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.VersionInfo
 */
export class VersionInfo extends Message<VersionInfo> {
  /**
   * @generated from field: string version = 1;
   */
  version = "";

  /**
   * @generated from field: string git_commit = 2;
   */
  gitCommit = "";

  /**
   * @generated from field: bool git_tree_dirty = 3;
   */
  gitTreeDirty = false;

  /**
   * @generated from field: google.protobuf.Timestamp build_time = 4;
   */
  buildTime?: Timestamp;

  /**
   * @generated from field: string go_version = 5;
   */
  goVersion = "";

  /**
   * @generated from field: string compiler = 6;
   */
  compiler = "";

  /**
   * @generated from field: string platform = 7;
   */
  platform = "";

  constructor(data?: PartialMessage<VersionInfo>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.VersionInfo";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "git_commit", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "git_tree_dirty", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "build_time", kind: "message", T: Timestamp },
    { no: 5, name: "go_version", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "compiler", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "platform", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): VersionInfo {
    return new VersionInfo().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): VersionInfo {
    return new VersionInfo().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): VersionInfo {
    return new VersionInfo().fromJsonString(jsonString, options);
  }

  static equals(a: VersionInfo | PlainMessage<VersionInfo> | undefined, b: VersionInfo | PlainMessage<VersionInfo> | undefined): boolean {
    return proto3.util.equals(VersionInfo, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetVersionInfoRequest
 */
export class GetVersionInfoRequest extends Message<GetVersionInfoRequest> {
  constructor(data?: PartialMessage<GetVersionInfoRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetVersionInfoRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVersionInfoRequest {
    return new GetVersionInfoRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVersionInfoRequest {
    return new GetVersionInfoRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVersionInfoRequest {
    return new GetVersionInfoRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetVersionInfoRequest | PlainMessage<GetVersionInfoRequest> | undefined, b: GetVersionInfoRequest | PlainMessage<GetVersionInfoRequest> | undefined): boolean {
    return proto3.util.equals(GetVersionInfoRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetVersionInfoResponse
 */
export class GetVersionInfoResponse extends Message<GetVersionInfoResponse> {
  /**
   * @generated from field: akuity.io.kargo.service.v1alpha1.VersionInfo version_info = 1;
   */
  versionInfo?: VersionInfo;

  constructor(data?: PartialMessage<GetVersionInfoResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetVersionInfoResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "version_info", kind: "message", T: VersionInfo },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetVersionInfoResponse {
    return new GetVersionInfoResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetVersionInfoResponse {
    return new GetVersionInfoResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetVersionInfoResponse {
    return new GetVersionInfoResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetVersionInfoResponse | PlainMessage<GetVersionInfoResponse> | undefined, b: GetVersionInfoResponse | PlainMessage<GetVersionInfoResponse> | undefined): boolean {
    return proto3.util.equals(GetVersionInfoResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetConfigRequest
 */
export class GetConfigRequest extends Message<GetConfigRequest> {
  constructor(data?: PartialMessage<GetConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConfigRequest {
    return new GetConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConfigRequest {
    return new GetConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConfigRequest {
    return new GetConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetConfigRequest | PlainMessage<GetConfigRequest> | undefined, b: GetConfigRequest | PlainMessage<GetConfigRequest> | undefined): boolean {
    return proto3.util.equals(GetConfigRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ArgoCDShard
 */
export class ArgoCDShard extends Message<ArgoCDShard> {
  /**
   * @generated from field: string url = 1;
   */
  url = "";

  /**
   * @generated from field: string namespace = 2;
   */
  namespace = "";

  constructor(data?: PartialMessage<ArgoCDShard>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ArgoCDShard";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "namespace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ArgoCDShard {
    return new ArgoCDShard().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ArgoCDShard {
    return new ArgoCDShard().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ArgoCDShard {
    return new ArgoCDShard().fromJsonString(jsonString, options);
  }

  static equals(a: ArgoCDShard | PlainMessage<ArgoCDShard> | undefined, b: ArgoCDShard | PlainMessage<ArgoCDShard> | undefined): boolean {
    return proto3.util.equals(ArgoCDShard, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetConfigResponse
 */
export class GetConfigResponse extends Message<GetConfigResponse> {
  /**
   * @generated from field: map<string, akuity.io.kargo.service.v1alpha1.ArgoCDShard> argocd_shards = 1;
   */
  argocdShards: { [key: string]: ArgoCDShard } = {};

  constructor(data?: PartialMessage<GetConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "argocd_shards", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: ArgoCDShard} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetConfigResponse {
    return new GetConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetConfigResponse {
    return new GetConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetConfigResponse {
    return new GetConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetConfigResponse | PlainMessage<GetConfigResponse> | undefined, b: GetConfigResponse | PlainMessage<GetConfigResponse> | undefined): boolean {
    return proto3.util.equals(GetConfigResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetPublicConfigRequest
 */
export class GetPublicConfigRequest extends Message<GetPublicConfigRequest> {
  constructor(data?: PartialMessage<GetPublicConfigRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetPublicConfigRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPublicConfigRequest {
    return new GetPublicConfigRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPublicConfigRequest {
    return new GetPublicConfigRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPublicConfigRequest {
    return new GetPublicConfigRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPublicConfigRequest | PlainMessage<GetPublicConfigRequest> | undefined, b: GetPublicConfigRequest | PlainMessage<GetPublicConfigRequest> | undefined): boolean {
    return proto3.util.equals(GetPublicConfigRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetPublicConfigResponse
 */
export class GetPublicConfigResponse extends Message<GetPublicConfigResponse> {
  /**
   * @generated from field: akuity.io.kargo.service.v1alpha1.OIDCConfig oidc_config = 1;
   */
  oidcConfig?: OIDCConfig;

  /**
   * @generated from field: bool admin_account_enabled = 2;
   */
  adminAccountEnabled = false;

  constructor(data?: PartialMessage<GetPublicConfigResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetPublicConfigResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "oidc_config", kind: "message", T: OIDCConfig },
    { no: 2, name: "admin_account_enabled", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPublicConfigResponse {
    return new GetPublicConfigResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPublicConfigResponse {
    return new GetPublicConfigResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPublicConfigResponse {
    return new GetPublicConfigResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPublicConfigResponse | PlainMessage<GetPublicConfigResponse> | undefined, b: GetPublicConfigResponse | PlainMessage<GetPublicConfigResponse> | undefined): boolean {
    return proto3.util.equals(GetPublicConfigResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.OIDCConfig
 */
export class OIDCConfig extends Message<OIDCConfig> {
  /**
   * @generated from field: string issuer_url = 1;
   */
  issuerUrl = "";

  /**
   * @generated from field: string client_id = 2;
   */
  clientId = "";

  /**
   * @generated from field: repeated string scopes = 3;
   */
  scopes: string[] = [];

  /**
   * @generated from field: string cli_client_id = 4;
   */
  cliClientId = "";

  constructor(data?: PartialMessage<OIDCConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.OIDCConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "issuer_url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "cli_client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OIDCConfig {
    return new OIDCConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OIDCConfig {
    return new OIDCConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OIDCConfig {
    return new OIDCConfig().fromJsonString(jsonString, options);
  }

  static equals(a: OIDCConfig | PlainMessage<OIDCConfig> | undefined, b: OIDCConfig | PlainMessage<OIDCConfig> | undefined): boolean {
    return proto3.util.equals(OIDCConfig, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.AdminLoginRequest
 */
export class AdminLoginRequest extends Message<AdminLoginRequest> {
  /**
   * @generated from field: string password = 1;
   */
  password = "";

  constructor(data?: PartialMessage<AdminLoginRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.AdminLoginRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "password", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminLoginRequest {
    return new AdminLoginRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminLoginRequest {
    return new AdminLoginRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminLoginRequest {
    return new AdminLoginRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AdminLoginRequest | PlainMessage<AdminLoginRequest> | undefined, b: AdminLoginRequest | PlainMessage<AdminLoginRequest> | undefined): boolean {
    return proto3.util.equals(AdminLoginRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.AdminLoginResponse
 */
export class AdminLoginResponse extends Message<AdminLoginResponse> {
  /**
   * @generated from field: string id_token = 1;
   */
  idToken = "";

  constructor(data?: PartialMessage<AdminLoginResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.AdminLoginResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AdminLoginResponse {
    return new AdminLoginResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AdminLoginResponse {
    return new AdminLoginResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AdminLoginResponse {
    return new AdminLoginResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AdminLoginResponse | PlainMessage<AdminLoginResponse> | undefined, b: AdminLoginResponse | PlainMessage<AdminLoginResponse> | undefined): boolean {
    return proto3.util.equals(AdminLoginResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.TypedStageSpec
 */
export class TypedStageSpec extends Message<TypedStageSpec> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.StageSpec spec = 3;
   */
  spec?: StageSpec;

  constructor(data?: PartialMessage<TypedStageSpec>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.TypedStageSpec";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "spec", kind: "message", T: StageSpec },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypedStageSpec {
    return new TypedStageSpec().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypedStageSpec {
    return new TypedStageSpec().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypedStageSpec {
    return new TypedStageSpec().fromJsonString(jsonString, options);
  }

  static equals(a: TypedStageSpec | PlainMessage<TypedStageSpec> | undefined, b: TypedStageSpec | PlainMessage<TypedStageSpec> | undefined): boolean {
    return proto3.util.equals(TypedStageSpec, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateResourceRequest
 */
export class CreateResourceRequest extends Message<CreateResourceRequest> {
  /**
   * @generated from field: bytes manifest = 1;
   */
  manifest = new Uint8Array(0);

  constructor(data?: PartialMessage<CreateResourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateResourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "manifest", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateResourceRequest {
    return new CreateResourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateResourceRequest {
    return new CreateResourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateResourceRequest {
    return new CreateResourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateResourceRequest | PlainMessage<CreateResourceRequest> | undefined, b: CreateResourceRequest | PlainMessage<CreateResourceRequest> | undefined): boolean {
    return proto3.util.equals(CreateResourceRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateResourceResult
 */
export class CreateResourceResult extends Message<CreateResourceResult> {
  /**
   * @generated from oneof akuity.io.kargo.service.v1alpha1.CreateResourceResult.result
   */
  result: {
    /**
     * @generated from field: bytes created_resource_manifest = 1;
     */
    value: Uint8Array;
    case: "createdResourceManifest";
  } | {
    /**
     * @generated from field: string error = 2;
     */
    value: string;
    case: "error";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreateResourceResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateResourceResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "created_resource_manifest", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
    { no: 2, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "result" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateResourceResult {
    return new CreateResourceResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateResourceResult {
    return new CreateResourceResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateResourceResult {
    return new CreateResourceResult().fromJsonString(jsonString, options);
  }

  static equals(a: CreateResourceResult | PlainMessage<CreateResourceResult> | undefined, b: CreateResourceResult | PlainMessage<CreateResourceResult> | undefined): boolean {
    return proto3.util.equals(CreateResourceResult, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateResourceResponse
 */
export class CreateResourceResponse extends Message<CreateResourceResponse> {
  /**
   * @generated from field: repeated akuity.io.kargo.service.v1alpha1.CreateResourceResult results = 1;
   */
  results: CreateResourceResult[] = [];

  constructor(data?: PartialMessage<CreateResourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateResourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "results", kind: "message", T: CreateResourceResult, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateResourceResponse {
    return new CreateResourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateResourceResponse {
    return new CreateResourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateResourceResponse {
    return new CreateResourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateResourceResponse | PlainMessage<CreateResourceResponse> | undefined, b: CreateResourceResponse | PlainMessage<CreateResourceResponse> | undefined): boolean {
    return proto3.util.equals(CreateResourceResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateOrUpdateResourceRequest
 */
export class CreateOrUpdateResourceRequest extends Message<CreateOrUpdateResourceRequest> {
  /**
   * @generated from field: bytes manifest = 1;
   */
  manifest = new Uint8Array(0);

  constructor(data?: PartialMessage<CreateOrUpdateResourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateOrUpdateResourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "manifest", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrUpdateResourceRequest {
    return new CreateOrUpdateResourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrUpdateResourceRequest {
    return new CreateOrUpdateResourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrUpdateResourceRequest {
    return new CreateOrUpdateResourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrUpdateResourceRequest | PlainMessage<CreateOrUpdateResourceRequest> | undefined, b: CreateOrUpdateResourceRequest | PlainMessage<CreateOrUpdateResourceRequest> | undefined): boolean {
    return proto3.util.equals(CreateOrUpdateResourceRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateOrUpdateResourceResult
 */
export class CreateOrUpdateResourceResult extends Message<CreateOrUpdateResourceResult> {
  /**
   * @generated from oneof akuity.io.kargo.service.v1alpha1.CreateOrUpdateResourceResult.result
   */
  result: {
    /**
     * @generated from field: bytes created_resource_manifest = 1;
     */
    value: Uint8Array;
    case: "createdResourceManifest";
  } | {
    /**
     * @generated from field: bytes updated_resource_manifest = 2;
     */
    value: Uint8Array;
    case: "updatedResourceManifest";
  } | {
    /**
     * @generated from field: string error = 3;
     */
    value: string;
    case: "error";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreateOrUpdateResourceResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateOrUpdateResourceResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "created_resource_manifest", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
    { no: 2, name: "updated_resource_manifest", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
    { no: 3, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "result" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrUpdateResourceResult {
    return new CreateOrUpdateResourceResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrUpdateResourceResult {
    return new CreateOrUpdateResourceResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrUpdateResourceResult {
    return new CreateOrUpdateResourceResult().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrUpdateResourceResult | PlainMessage<CreateOrUpdateResourceResult> | undefined, b: CreateOrUpdateResourceResult | PlainMessage<CreateOrUpdateResourceResult> | undefined): boolean {
    return proto3.util.equals(CreateOrUpdateResourceResult, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateOrUpdateResourceResponse
 */
export class CreateOrUpdateResourceResponse extends Message<CreateOrUpdateResourceResponse> {
  /**
   * @generated from field: repeated akuity.io.kargo.service.v1alpha1.CreateOrUpdateResourceResult results = 1;
   */
  results: CreateOrUpdateResourceResult[] = [];

  constructor(data?: PartialMessage<CreateOrUpdateResourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateOrUpdateResourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "results", kind: "message", T: CreateOrUpdateResourceResult, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrUpdateResourceResponse {
    return new CreateOrUpdateResourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrUpdateResourceResponse {
    return new CreateOrUpdateResourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrUpdateResourceResponse {
    return new CreateOrUpdateResourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrUpdateResourceResponse | PlainMessage<CreateOrUpdateResourceResponse> | undefined, b: CreateOrUpdateResourceResponse | PlainMessage<CreateOrUpdateResourceResponse> | undefined): boolean {
    return proto3.util.equals(CreateOrUpdateResourceResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.UpdateResourceRequest
 */
export class UpdateResourceRequest extends Message<UpdateResourceRequest> {
  /**
   * @generated from field: bytes manifest = 1;
   */
  manifest = new Uint8Array(0);

  constructor(data?: PartialMessage<UpdateResourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.UpdateResourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "manifest", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateResourceRequest {
    return new UpdateResourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateResourceRequest {
    return new UpdateResourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateResourceRequest {
    return new UpdateResourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateResourceRequest | PlainMessage<UpdateResourceRequest> | undefined, b: UpdateResourceRequest | PlainMessage<UpdateResourceRequest> | undefined): boolean {
    return proto3.util.equals(UpdateResourceRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.UpdateResourceResult
 */
export class UpdateResourceResult extends Message<UpdateResourceResult> {
  /**
   * @generated from oneof akuity.io.kargo.service.v1alpha1.UpdateResourceResult.result
   */
  result: {
    /**
     * @generated from field: bytes updated_resource_manifest = 1;
     */
    value: Uint8Array;
    case: "updatedResourceManifest";
  } | {
    /**
     * @generated from field: string error = 2;
     */
    value: string;
    case: "error";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UpdateResourceResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.UpdateResourceResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "updated_resource_manifest", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
    { no: 2, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "result" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateResourceResult {
    return new UpdateResourceResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateResourceResult {
    return new UpdateResourceResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateResourceResult {
    return new UpdateResourceResult().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateResourceResult | PlainMessage<UpdateResourceResult> | undefined, b: UpdateResourceResult | PlainMessage<UpdateResourceResult> | undefined): boolean {
    return proto3.util.equals(UpdateResourceResult, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.UpdateResourceResponse
 */
export class UpdateResourceResponse extends Message<UpdateResourceResponse> {
  /**
   * @generated from field: repeated akuity.io.kargo.service.v1alpha1.UpdateResourceResult results = 1;
   */
  results: UpdateResourceResult[] = [];

  constructor(data?: PartialMessage<UpdateResourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.UpdateResourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "results", kind: "message", T: UpdateResourceResult, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateResourceResponse {
    return new UpdateResourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateResourceResponse {
    return new UpdateResourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateResourceResponse {
    return new UpdateResourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateResourceResponse | PlainMessage<UpdateResourceResponse> | undefined, b: UpdateResourceResponse | PlainMessage<UpdateResourceResponse> | undefined): boolean {
    return proto3.util.equals(UpdateResourceResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.DeleteResourceRequest
 */
export class DeleteResourceRequest extends Message<DeleteResourceRequest> {
  /**
   * @generated from field: bytes manifest = 1;
   */
  manifest = new Uint8Array(0);

  constructor(data?: PartialMessage<DeleteResourceRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeleteResourceRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "manifest", kind: "scalar", T: 12 /* ScalarType.BYTES */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResourceRequest {
    return new DeleteResourceRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResourceRequest {
    return new DeleteResourceRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResourceRequest {
    return new DeleteResourceRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteResourceRequest | PlainMessage<DeleteResourceRequest> | undefined, b: DeleteResourceRequest | PlainMessage<DeleteResourceRequest> | undefined): boolean {
    return proto3.util.equals(DeleteResourceRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.DeleteResourceResult
 */
export class DeleteResourceResult extends Message<DeleteResourceResult> {
  /**
   * @generated from oneof akuity.io.kargo.service.v1alpha1.DeleteResourceResult.result
   */
  result: {
    /**
     * @generated from field: bytes deleted_resource_manifest = 1;
     */
    value: Uint8Array;
    case: "deletedResourceManifest";
  } | {
    /**
     * @generated from field: string error = 2;
     */
    value: string;
    case: "error";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<DeleteResourceResult>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeleteResourceResult";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "deleted_resource_manifest", kind: "scalar", T: 12 /* ScalarType.BYTES */, oneof: "result" },
    { no: 2, name: "error", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "result" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResourceResult {
    return new DeleteResourceResult().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResourceResult {
    return new DeleteResourceResult().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResourceResult {
    return new DeleteResourceResult().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteResourceResult | PlainMessage<DeleteResourceResult> | undefined, b: DeleteResourceResult | PlainMessage<DeleteResourceResult> | undefined): boolean {
    return proto3.util.equals(DeleteResourceResult, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.DeleteResourceResponse
 */
export class DeleteResourceResponse extends Message<DeleteResourceResponse> {
  /**
   * @generated from field: repeated akuity.io.kargo.service.v1alpha1.DeleteResourceResult results = 1;
   */
  results: DeleteResourceResult[] = [];

  constructor(data?: PartialMessage<DeleteResourceResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeleteResourceResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "results", kind: "message", T: DeleteResourceResult, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteResourceResponse {
    return new DeleteResourceResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteResourceResponse {
    return new DeleteResourceResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteResourceResponse {
    return new DeleteResourceResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteResourceResponse | PlainMessage<DeleteResourceResponse> | undefined, b: DeleteResourceResponse | PlainMessage<DeleteResourceResponse> | undefined): boolean {
    return proto3.util.equals(DeleteResourceResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateStageRequest
 */
export class CreateStageRequest extends Message<CreateStageRequest> {
  /**
   * @generated from oneof akuity.io.kargo.service.v1alpha1.CreateStageRequest.stage
   */
  stage: {
    /**
     * @generated from field: akuity.io.kargo.service.v1alpha1.TypedStageSpec typed = 1;
     */
    value: TypedStageSpec;
    case: "typed";
  } | {
    /**
     * @generated from field: string yaml = 2;
     */
    value: string;
    case: "yaml";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreateStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "typed", kind: "message", T: TypedStageSpec, oneof: "stage" },
    { no: 2, name: "yaml", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "stage" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateStageRequest {
    return new CreateStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateStageRequest {
    return new CreateStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateStageRequest {
    return new CreateStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateStageRequest | PlainMessage<CreateStageRequest> | undefined, b: CreateStageRequest | PlainMessage<CreateStageRequest> | undefined): boolean {
    return proto3.util.equals(CreateStageRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateStageResponse
 */
export class CreateStageResponse extends Message<CreateStageResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Stage stage = 1;
   */
  stage?: Stage;

  constructor(data?: PartialMessage<CreateStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stage", kind: "message", T: Stage },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateStageResponse {
    return new CreateStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateStageResponse {
    return new CreateStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateStageResponse {
    return new CreateStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateStageResponse | PlainMessage<CreateStageResponse> | undefined, b: CreateStageResponse | PlainMessage<CreateStageResponse> | undefined): boolean {
    return proto3.util.equals(CreateStageResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ListStagesRequest
 */
export class ListStagesRequest extends Message<ListStagesRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  constructor(data?: PartialMessage<ListStagesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListStagesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListStagesRequest {
    return new ListStagesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListStagesRequest {
    return new ListStagesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListStagesRequest {
    return new ListStagesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListStagesRequest | PlainMessage<ListStagesRequest> | undefined, b: ListStagesRequest | PlainMessage<ListStagesRequest> | undefined): boolean {
    return proto3.util.equals(ListStagesRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ListStagesResponse
 */
export class ListStagesResponse extends Message<ListStagesResponse> {
  /**
   * @generated from field: repeated github.com.akuity.kargo.pkg.api.v1alpha1.Stage stages = 1;
   */
  stages: Stage[] = [];

  constructor(data?: PartialMessage<ListStagesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListStagesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stages", kind: "message", T: Stage, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListStagesResponse {
    return new ListStagesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListStagesResponse {
    return new ListStagesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListStagesResponse {
    return new ListStagesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListStagesResponse | PlainMessage<ListStagesResponse> | undefined, b: ListStagesResponse | PlainMessage<ListStagesResponse> | undefined): boolean {
    return proto3.util.equals(ListStagesResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetStageRequest
 */
export class GetStageRequest extends Message<GetStageRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<GetStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStageRequest {
    return new GetStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStageRequest {
    return new GetStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStageRequest {
    return new GetStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetStageRequest | PlainMessage<GetStageRequest> | undefined, b: GetStageRequest | PlainMessage<GetStageRequest> | undefined): boolean {
    return proto3.util.equals(GetStageRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetStageResponse
 */
export class GetStageResponse extends Message<GetStageResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Stage stage = 1;
   */
  stage?: Stage;

  constructor(data?: PartialMessage<GetStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stage", kind: "message", T: Stage },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetStageResponse {
    return new GetStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetStageResponse {
    return new GetStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetStageResponse {
    return new GetStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetStageResponse | PlainMessage<GetStageResponse> | undefined, b: GetStageResponse | PlainMessage<GetStageResponse> | undefined): boolean {
    return proto3.util.equals(GetStageResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.WatchStagesRequest
 */
export class WatchStagesRequest extends Message<WatchStagesRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<WatchStagesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.WatchStagesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WatchStagesRequest {
    return new WatchStagesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WatchStagesRequest {
    return new WatchStagesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WatchStagesRequest {
    return new WatchStagesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: WatchStagesRequest | PlainMessage<WatchStagesRequest> | undefined, b: WatchStagesRequest | PlainMessage<WatchStagesRequest> | undefined): boolean {
    return proto3.util.equals(WatchStagesRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.WatchStagesResponse
 */
export class WatchStagesResponse extends Message<WatchStagesResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Stage stage = 1;
   */
  stage?: Stage;

  /**
   * @generated from field: string type = 2;
   */
  type = "";

  constructor(data?: PartialMessage<WatchStagesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.WatchStagesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stage", kind: "message", T: Stage },
    { no: 2, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WatchStagesResponse {
    return new WatchStagesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WatchStagesResponse {
    return new WatchStagesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WatchStagesResponse {
    return new WatchStagesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: WatchStagesResponse | PlainMessage<WatchStagesResponse> | undefined, b: WatchStagesResponse | PlainMessage<WatchStagesResponse> | undefined): boolean {
    return proto3.util.equals(WatchStagesResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.UpdateStageRequest
 */
export class UpdateStageRequest extends Message<UpdateStageRequest> {
  /**
   * @generated from oneof akuity.io.kargo.service.v1alpha1.UpdateStageRequest.stage
   */
  stage: {
    /**
     * @generated from field: akuity.io.kargo.service.v1alpha1.TypedStageSpec typed = 1;
     */
    value: TypedStageSpec;
    case: "typed";
  } | {
    /**
     * @generated from field: string yaml = 2;
     */
    value: string;
    case: "yaml";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UpdateStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.UpdateStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "typed", kind: "message", T: TypedStageSpec, oneof: "stage" },
    { no: 2, name: "yaml", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "stage" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateStageRequest {
    return new UpdateStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateStageRequest {
    return new UpdateStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateStageRequest {
    return new UpdateStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateStageRequest | PlainMessage<UpdateStageRequest> | undefined, b: UpdateStageRequest | PlainMessage<UpdateStageRequest> | undefined): boolean {
    return proto3.util.equals(UpdateStageRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.UpdateStageResponse
 */
export class UpdateStageResponse extends Message<UpdateStageResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Stage stage = 1;
   */
  stage?: Stage;

  constructor(data?: PartialMessage<UpdateStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.UpdateStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stage", kind: "message", T: Stage },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateStageResponse {
    return new UpdateStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateStageResponse {
    return new UpdateStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateStageResponse {
    return new UpdateStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateStageResponse | PlainMessage<UpdateStageResponse> | undefined, b: UpdateStageResponse | PlainMessage<UpdateStageResponse> | undefined): boolean {
    return proto3.util.equals(UpdateStageResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.DeleteStageRequest
 */
export class DeleteStageRequest extends Message<DeleteStageRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeleteStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteStageRequest {
    return new DeleteStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteStageRequest {
    return new DeleteStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteStageRequest {
    return new DeleteStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteStageRequest | PlainMessage<DeleteStageRequest> | undefined, b: DeleteStageRequest | PlainMessage<DeleteStageRequest> | undefined): boolean {
    return proto3.util.equals(DeleteStageRequest, a, b);
  }
}

/**
 * explicitly empty 
 *
 * @generated from message akuity.io.kargo.service.v1alpha1.DeleteStageResponse
 */
export class DeleteStageResponse extends Message<DeleteStageResponse> {
  constructor(data?: PartialMessage<DeleteStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeleteStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteStageResponse {
    return new DeleteStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteStageResponse {
    return new DeleteStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteStageResponse {
    return new DeleteStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteStageResponse | PlainMessage<DeleteStageResponse> | undefined, b: DeleteStageResponse | PlainMessage<DeleteStageResponse> | undefined): boolean {
    return proto3.util.equals(DeleteStageResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.PromoteStageRequest
 */
export class PromoteStageRequest extends Message<PromoteStageRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string freight = 3;
   */
  freight = "";

  constructor(data?: PartialMessage<PromoteStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.PromoteStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "freight", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PromoteStageRequest {
    return new PromoteStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PromoteStageRequest {
    return new PromoteStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PromoteStageRequest {
    return new PromoteStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PromoteStageRequest | PlainMessage<PromoteStageRequest> | undefined, b: PromoteStageRequest | PlainMessage<PromoteStageRequest> | undefined): boolean {
    return proto3.util.equals(PromoteStageRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.PromoteStageResponse
 */
export class PromoteStageResponse extends Message<PromoteStageResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Promotion promotion = 1;
   */
  promotion?: Promotion;

  constructor(data?: PartialMessage<PromoteStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.PromoteStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotion", kind: "message", T: Promotion },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PromoteStageResponse {
    return new PromoteStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PromoteStageResponse {
    return new PromoteStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PromoteStageResponse {
    return new PromoteStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PromoteStageResponse | PlainMessage<PromoteStageResponse> | undefined, b: PromoteStageResponse | PlainMessage<PromoteStageResponse> | undefined): boolean {
    return proto3.util.equals(PromoteStageResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.PromoteSubscribersRequest
 */
export class PromoteSubscribersRequest extends Message<PromoteSubscribersRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string stage = 2;
   */
  stage = "";

  /**
   * @generated from field: string freight = 3;
   */
  freight = "";

  constructor(data?: PartialMessage<PromoteSubscribersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.PromoteSubscribersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "stage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "freight", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PromoteSubscribersRequest {
    return new PromoteSubscribersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PromoteSubscribersRequest {
    return new PromoteSubscribersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PromoteSubscribersRequest {
    return new PromoteSubscribersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PromoteSubscribersRequest | PlainMessage<PromoteSubscribersRequest> | undefined, b: PromoteSubscribersRequest | PlainMessage<PromoteSubscribersRequest> | undefined): boolean {
    return proto3.util.equals(PromoteSubscribersRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.PromoteSubscribersResponse
 */
export class PromoteSubscribersResponse extends Message<PromoteSubscribersResponse> {
  /**
   * @generated from field: repeated github.com.akuity.kargo.pkg.api.v1alpha1.Promotion promotions = 1;
   */
  promotions: Promotion[] = [];

  constructor(data?: PartialMessage<PromoteSubscribersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.PromoteSubscribersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotions", kind: "message", T: Promotion, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PromoteSubscribersResponse {
    return new PromoteSubscribersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PromoteSubscribersResponse {
    return new PromoteSubscribersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PromoteSubscribersResponse {
    return new PromoteSubscribersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PromoteSubscribersResponse | PlainMessage<PromoteSubscribersResponse> | undefined, b: PromoteSubscribersResponse | PlainMessage<PromoteSubscribersResponse> | undefined): boolean {
    return proto3.util.equals(PromoteSubscribersResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.RefreshStageRequest
 */
export class RefreshStageRequest extends Message<RefreshStageRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<RefreshStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.RefreshStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshStageRequest {
    return new RefreshStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshStageRequest {
    return new RefreshStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshStageRequest {
    return new RefreshStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RefreshStageRequest | PlainMessage<RefreshStageRequest> | undefined, b: RefreshStageRequest | PlainMessage<RefreshStageRequest> | undefined): boolean {
    return proto3.util.equals(RefreshStageRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.RefreshStageResponse
 */
export class RefreshStageResponse extends Message<RefreshStageResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Stage stage = 1;
   */
  stage?: Stage;

  constructor(data?: PartialMessage<RefreshStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.RefreshStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "stage", kind: "message", T: Stage },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshStageResponse {
    return new RefreshStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshStageResponse {
    return new RefreshStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshStageResponse {
    return new RefreshStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RefreshStageResponse | PlainMessage<RefreshStageResponse> | undefined, b: RefreshStageResponse | PlainMessage<RefreshStageResponse> | undefined): boolean {
    return proto3.util.equals(RefreshStageResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.TypedPromotionPolicySpec
 */
export class TypedPromotionPolicySpec extends Message<TypedPromotionPolicySpec> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string stage = 3;
   */
  stage = "";

  /**
   * @generated from field: bool enable_auto_promotion = 4;
   */
  enableAutoPromotion = false;

  constructor(data?: PartialMessage<TypedPromotionPolicySpec>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.TypedPromotionPolicySpec";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "stage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "enable_auto_promotion", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TypedPromotionPolicySpec {
    return new TypedPromotionPolicySpec().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TypedPromotionPolicySpec {
    return new TypedPromotionPolicySpec().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TypedPromotionPolicySpec {
    return new TypedPromotionPolicySpec().fromJsonString(jsonString, options);
  }

  static equals(a: TypedPromotionPolicySpec | PlainMessage<TypedPromotionPolicySpec> | undefined, b: TypedPromotionPolicySpec | PlainMessage<TypedPromotionPolicySpec> | undefined): boolean {
    return proto3.util.equals(TypedPromotionPolicySpec, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ListPromotionsRequest
 */
export class ListPromotionsRequest extends Message<ListPromotionsRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: optional string stage = 2;
   */
  stage?: string;

  constructor(data?: PartialMessage<ListPromotionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListPromotionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "stage", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPromotionsRequest {
    return new ListPromotionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPromotionsRequest {
    return new ListPromotionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPromotionsRequest {
    return new ListPromotionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListPromotionsRequest | PlainMessage<ListPromotionsRequest> | undefined, b: ListPromotionsRequest | PlainMessage<ListPromotionsRequest> | undefined): boolean {
    return proto3.util.equals(ListPromotionsRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ListPromotionsResponse
 */
export class ListPromotionsResponse extends Message<ListPromotionsResponse> {
  /**
   * @generated from field: repeated github.com.akuity.kargo.pkg.api.v1alpha1.Promotion promotions = 1;
   */
  promotions: Promotion[] = [];

  constructor(data?: PartialMessage<ListPromotionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListPromotionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotions", kind: "message", T: Promotion, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPromotionsResponse {
    return new ListPromotionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPromotionsResponse {
    return new ListPromotionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPromotionsResponse {
    return new ListPromotionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListPromotionsResponse | PlainMessage<ListPromotionsResponse> | undefined, b: ListPromotionsResponse | PlainMessage<ListPromotionsResponse> | undefined): boolean {
    return proto3.util.equals(ListPromotionsResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.WatchPromotionsRequest
 */
export class WatchPromotionsRequest extends Message<WatchPromotionsRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: optional string stage = 2;
   */
  stage?: string;

  constructor(data?: PartialMessage<WatchPromotionsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.WatchPromotionsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "stage", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WatchPromotionsRequest {
    return new WatchPromotionsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WatchPromotionsRequest {
    return new WatchPromotionsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WatchPromotionsRequest {
    return new WatchPromotionsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: WatchPromotionsRequest | PlainMessage<WatchPromotionsRequest> | undefined, b: WatchPromotionsRequest | PlainMessage<WatchPromotionsRequest> | undefined): boolean {
    return proto3.util.equals(WatchPromotionsRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.WatchPromotionsResponse
 */
export class WatchPromotionsResponse extends Message<WatchPromotionsResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Promotion promotion = 1;
   */
  promotion?: Promotion;

  /**
   * @generated from field: string type = 2;
   */
  type = "";

  constructor(data?: PartialMessage<WatchPromotionsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.WatchPromotionsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotion", kind: "message", T: Promotion },
    { no: 2, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WatchPromotionsResponse {
    return new WatchPromotionsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WatchPromotionsResponse {
    return new WatchPromotionsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WatchPromotionsResponse {
    return new WatchPromotionsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: WatchPromotionsResponse | PlainMessage<WatchPromotionsResponse> | undefined, b: WatchPromotionsResponse | PlainMessage<WatchPromotionsResponse> | undefined): boolean {
    return proto3.util.equals(WatchPromotionsResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetPromotionRequest
 */
export class GetPromotionRequest extends Message<GetPromotionRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<GetPromotionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetPromotionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromotionRequest {
    return new GetPromotionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromotionRequest {
    return new GetPromotionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromotionRequest {
    return new GetPromotionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromotionRequest | PlainMessage<GetPromotionRequest> | undefined, b: GetPromotionRequest | PlainMessage<GetPromotionRequest> | undefined): boolean {
    return proto3.util.equals(GetPromotionRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetPromotionResponse
 */
export class GetPromotionResponse extends Message<GetPromotionResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Promotion promotion = 1;
   */
  promotion?: Promotion;

  constructor(data?: PartialMessage<GetPromotionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetPromotionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotion", kind: "message", T: Promotion },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromotionResponse {
    return new GetPromotionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromotionResponse {
    return new GetPromotionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromotionResponse {
    return new GetPromotionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromotionResponse | PlainMessage<GetPromotionResponse> | undefined, b: GetPromotionResponse | PlainMessage<GetPromotionResponse> | undefined): boolean {
    return proto3.util.equals(GetPromotionResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.WatchPromotionRequest
 */
export class WatchPromotionRequest extends Message<WatchPromotionRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<WatchPromotionRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.WatchPromotionRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WatchPromotionRequest {
    return new WatchPromotionRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WatchPromotionRequest {
    return new WatchPromotionRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WatchPromotionRequest {
    return new WatchPromotionRequest().fromJsonString(jsonString, options);
  }

  static equals(a: WatchPromotionRequest | PlainMessage<WatchPromotionRequest> | undefined, b: WatchPromotionRequest | PlainMessage<WatchPromotionRequest> | undefined): boolean {
    return proto3.util.equals(WatchPromotionRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.WatchPromotionResponse
 */
export class WatchPromotionResponse extends Message<WatchPromotionResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.Promotion promotion = 1;
   */
  promotion?: Promotion;

  /**
   * @generated from field: string type = 2;
   */
  type = "";

  constructor(data?: PartialMessage<WatchPromotionResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.WatchPromotionResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotion", kind: "message", T: Promotion },
    { no: 2, name: "type", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): WatchPromotionResponse {
    return new WatchPromotionResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): WatchPromotionResponse {
    return new WatchPromotionResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): WatchPromotionResponse {
    return new WatchPromotionResponse().fromJsonString(jsonString, options);
  }

  static equals(a: WatchPromotionResponse | PlainMessage<WatchPromotionResponse> | undefined, b: WatchPromotionResponse | PlainMessage<WatchPromotionResponse> | undefined): boolean {
    return proto3.util.equals(WatchPromotionResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.SetAutoPromotionForStageRequest
 */
export class SetAutoPromotionForStageRequest extends Message<SetAutoPromotionForStageRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string stage = 2;
   */
  stage = "";

  /**
   * @generated from field: bool enable = 3;
   */
  enable = false;

  constructor(data?: PartialMessage<SetAutoPromotionForStageRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.SetAutoPromotionForStageRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "stage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "enable", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetAutoPromotionForStageRequest {
    return new SetAutoPromotionForStageRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetAutoPromotionForStageRequest {
    return new SetAutoPromotionForStageRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetAutoPromotionForStageRequest {
    return new SetAutoPromotionForStageRequest().fromJsonString(jsonString, options);
  }

  static equals(a: SetAutoPromotionForStageRequest | PlainMessage<SetAutoPromotionForStageRequest> | undefined, b: SetAutoPromotionForStageRequest | PlainMessage<SetAutoPromotionForStageRequest> | undefined): boolean {
    return proto3.util.equals(SetAutoPromotionForStageRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.SetAutoPromotionForStageResponse
 */
export class SetAutoPromotionForStageResponse extends Message<SetAutoPromotionForStageResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.PromotionPolicy promotion_policy = 1;
   */
  promotionPolicy?: PromotionPolicy;

  constructor(data?: PartialMessage<SetAutoPromotionForStageResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.SetAutoPromotionForStageResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotion_policy", kind: "message", T: PromotionPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SetAutoPromotionForStageResponse {
    return new SetAutoPromotionForStageResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SetAutoPromotionForStageResponse {
    return new SetAutoPromotionForStageResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SetAutoPromotionForStageResponse {
    return new SetAutoPromotionForStageResponse().fromJsonString(jsonString, options);
  }

  static equals(a: SetAutoPromotionForStageResponse | PlainMessage<SetAutoPromotionForStageResponse> | undefined, b: SetAutoPromotionForStageResponse | PlainMessage<SetAutoPromotionForStageResponse> | undefined): boolean {
    return proto3.util.equals(SetAutoPromotionForStageResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreatePromotionPolicyRequest
 */
export class CreatePromotionPolicyRequest extends Message<CreatePromotionPolicyRequest> {
  /**
   * @generated from oneof akuity.io.kargo.service.v1alpha1.CreatePromotionPolicyRequest.promotion_policy
   */
  promotionPolicy: {
    /**
     * @generated from field: akuity.io.kargo.service.v1alpha1.TypedPromotionPolicySpec typed = 1;
     */
    value: TypedPromotionPolicySpec;
    case: "typed";
  } | {
    /**
     * @generated from field: string yaml = 2;
     */
    value: string;
    case: "yaml";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<CreatePromotionPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreatePromotionPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "typed", kind: "message", T: TypedPromotionPolicySpec, oneof: "promotion_policy" },
    { no: 2, name: "yaml", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "promotion_policy" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePromotionPolicyRequest {
    return new CreatePromotionPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePromotionPolicyRequest {
    return new CreatePromotionPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePromotionPolicyRequest {
    return new CreatePromotionPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePromotionPolicyRequest | PlainMessage<CreatePromotionPolicyRequest> | undefined, b: CreatePromotionPolicyRequest | PlainMessage<CreatePromotionPolicyRequest> | undefined): boolean {
    return proto3.util.equals(CreatePromotionPolicyRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreatePromotionPolicyResponse
 */
export class CreatePromotionPolicyResponse extends Message<CreatePromotionPolicyResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.PromotionPolicy promotion_policy = 1;
   */
  promotionPolicy?: PromotionPolicy;

  constructor(data?: PartialMessage<CreatePromotionPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreatePromotionPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotion_policy", kind: "message", T: PromotionPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePromotionPolicyResponse {
    return new CreatePromotionPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePromotionPolicyResponse {
    return new CreatePromotionPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePromotionPolicyResponse {
    return new CreatePromotionPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePromotionPolicyResponse | PlainMessage<CreatePromotionPolicyResponse> | undefined, b: CreatePromotionPolicyResponse | PlainMessage<CreatePromotionPolicyResponse> | undefined): boolean {
    return proto3.util.equals(CreatePromotionPolicyResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ListPromotionPoliciesRequest
 */
export class ListPromotionPoliciesRequest extends Message<ListPromotionPoliciesRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  constructor(data?: PartialMessage<ListPromotionPoliciesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListPromotionPoliciesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPromotionPoliciesRequest {
    return new ListPromotionPoliciesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPromotionPoliciesRequest {
    return new ListPromotionPoliciesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPromotionPoliciesRequest {
    return new ListPromotionPoliciesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListPromotionPoliciesRequest | PlainMessage<ListPromotionPoliciesRequest> | undefined, b: ListPromotionPoliciesRequest | PlainMessage<ListPromotionPoliciesRequest> | undefined): boolean {
    return proto3.util.equals(ListPromotionPoliciesRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ListPromotionPoliciesResponse
 */
export class ListPromotionPoliciesResponse extends Message<ListPromotionPoliciesResponse> {
  /**
   * @generated from field: repeated github.com.akuity.kargo.pkg.api.v1alpha1.PromotionPolicy promotion_policies = 1;
   */
  promotionPolicies: PromotionPolicy[] = [];

  constructor(data?: PartialMessage<ListPromotionPoliciesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListPromotionPoliciesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotion_policies", kind: "message", T: PromotionPolicy, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPromotionPoliciesResponse {
    return new ListPromotionPoliciesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPromotionPoliciesResponse {
    return new ListPromotionPoliciesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPromotionPoliciesResponse {
    return new ListPromotionPoliciesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListPromotionPoliciesResponse | PlainMessage<ListPromotionPoliciesResponse> | undefined, b: ListPromotionPoliciesResponse | PlainMessage<ListPromotionPoliciesResponse> | undefined): boolean {
    return proto3.util.equals(ListPromotionPoliciesResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetPromotionPolicyRequest
 */
export class GetPromotionPolicyRequest extends Message<GetPromotionPolicyRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<GetPromotionPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetPromotionPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromotionPolicyRequest {
    return new GetPromotionPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromotionPolicyRequest {
    return new GetPromotionPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromotionPolicyRequest {
    return new GetPromotionPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromotionPolicyRequest | PlainMessage<GetPromotionPolicyRequest> | undefined, b: GetPromotionPolicyRequest | PlainMessage<GetPromotionPolicyRequest> | undefined): boolean {
    return proto3.util.equals(GetPromotionPolicyRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.GetPromotionPolicyResponse
 */
export class GetPromotionPolicyResponse extends Message<GetPromotionPolicyResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.PromotionPolicy promotion_policy = 1;
   */
  promotionPolicy?: PromotionPolicy;

  constructor(data?: PartialMessage<GetPromotionPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.GetPromotionPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotion_policy", kind: "message", T: PromotionPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromotionPolicyResponse {
    return new GetPromotionPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromotionPolicyResponse {
    return new GetPromotionPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromotionPolicyResponse {
    return new GetPromotionPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromotionPolicyResponse | PlainMessage<GetPromotionPolicyResponse> | undefined, b: GetPromotionPolicyResponse | PlainMessage<GetPromotionPolicyResponse> | undefined): boolean {
    return proto3.util.equals(GetPromotionPolicyResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.UpdatePromotionPolicyRequest
 */
export class UpdatePromotionPolicyRequest extends Message<UpdatePromotionPolicyRequest> {
  /**
   * @generated from oneof akuity.io.kargo.service.v1alpha1.UpdatePromotionPolicyRequest.promotion_policy
   */
  promotionPolicy: {
    /**
     * @generated from field: akuity.io.kargo.service.v1alpha1.TypedPromotionPolicySpec typed = 1;
     */
    value: TypedPromotionPolicySpec;
    case: "typed";
  } | {
    /**
     * @generated from field: string yaml = 2;
     */
    value: string;
    case: "yaml";
  } | { case: undefined; value?: undefined } = { case: undefined };

  constructor(data?: PartialMessage<UpdatePromotionPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.UpdatePromotionPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "typed", kind: "message", T: TypedPromotionPolicySpec, oneof: "promotion_policy" },
    { no: 2, name: "yaml", kind: "scalar", T: 9 /* ScalarType.STRING */, oneof: "promotion_policy" },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePromotionPolicyRequest {
    return new UpdatePromotionPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePromotionPolicyRequest {
    return new UpdatePromotionPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePromotionPolicyRequest {
    return new UpdatePromotionPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePromotionPolicyRequest | PlainMessage<UpdatePromotionPolicyRequest> | undefined, b: UpdatePromotionPolicyRequest | PlainMessage<UpdatePromotionPolicyRequest> | undefined): boolean {
    return proto3.util.equals(UpdatePromotionPolicyRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.UpdatePromotionPolicyResponse
 */
export class UpdatePromotionPolicyResponse extends Message<UpdatePromotionPolicyResponse> {
  /**
   * @generated from field: github.com.akuity.kargo.pkg.api.v1alpha1.PromotionPolicy promotion_policy = 1;
   */
  promotionPolicy?: PromotionPolicy;

  constructor(data?: PartialMessage<UpdatePromotionPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.UpdatePromotionPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "promotion_policy", kind: "message", T: PromotionPolicy },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdatePromotionPolicyResponse {
    return new UpdatePromotionPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdatePromotionPolicyResponse {
    return new UpdatePromotionPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdatePromotionPolicyResponse {
    return new UpdatePromotionPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdatePromotionPolicyResponse | PlainMessage<UpdatePromotionPolicyResponse> | undefined, b: UpdatePromotionPolicyResponse | PlainMessage<UpdatePromotionPolicyResponse> | undefined): boolean {
    return proto3.util.equals(UpdatePromotionPolicyResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.DeletePromotionPolicyRequest
 */
export class DeletePromotionPolicyRequest extends Message<DeletePromotionPolicyRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  constructor(data?: PartialMessage<DeletePromotionPolicyRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeletePromotionPolicyRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePromotionPolicyRequest {
    return new DeletePromotionPolicyRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePromotionPolicyRequest {
    return new DeletePromotionPolicyRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePromotionPolicyRequest {
    return new DeletePromotionPolicyRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePromotionPolicyRequest | PlainMessage<DeletePromotionPolicyRequest> | undefined, b: DeletePromotionPolicyRequest | PlainMessage<DeletePromotionPolicyRequest> | undefined): boolean {
    return proto3.util.equals(DeletePromotionPolicyRequest, a, b);
  }
}

/**
 * explicitly empty 
 *
 * @generated from message akuity.io.kargo.service.v1alpha1.DeletePromotionPolicyResponse
 */
export class DeletePromotionPolicyResponse extends Message<DeletePromotionPolicyResponse> {
  constructor(data?: PartialMessage<DeletePromotionPolicyResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeletePromotionPolicyResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeletePromotionPolicyResponse {
    return new DeletePromotionPolicyResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeletePromotionPolicyResponse {
    return new DeletePromotionPolicyResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeletePromotionPolicyResponse {
    return new DeletePromotionPolicyResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeletePromotionPolicyResponse | PlainMessage<DeletePromotionPolicyResponse> | undefined, b: DeletePromotionPolicyResponse | PlainMessage<DeletePromotionPolicyResponse> | undefined): boolean {
    return proto3.util.equals(DeletePromotionPolicyResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.Project
 */
export class Project extends Message<Project> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 2;
   */
  createTime?: Timestamp;

  constructor(data?: PartialMessage<Project>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.Project";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "create_time", kind: "message", T: Timestamp },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Project {
    return new Project().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Project {
    return new Project().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Project {
    return new Project().fromJsonString(jsonString, options);
  }

  static equals(a: Project | PlainMessage<Project> | undefined, b: Project | PlainMessage<Project> | undefined): boolean {
    return proto3.util.equals(Project, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateProjectRequest
 */
export class CreateProjectRequest extends Message<CreateProjectRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<CreateProjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateProjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateProjectRequest {
    return new CreateProjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateProjectRequest {
    return new CreateProjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateProjectRequest {
    return new CreateProjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateProjectRequest | PlainMessage<CreateProjectRequest> | undefined, b: CreateProjectRequest | PlainMessage<CreateProjectRequest> | undefined): boolean {
    return proto3.util.equals(CreateProjectRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.CreateProjectResponse
 */
export class CreateProjectResponse extends Message<CreateProjectResponse> {
  /**
   * @generated from field: akuity.io.kargo.service.v1alpha1.Project project = 1;
   */
  project?: Project;

  constructor(data?: PartialMessage<CreateProjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.CreateProjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "message", T: Project },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateProjectResponse {
    return new CreateProjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateProjectResponse {
    return new CreateProjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateProjectResponse {
    return new CreateProjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateProjectResponse | PlainMessage<CreateProjectResponse> | undefined, b: CreateProjectResponse | PlainMessage<CreateProjectResponse> | undefined): boolean {
    return proto3.util.equals(CreateProjectResponse, a, b);
  }
}

/**
 * explicitly empty 
 *
 * @generated from message akuity.io.kargo.service.v1alpha1.ListProjectsRequest
 */
export class ListProjectsRequest extends Message<ListProjectsRequest> {
  constructor(data?: PartialMessage<ListProjectsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListProjectsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectsRequest {
    return new ListProjectsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectsRequest {
    return new ListProjectsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectsRequest {
    return new ListProjectsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectsRequest | PlainMessage<ListProjectsRequest> | undefined, b: ListProjectsRequest | PlainMessage<ListProjectsRequest> | undefined): boolean {
    return proto3.util.equals(ListProjectsRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.ListProjectsResponse
 */
export class ListProjectsResponse extends Message<ListProjectsResponse> {
  /**
   * @generated from field: repeated akuity.io.kargo.service.v1alpha1.Project projects = 1;
   */
  projects: Project[] = [];

  constructor(data?: PartialMessage<ListProjectsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.ListProjectsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "projects", kind: "message", T: Project, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProjectsResponse {
    return new ListProjectsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProjectsResponse {
    return new ListProjectsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProjectsResponse {
    return new ListProjectsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListProjectsResponse | PlainMessage<ListProjectsResponse> | undefined, b: ListProjectsResponse | PlainMessage<ListProjectsResponse> | undefined): boolean {
    return proto3.util.equals(ListProjectsResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.DeleteProjectRequest
 */
export class DeleteProjectRequest extends Message<DeleteProjectRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<DeleteProjectRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeleteProjectRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteProjectRequest {
    return new DeleteProjectRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteProjectRequest {
    return new DeleteProjectRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteProjectRequest {
    return new DeleteProjectRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteProjectRequest | PlainMessage<DeleteProjectRequest> | undefined, b: DeleteProjectRequest | PlainMessage<DeleteProjectRequest> | undefined): boolean {
    return proto3.util.equals(DeleteProjectRequest, a, b);
  }
}

/**
 * explicitly empty 
 *
 * @generated from message akuity.io.kargo.service.v1alpha1.DeleteProjectResponse
 */
export class DeleteProjectResponse extends Message<DeleteProjectResponse> {
  constructor(data?: PartialMessage<DeleteProjectResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.DeleteProjectResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteProjectResponse {
    return new DeleteProjectResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteProjectResponse {
    return new DeleteProjectResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteProjectResponse {
    return new DeleteProjectResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteProjectResponse | PlainMessage<DeleteProjectResponse> | undefined, b: DeleteProjectResponse | PlainMessage<DeleteProjectResponse> | undefined): boolean {
    return proto3.util.equals(DeleteProjectResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.QueryFreightRequest
 */
export class QueryFreightRequest extends Message<QueryFreightRequest> {
  /**
   * @generated from field: string project = 1;
   */
  project = "";

  /**
   * @generated from field: string stage = 2;
   */
  stage = "";

  /**
   * @generated from field: string group_by = 3;
   */
  groupBy = "";

  /**
   * @generated from field: string group = 4;
   */
  group = "";

  /**
   * @generated from field: string order_by = 5;
   */
  orderBy = "";

  /**
   * @generated from field: bool reverse = 6;
   */
  reverse = false;

  constructor(data?: PartialMessage<QueryFreightRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.QueryFreightRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "project", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "stage", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "group_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "group", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "reverse", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryFreightRequest {
    return new QueryFreightRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryFreightRequest {
    return new QueryFreightRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryFreightRequest {
    return new QueryFreightRequest().fromJsonString(jsonString, options);
  }

  static equals(a: QueryFreightRequest | PlainMessage<QueryFreightRequest> | undefined, b: QueryFreightRequest | PlainMessage<QueryFreightRequest> | undefined): boolean {
    return proto3.util.equals(QueryFreightRequest, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.QueryFreightResponse
 */
export class QueryFreightResponse extends Message<QueryFreightResponse> {
  /**
   * @generated from field: map<string, akuity.io.kargo.service.v1alpha1.FreightList> groups = 1;
   */
  groups: { [key: string]: FreightList } = {};

  constructor(data?: PartialMessage<QueryFreightResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.QueryFreightResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "groups", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: FreightList} },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryFreightResponse {
    return new QueryFreightResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryFreightResponse {
    return new QueryFreightResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryFreightResponse {
    return new QueryFreightResponse().fromJsonString(jsonString, options);
  }

  static equals(a: QueryFreightResponse | PlainMessage<QueryFreightResponse> | undefined, b: QueryFreightResponse | PlainMessage<QueryFreightResponse> | undefined): boolean {
    return proto3.util.equals(QueryFreightResponse, a, b);
  }
}

/**
 * @generated from message akuity.io.kargo.service.v1alpha1.FreightList
 */
export class FreightList extends Message<FreightList> {
  /**
   * @generated from field: repeated github.com.akuity.kargo.pkg.api.v1alpha1.Freight freight = 1;
   */
  freight: Freight[] = [];

  constructor(data?: PartialMessage<FreightList>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "akuity.io.kargo.service.v1alpha1.FreightList";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "freight", kind: "message", T: Freight, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FreightList {
    return new FreightList().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FreightList {
    return new FreightList().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FreightList {
    return new FreightList().fromJsonString(jsonString, options);
  }

  static equals(a: FreightList | PlainMessage<FreightList> | undefined, b: FreightList | PlainMessage<FreightList> | undefined): boolean {
    return proto3.util.equals(FreightList, a, b);
  }
}

