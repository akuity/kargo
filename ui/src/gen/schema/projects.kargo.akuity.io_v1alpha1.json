{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Project is a resource type that reconciles to a specially labeled namespace\nand other TODO: TBD project-level resources.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "status": {
      "description": "Status describes the Project's current status.",
      "properties": {
        "conditions": {
          "description": "Conditions contains the last observations of the Project's current\nstate.",
          "items": {
            "description": "Condition contains details for one aspect of the current state of this API Resource.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis may be an empty string.",
                "maxLength": 32768,
                "type": "string"
              },
              "observedGeneration": {
                "description": "observedGeneration represents the .metadata.generation that the condition was set based upon.\nFor instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "maximum": 9223372036854776000,
                "minimum": 0,
                "type": "integer"
              },
              "reason": {
                "description": "reason contains a programmatic identifier indicating the reason for the condition's last transition.\nProducers of specific condition types may define expected values and meanings for this field,\nand whether the values are considered a guaranteed API.\nThe value should be a CamelCase string.\nThis field may not be empty.",
                "maxLength": 1024,
                "minLength": 1,
                "pattern": "^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "enum": [
                  "True",
                  "False",
                  "Unknown"
                ],
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.",
                "maxLength": 316,
                "pattern": "^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "message",
              "reason",
              "status",
              "type"
            ],
            "type": "object"
          },
          "type": "array",
          "x-kubernetes-list-map-keys": [
            "type"
          ],
          "x-kubernetes-list-type": "map"
        },
        "stats": {
          "description": "Stats contains a summary of the collective state of a Project's\nconstituent resources.",
          "properties": {
            "stages": {
              "description": "Stages contains a summary of the collective state of the Project's Stages.",
              "properties": {
                "count": {
                  "description": "Count contains the total number of Stages in the Project.",
                  "format": "int64",
                  "maximum": 9223372036854776000,
                  "minimum": -9223372036854776000,
                  "type": "integer"
                },
                "health": {
                  "description": "Health contains a summary of the collective health of a Project's Stages.",
                  "properties": {
                    "healthy": {
                      "description": "Healthy contains the number of resources that are explicitly healthy.",
                      "format": "int64",
                      "maximum": 9223372036854776000,
                      "minimum": -9223372036854776000,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "warehouses": {
              "description": "Warehouses contains a summary of the collective state of the Project's\nWarehouses.",
              "properties": {
                "count": {
                  "description": "Count contains the total number of Warehouses in the Project.",
                  "format": "int64",
                  "maximum": 9223372036854776000,
                  "minimum": -9223372036854776000,
                  "type": "integer"
                },
                "health": {
                  "description": "Health contains a summary of the collective health of a Project's\nWarehouses.",
                  "properties": {
                    "healthy": {
                      "description": "Healthy contains the number of resources that are explicitly healthy.",
                      "format": "int64",
                      "maximum": 9223372036854776000,
                      "minimum": -9223372036854776000,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "type": "object"
    }
  },
  "type": "object"
}