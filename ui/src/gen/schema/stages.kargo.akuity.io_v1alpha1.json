{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "description": "Stage is the Kargo API's main type.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "Spec describes sources of Freight used by the Stage and how to incorporate\nFreight into the Stage.",
      "properties": {
        "promotionMechanisms": {
          "description": "PromotionMechanisms describes how to incorporate Freight into the Stage.\nThis is an optional field as it is sometimes useful to aggregates available\nFreight from multiple upstream Stages without performing any actions. The\nutility of this is to allow multiple downstream Stages to subscribe to a\nsingle upstream Stage where they may otherwise have subscribed to multiple\nupstream Stages.",
          "properties": {
            "argoCDAppUpdates": {
              "description": "ArgoCDAppUpdates describes updates that should be applied to Argo CD\nApplication resources to incorporate Freight into the Stage. This field is\noptional, as such actions are not required in all cases. Note that all\nupdates specified by the GitRepoUpdates field, if any, are applied BEFORE\nthese.",
              "items": {
                "description": "ArgoCDAppUpdate describes updates that should be applied to an Argo CD\nApplication resources to incorporate Freight into a Stage.",
                "properties": {
                  "appName": {
                    "description": "AppName specifies the name of an Argo CD Application resource to be\nupdated.",
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                    "type": "string"
                  },
                  "appNamespace": {
                    "description": "AppNamespace specifies the namespace of an Argo CD Application resource to\nbe updated. If left unspecified, the namespace of this Application resource\nwill use the value of ARGOCD_NAMESPACE or \"argocd\"",
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                    "type": "string"
                  },
                  "origin": {
                    "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional, but Promotions will fail if there\nis ever ambiguity regarding which piece of Freight from which an artifact\nis to be sourced.",
                    "properties": {
                      "kind": {
                        "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                        "enum": [
                          "Warehouse"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "kind",
                      "name"
                    ],
                    "type": "object"
                  },
                  "sourceUpdates": {
                    "description": "SourceUpdates describes updates to be applied to various sources of the\nspecified Argo CD Application resource.",
                    "items": {
                      "description": "ArgoCDSourceUpdate describes updates that should be applied to one of an Argo\nCD Application resource's sources.",
                      "properties": {
                        "chart": {
                          "description": "Chart along with the RepoURL field identifies which of an Argo CD\nApplication's sources this update is intended for. Note: As of Argo CD 2.6,\nApplications can use multiple sources. When the source to be updated\nreferences a Helm chart repository, the values of the RepoURL and Chart\nfields should exactly match the values of the fields of the same names in\nthe source. i.e. Do not match the values of these two fields to your\nWarehouse; match them to the Application source you wish to update.",
                          "type": "string"
                        },
                        "helm": {
                          "description": "Helm describes updates to the source's Helm-specific attributes.",
                          "properties": {
                            "images": {
                              "description": "Images describes how specific image versions can be incorporated into an\nArgo CD Application's Helm parameters.",
                              "items": {
                                "description": "ArgoCDHelmImageUpdate describes how a specific image version can be\nincorporated into an Argo CD Application's Helm parameters.",
                                "properties": {
                                  "image": {
                                    "description": "Image specifies a container image (without tag). This is a required field.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "key": {
                                    "description": "Key specifies a key within an Argo CD Application's Helm parameters that is\nto be updated. This is a required field.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "origin": {
                                    "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing ArgoCDHelm's Origin field. If\nthat, too, is unspecified, Promotions will fail if there is ever ambiguity\nregarding from which piece of Freight an artifact is to be sourced.",
                                    "properties": {
                                      "kind": {
                                        "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                                        "enum": [
                                          "Warehouse"
                                        ],
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "kind",
                                      "name"
                                    ],
                                    "type": "object"
                                  },
                                  "value": {
                                    "description": "Value specifies the new value for the specified key in the Argo CD\nApplication's Helm parameters. Valid values are:\n\n\n- ImageAndTag: Replaces the value of the specified key with\n  <image name>:<tag>\n- Tag: Replaces the value of the specified key with just the new tag\n- ImageAndDigest: Replaces the value of the specified key with\n  <image name>@<digest>\n- Digest: Replaces the value of the specified key with just the new digest.\n\n\nThis is a required field.",
                                    "enum": [
                                      "ImageAndTag",
                                      "Tag",
                                      "ImageAndDigest",
                                      "Digest"
                                    ],
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "image",
                                  "key",
                                  "value"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "origin": {
                              "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing ArgoCDSourceUpdate's Origin\nfield. If that, too, is unspecified, Promotions will fail if there is ever\nambiguity regarding from which piece of Freight an artifact is to be\nsourced.",
                              "properties": {
                                "kind": {
                                  "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                                  "enum": [
                                    "Warehouse"
                                  ],
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "images"
                          ],
                          "type": "object"
                        },
                        "kustomize": {
                          "description": "Kustomize describes updates to the source's Kustomize-specific attributes.",
                          "properties": {
                            "images": {
                              "description": "Images describes how specific image versions can be incorporated into an\nArgo CD Application's Kustomize parameters.",
                              "items": {
                                "description": "ArgoCDKustomizeImageUpdate describes how a specific image version can be\nincorporated into an Argo CD Application's Kustomize parameters.",
                                "properties": {
                                  "image": {
                                    "description": "Image specifies a container image (without tag). This is a required field.",
                                    "minLength": 1,
                                    "type": "string"
                                  },
                                  "origin": {
                                    "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing ArgoCDKustomize's Origin\nfield. If that, too, is unspecified, Promotions will fail if there is ever\nambiguity regarding from which piece of Freight an artifact is to be\nsourced.",
                                    "properties": {
                                      "kind": {
                                        "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                                        "enum": [
                                          "Warehouse"
                                        ],
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "kind",
                                      "name"
                                    ],
                                    "type": "object"
                                  },
                                  "useDigest": {
                                    "description": "UseDigest specifies whether the image's digest should be used instead of\nits tag.",
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "image"
                                ],
                                "type": "object"
                              },
                              "minItems": 1,
                              "type": "array"
                            },
                            "origin": {
                              "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing ArgoCDSourceUpdate's Origin\nfield. If that, too, is unspecified, Promotions will fail if there is ever\nambiguity regarding from which piece of Freight an artifact is to be\nsourced.",
                              "properties": {
                                "kind": {
                                  "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                                  "enum": [
                                    "Warehouse"
                                  ],
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ],
                              "type": "object"
                            }
                          },
                          "required": [
                            "images"
                          ],
                          "type": "object"
                        },
                        "origin": {
                          "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing ArgoCDAppUpdate's Origin\nfield. If that, too, is unspecified, Promotions will fail if there is ever\nambiguity regarding from which piece of Freight an artifact is to be\nsourced.",
                          "properties": {
                            "kind": {
                              "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                              "enum": [
                                "Warehouse"
                              ],
                              "type": "string"
                            },
                            "name": {
                              "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "kind",
                            "name"
                          ],
                          "type": "object"
                        },
                        "repoURL": {
                          "description": "RepoURL along with the Chart field identifies which of an Argo CD\nApplication's sources this update is intended for. Note: As of Argo CD 2.6,\nApplications can use multiple sources. When the source to be updated\nreferences a Helm chart repository, the values of the RepoURL and Chart\nfields should exactly match the values of the fields of the same names in\nthe source. i.e. Do not match the values of these two fields to your\nWarehouse; match them to the Application source you wish to update. This is\na required field.",
                          "minLength": 1,
                          "type": "string"
                        },
                        "updateTargetRevision": {
                          "description": "UpdateTargetRevision is a bool indicating whether the source should be\nupdated such that its TargetRevision field points at the most recently git\ncommit (if RepoURL references a git repository) or chart version (if\nRepoURL references a chart repository).",
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "repoURL"
                      ],
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "required": [
                  "appName"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "gitRepoUpdates": {
              "description": "GitRepoUpdates describes updates that should be applied to Git repositories\nto incorporate Freight into the Stage. This field is optional, as such\nactions are not required in all cases.",
              "items": {
                "description": "GitRepoUpdate describes updates that should be applied to a Git repository\n(using various configuration management tools) to incorporate Freight into a\nStage.",
                "properties": {
                  "helm": {
                    "description": "Helm describes how to use Helm to incorporate Freight into the Stage. This\nis mutually exclusive with the Render and Kustomize fields.",
                    "properties": {
                      "charts": {
                        "description": "Charts describes how specific chart versions can be incorporated into an\numbrella chart.",
                        "items": {
                          "description": "HelmChartDependencyUpdate describes how a specific Helm chart that is used\nas a subchart of an umbrella chart can be updated.",
                          "properties": {
                            "chartPath": {
                              "description": "ChartPath is the path to an umbrella chart.",
                              "minLength": 1,
                              "pattern": "^[\\w-\\.]+(/[\\w-\\.]+)*$",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name along with Repository identifies a subchart of the umbrella chart at\nChartPath whose version should be updated. The values of both fields should\nexactly match the values of the fields of the same names in a dependency\nexpressed in the Chart.yaml of the umbrella chart at ChartPath. i.e. Do not\nmatch the values of these two fields to your Warehouse; match them to the\nChart.yaml. This is a required field.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "origin": {
                              "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing HelmPromotionMechanism's\nOrigin field. If that, too, is unspecified, Promotions will fail if there\nis ever ambiguity regarding from which piece of Freight an artifact is to\nbe sourced.",
                              "properties": {
                                "kind": {
                                  "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                                  "enum": [
                                    "Warehouse"
                                  ],
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ],
                              "type": "object"
                            },
                            "repository": {
                              "description": "Repository along with Name identifies a subchart of the umbrella chart at\nChartPath whose version should be updated. The values of both fields should\nexactly match the values of the fields of the same names in a dependency\nexpressed in the Chart.yaml of the umbrella chart at ChartPath. i.e. Do not\nmatch the values of these two fields to your Warehouse; match them to the\nChart.yaml. This is a required field.",
                              "minLength": 1,
                              "pattern": "^(((https?)|(oci))://)([\\w\\d\\.\\-]+)(:[\\d]+)?(/.*)*$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "chartPath",
                            "name",
                            "repository"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "images": {
                        "description": "Images describes how specific image versions can be incorporated into Helm\nvalues files.",
                        "items": {
                          "description": "HelmImageUpdate describes how a specific image version can be incorporated\ninto a specific Helm values file.",
                          "properties": {
                            "image": {
                              "description": "Image specifies a container image (without tag). This is a required field.",
                              "minLength": 1,
                              "pattern": "^(\\w+([\\.-]\\w+)*(:[\\d]+)?/)?(\\w+([\\.-]\\w+)*)(/\\w+([\\.-]\\w+)*)*$",
                              "type": "string"
                            },
                            "key": {
                              "description": "Key specifies a key within the Helm values file that is to be updated. This\nis a required field.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "origin": {
                              "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing HelmPromotionMechanism's\nOrigin field. If that, too, is unspecified, Promotions will fail if there\nis ever ambiguity regarding from which piece of Freight an artifact is to\nbe sourced.",
                              "properties": {
                                "kind": {
                                  "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                                  "enum": [
                                    "Warehouse"
                                  ],
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ],
                              "type": "object"
                            },
                            "value": {
                              "description": "Value specifies the new value for the specified key in the specified Helm\nvalues file. Valid values are:\n\n\n- ImageAndTag: Replaces the value of the specified key with\n  <image name>:<tag>\n- Tag: Replaces the value of the specified key with just the new tag\n- ImageAndDigest: Replaces the value of the specified key with\n  <image name>@<digest>\n- Digest: Replaces the value of the specified key with just the new digest.\n\n\nThis is a required field.",
                              "enum": [
                                "ImageAndTag",
                                "Tag",
                                "ImageAndDigest",
                                "Digest"
                              ],
                              "type": "string"
                            },
                            "valuesFilePath": {
                              "description": "ValuesFilePath specifies a path to the Helm values file that is to be\nupdated. This is a required field.",
                              "minLength": 1,
                              "pattern": "^[\\w-\\.]+(/[\\w-\\.]+)*$",
                              "type": "string"
                            }
                          },
                          "required": [
                            "image",
                            "key",
                            "value",
                            "valuesFilePath"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "origin": {
                        "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing GitRepoUpdate's Origin field.\nIf that, too, is unspecified, Promotions will fail if there is ever\nambiguity regarding from which piece of Freight an artifact is to be\nsourced.",
                        "properties": {
                          "kind": {
                            "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                            "enum": [
                              "Warehouse"
                            ],
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "kind",
                          "name"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "insecureSkipTLSVerify": {
                    "description": "InsecureSkipTLSVerify specifies whether certificate verification errors\nshould be ignored when connecting to the repository. This should be enabled\nonly with great caution.",
                    "type": "boolean"
                  },
                  "kustomize": {
                    "description": "Kustomize describes how to use Kustomize to incorporate Freight into the\nStage. This is mutually exclusive with the Render and Helm fields.",
                    "properties": {
                      "images": {
                        "description": "Images describes images for which `kustomize edit set image` should be\nexecuted and the paths in which those commands should be executed.",
                        "items": {
                          "description": "KustomizeImageUpdate describes how to run `kustomize edit set image`\nfor a given image.",
                          "properties": {
                            "image": {
                              "description": "Image specifies a container image (without tag). This is a required field.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "origin": {
                              "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing KustomizePromotionMechanism's\nOrigin field. If that, too, is unspecified, Promotions will fail if there\nis ever ambiguity regarding from which piece of Freight an artifact is to\nbe sourced.",
                              "properties": {
                                "kind": {
                                  "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                                  "enum": [
                                    "Warehouse"
                                  ],
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ],
                              "type": "object"
                            },
                            "path": {
                              "description": "Path specifies a path in which the `kustomize edit set image` command\nshould be executed. This is a required field.",
                              "minLength": 1,
                              "pattern": "^[\\w-\\.]+(/[\\w-\\.]+)*$",
                              "type": "string"
                            },
                            "useDigest": {
                              "description": "UseDigest specifies whether the image's digest should be used instead of\nits tag.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "image",
                            "path"
                          ],
                          "type": "object"
                        },
                        "minItems": 1,
                        "type": "array"
                      },
                      "origin": {
                        "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing GitRepoUpdate's Origin field.\nIf that, too, is unspecified, Promotions will fail if there is ever\nambiguity regarding from which piece of Freight an artifact is to be\nsourced.",
                        "properties": {
                          "kind": {
                            "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                            "enum": [
                              "Warehouse"
                            ],
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "kind",
                          "name"
                        ],
                        "type": "object"
                      }
                    },
                    "required": [
                      "images"
                    ],
                    "type": "object"
                  },
                  "origin": {
                    "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, the branch\nchecked out by this promotion mechanism will be the one specified by the\nReadBranch field. If that, too, is unspecified, the default branch of the\nrepository will be checked out. Always provide a value for this field if\nwishing to check out a specific commit indicated by a piece of Freight.",
                    "properties": {
                      "kind": {
                        "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                        "enum": [
                          "Warehouse"
                        ],
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "kind",
                      "name"
                    ],
                    "type": "object"
                  },
                  "pullRequest": {
                    "description": "PullRequest will generate a pull request instead of making the commit directly",
                    "properties": {
                      "github": {
                        "description": "GitHub indicates git provider is GitHub",
                        "type": "object"
                      },
                      "gitlab": {
                        "description": "GitLab indicates git provider is GitLab",
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "readBranch": {
                    "description": "ReadBranch specifies a particular branch of the repository from which to\nlocate contents that will be written to the branch specified by the\nWriteBranch field. This field is optional. When not specified, the\nReadBranch is implicitly the repository's default branch AND in cases where\na Freight includes a GitCommit, that commit's ID will supersede the value\nof this field. Therefore, in practice, this field is only used to clarify\nwhat branch of a repository can be treated as a source of manifests or\nother configuration when a Stage has no subscription to that repository.",
                    "pattern": "^(\\w+([-/]\\w+)*)?$",
                    "type": "string"
                  },
                  "render": {
                    "description": "Render describes how to use Kargo Render to incorporate Freight into the\nStage. This is mutually exclusive with the Kustomize and Helm fields.",
                    "properties": {
                      "images": {
                        "description": "Images describes how images can be incorporated into a Stage using Kargo\nRender. If this field is omitted, all images in the Freight being promoted\nwill be passed to Kargo Render in the form <image name>:<tag>. (e.g. Will\nnot use digests by default.)",
                        "items": {
                          "description": "KargoRenderImageUpdate describes how an image can be incorporated into a\nStage using Kargo Render.",
                          "properties": {
                            "image": {
                              "description": "Image specifies a container image (without tag). This is a required field.",
                              "minLength": 1,
                              "type": "string"
                            },
                            "origin": {
                              "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing\nKargoRenderPromotionMechanism's Origin field. If that, too, is unspecified,\nPromotions will fail if there is ever ambiguity regarding from which piece\nof Freight an artifact is to be sourced.",
                              "properties": {
                                "kind": {
                                  "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                                  "enum": [
                                    "Warehouse"
                                  ],
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "kind",
                                "name"
                              ],
                              "type": "object"
                            },
                            "useDigest": {
                              "description": "UseDigest specifies whether the image's digest should be used instead of\nits tag.",
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "image"
                          ],
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "origin": {
                        "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. When left unspecified, it will\nimplicitly inherit the value of the enclosing GitRepoUpdate's Origin field.\nIf that, too, is unspecified, Promotions will fail if there is ever\nambiguity regarding from which piece of Freight an artifact is to be\nsourced.",
                        "properties": {
                          "kind": {
                            "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                            "enum": [
                              "Warehouse"
                            ],
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "kind",
                          "name"
                        ],
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "repoURL": {
                    "description": "RepoURL is the URL of the repository to update. This is a required field.",
                    "minLength": 1,
                    "pattern": "^https?://(\\w+([\\.-]\\w+)*@)?\\w+([\\.-]\\w+)*(:[\\d]+)?(/.*)?$",
                    "type": "string"
                  },
                  "writeBranch": {
                    "description": "WriteBranch specifies the particular branch of the repository to be\nupdated. This is a required field.",
                    "minLength": 1,
                    "pattern": "^\\w+([-/]\\w+)*$",
                    "type": "string"
                  }
                },
                "required": [
                  "repoURL",
                  "writeBranch"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "origin": {
              "description": "Origin disambiguates the origin from which artifacts used by this promotion\nmechanism must have originated. This is especially useful in cases where a\nStage may request Freight from multiples origins (e.g. multiple Warehouses)\nand some of those each reference different versions of artifacts from the\nsame repository. This field is optional. Its value is overridable by\nchild promotion mechanisms.",
              "properties": {
                "kind": {
                  "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                  "enum": [
                    "Warehouse"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                  "type": "string"
                }
              },
              "required": [
                "kind",
                "name"
              ],
              "type": "object"
            }
          },
          "type": "object"
        },
        "requestedFreight": {
          "description": "RequestedFreight expresses the Stage's need for certain pieces of Freight,\neach having originated from a particular Warehouse. This list must be\nnon-empty. In the common case, a Stage will request Freight having\noriginated from just one specific Warehouse. In advanced cases, requesting\nFreight from multiple Warehouses provides a method of advancing new\nartifacts of different types through parallel pipelines at different\nspeeds. This can be useful, for instance, if a Stage is home to multiple\nmicroservices that are independently versioned.",
          "items": {
            "description": "FreightRequest expresses a Stage's need for Freight having originated from a\nparticular Warehouse.",
            "properties": {
              "origin": {
                "description": "Origin specifies from where the requested Freight must have originated.\nThis is a required field.",
                "properties": {
                  "kind": {
                    "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                    "enum": [
                      "Warehouse"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                    "type": "string"
                  }
                },
                "required": [
                  "kind",
                  "name"
                ],
                "type": "object"
              },
              "sources": {
                "description": "Sources describes where the requested Freight may be obtained from. This is\na required field.",
                "properties": {
                  "direct": {
                    "description": "Direct indicates the requested Freight may be obtained directly from the\nWarehouse from which it originated. If this field's value is false, then\nthe value of the Stages field must be non-empty. i.e. Between the two\nfields, at least one source must be specified.",
                    "type": "boolean"
                  },
                  "stages": {
                    "description": "Stages identifies other \"upstream\" Stages as potential sources of the\nrequested Freight. If this field's value is empty, then the value of the\nDirect field must be true. i.e. Between the two fields, at least on source\nmust be specified.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "required": [
              "origin",
              "sources"
            ],
            "type": "object"
          },
          "minItems": 1,
          "type": "array"
        },
        "shard": {
          "description": "Shard is the name of the shard that this Stage belongs to. This is an\noptional field. If not specified, the Stage will belong to the default\nshard. A defaulting webhook will sync the value of the\nkargo.akuity.io/shard label with the value of this field. When this field\nis empty, the webhook will ensure that label is absent.",
          "type": "string"
        },
        "subscriptions": {
          "description": "Subscriptions describes the Stage's sources of Freight. This is a required\nfield.\n\n\nDeprecated: Use RequestedFreight instead.",
          "properties": {
            "upstreamStages": {
              "description": "UpstreamStages identifies other Stages as potential sources of Freight\nfor this Stage. This field is mutually exclusive with the Repos field.",
              "items": {
                "description": "StageSubscription defines a subscription to Freight from another Stage.\n\n\nDeprecated: Use FreightRequest instead.",
                "properties": {
                  "name": {
                    "description": "Name specifies the name of a Stage.",
                    "minLength": 1,
                    "pattern": "^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "warehouse": {
              "description": "Warehouse is a subscription to a Warehouse. This field is mutually\nexclusive with the UpstreamStages field.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "verification": {
          "description": "Verification describes how to verify a Stage's current Freight is fit for\npromotion downstream.",
          "properties": {
            "analysisRunMetadata": {
              "description": "AnalysisRunMetadata contains optional metadata that should be applied to\nall AnalysisRuns.",
              "properties": {
                "annotations": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Additional annotations to apply to an AnalysisRun.",
                  "type": "object"
                },
                "labels": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Additional labels to apply to an AnalysisRun.",
                  "type": "object"
                }
              },
              "type": "object"
            },
            "analysisTemplates": {
              "description": "AnalysisTemplates is a list of AnalysisTemplates from which AnalysisRuns\nshould be created to verify a Stage's current Freight is fit to be promoted\ndownstream.",
              "items": {
                "description": "AnalysisTemplateReference is a reference to an AnalysisTemplate.",
                "properties": {
                  "name": {
                    "description": "Name is the name of the AnalysisTemplate in the same project/namespace as\nthe Stage.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "args": {
              "description": "Args lists arguments that should be added to all AnalysisRuns.",
              "items": {
                "description": "AnalysisRunArgument represents an argument to be added to an AnalysisRun.",
                "properties": {
                  "name": {
                    "description": "Name is the name of the argument.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is the value of the argument.",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "requestedFreight",
        "subscriptions"
      ],
      "type": "object"
    },
    "status": {
      "description": "Status describes the Stage's current and recent Freight, health, and more.",
      "properties": {
        "currentFreight": {
          "description": "CurrentFreight is a simplified representation of the Stage's current\nFreight describing what is currently deployed to the Stage.\n\n\nDeprecated: Use the top item in the FreightHistory stack instead.",
          "properties": {
            "charts": {
              "description": "Charts describes specific versions of specific Helm charts.",
              "items": {
                "description": "Chart describes a specific version of a Helm chart.",
                "properties": {
                  "name": {
                    "description": "Name specifies the name of the chart.",
                    "type": "string"
                  },
                  "repoURL": {
                    "description": "RepoURL specifies the URL of a Helm chart repository. Classic chart\nrepositories (using HTTP/S) can contain differently named charts. When this\nfield points to such a repository, the Name field will specify the name of\nthe chart within the repository. In the case of a repository within an OCI\nregistry, the URL implicitly points to a specific chart and the Name field\nwill be empty.",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version specifies a particular version of the chart.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "commits": {
              "description": "Commits describes specific Git repository commits.",
              "items": {
                "description": "GitCommit describes a specific commit from a specific Git repository.",
                "properties": {
                  "author": {
                    "description": "Author is the author of the commit.",
                    "type": "string"
                  },
                  "branch": {
                    "description": "Branch denotes the branch of the repository where this commit was found.",
                    "type": "string"
                  },
                  "committer": {
                    "description": "Committer is the person who committed the commit.",
                    "type": "string"
                  },
                  "healthCheckCommit": {
                    "description": "HealthCheckCommit is the ID of a specific commit. When specified,\nassessments of Stage health will use this value (instead of ID) when\ndetermining if applicable sources of Argo CD Application resources\nassociated with the Stage are or are not synced to this commit. Note that\nthere are cases (as in that of Kargo Render being utilized as a promotion\nmechanism) wherein the value of this field may differ from the commit ID\nfound in the ID field.",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID is the ID of a specific commit in the Git repository specified by\nRepoURL.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Message is the message associated with the commit. At present, this only\ncontains the first line (subject) of the commit message.",
                    "type": "string"
                  },
                  "repoURL": {
                    "description": "RepoURL is the URL of a Git repository.",
                    "type": "string"
                  },
                  "tag": {
                    "description": "Tag denotes a tag in the repository that matched selection criteria and\nresolved to this commit.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "images": {
              "description": "Images describes specific versions of specific container images.",
              "items": {
                "description": "Image describes a specific version of a container image.",
                "properties": {
                  "digest": {
                    "description": "Digest identifies a specific version of the image in the repository\nspecified by RepoURL. This is a more precise identifier than Tag.",
                    "type": "string"
                  },
                  "gitRepoURL": {
                    "description": "GitRepoURL specifies the URL of a Git repository that contains the source\ncode for the image repository referenced by the RepoURL field if Kargo was\nable to infer it.",
                    "type": "string"
                  },
                  "repoURL": {
                    "description": "RepoURL describes the repository in which the image can be found.",
                    "type": "string"
                  },
                  "tag": {
                    "description": "Tag identifies a specific version of the image in the repository specified\nby RepoURL.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "name": {
              "description": "Name is system-assigned identifier that is derived deterministically from\nthe contents of the Freight. i.e. Two pieces of Freight can be compared for\nequality by comparing their Names.",
              "type": "string"
            },
            "origin": {
              "description": "Origin describes a kind of Freight in terms of its origin.",
              "properties": {
                "kind": {
                  "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                  "enum": [
                    "Warehouse"
                  ],
                  "type": "string"
                },
                "name": {
                  "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                  "type": "string"
                }
              },
              "required": [
                "kind",
                "name"
              ],
              "type": "object"
            },
            "verificationHistory": {
              "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
              "items": {
                "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                "properties": {
                  "actor": {
                    "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                    "type": "string"
                  },
                  "analysisRun": {
                    "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                    "properties": {
                      "name": {
                        "description": "Name is the name of the AnalysisRun.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace is the namespace of the AnalysisRun.",
                        "type": "string"
                      },
                      "phase": {
                        "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "namespace",
                      "phase"
                    ],
                    "type": "object"
                  },
                  "finishTime": {
                    "description": "FinishTime is the time at which the Verification process finished.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID is the identifier of the Verification process.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                    "type": "string"
                  },
                  "phase": {
                    "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                    "type": "string"
                  },
                  "startTime": {
                    "description": "StartTime is the time at which the Verification process was started.",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            },
            "verificationInfo": {
              "description": "VerificationInfo is information about any verification process that was\nassociated with this Freight for this Stage.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
              "properties": {
                "actor": {
                  "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                  "type": "string"
                },
                "analysisRun": {
                  "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                  "properties": {
                    "name": {
                      "description": "Name is the name of the AnalysisRun.",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Namespace is the namespace of the AnalysisRun.",
                      "type": "string"
                    },
                    "phase": {
                      "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "name",
                    "namespace",
                    "phase"
                  ],
                  "type": "object"
                },
                "finishTime": {
                  "description": "FinishTime is the time at which the Verification process finished.",
                  "format": "date-time",
                  "type": "string"
                },
                "id": {
                  "description": "ID is the identifier of the Verification process.",
                  "type": "string"
                },
                "message": {
                  "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                  "type": "string"
                },
                "phase": {
                  "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                  "type": "string"
                },
                "startTime": {
                  "description": "StartTime is the time at which the Verification process was started.",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "warehouse": {
              "description": "Warehouse is the name of the Warehouse that created this Freight.\n\n\nDeprecated: Use the Origin instead.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "currentPromotion": {
          "description": "CurrentPromotion is a reference to the currently Running promotion.",
          "properties": {
            "finishedAt": {
              "description": "FinishedAt is the time at which the Promotion was completed.",
              "format": "date-time",
              "type": "string"
            },
            "freight": {
              "description": "Freight is the freight being promoted",
              "properties": {
                "charts": {
                  "description": "Charts describes specific versions of specific Helm charts.",
                  "items": {
                    "description": "Chart describes a specific version of a Helm chart.",
                    "properties": {
                      "name": {
                        "description": "Name specifies the name of the chart.",
                        "type": "string"
                      },
                      "repoURL": {
                        "description": "RepoURL specifies the URL of a Helm chart repository. Classic chart\nrepositories (using HTTP/S) can contain differently named charts. When this\nfield points to such a repository, the Name field will specify the name of\nthe chart within the repository. In the case of a repository within an OCI\nregistry, the URL implicitly points to a specific chart and the Name field\nwill be empty.",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version specifies a particular version of the chart.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "commits": {
                  "description": "Commits describes specific Git repository commits.",
                  "items": {
                    "description": "GitCommit describes a specific commit from a specific Git repository.",
                    "properties": {
                      "author": {
                        "description": "Author is the author of the commit.",
                        "type": "string"
                      },
                      "branch": {
                        "description": "Branch denotes the branch of the repository where this commit was found.",
                        "type": "string"
                      },
                      "committer": {
                        "description": "Committer is the person who committed the commit.",
                        "type": "string"
                      },
                      "healthCheckCommit": {
                        "description": "HealthCheckCommit is the ID of a specific commit. When specified,\nassessments of Stage health will use this value (instead of ID) when\ndetermining if applicable sources of Argo CD Application resources\nassociated with the Stage are or are not synced to this commit. Note that\nthere are cases (as in that of Kargo Render being utilized as a promotion\nmechanism) wherein the value of this field may differ from the commit ID\nfound in the ID field.",
                        "type": "string"
                      },
                      "id": {
                        "description": "ID is the ID of a specific commit in the Git repository specified by\nRepoURL.",
                        "type": "string"
                      },
                      "message": {
                        "description": "Message is the message associated with the commit. At present, this only\ncontains the first line (subject) of the commit message.",
                        "type": "string"
                      },
                      "repoURL": {
                        "description": "RepoURL is the URL of a Git repository.",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Tag denotes a tag in the repository that matched selection criteria and\nresolved to this commit.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "images": {
                  "description": "Images describes specific versions of specific container images.",
                  "items": {
                    "description": "Image describes a specific version of a container image.",
                    "properties": {
                      "digest": {
                        "description": "Digest identifies a specific version of the image in the repository\nspecified by RepoURL. This is a more precise identifier than Tag.",
                        "type": "string"
                      },
                      "gitRepoURL": {
                        "description": "GitRepoURL specifies the URL of a Git repository that contains the source\ncode for the image repository referenced by the RepoURL field if Kargo was\nable to infer it.",
                        "type": "string"
                      },
                      "repoURL": {
                        "description": "RepoURL describes the repository in which the image can be found.",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Tag identifies a specific version of the image in the repository specified\nby RepoURL.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "Name is system-assigned identifier that is derived deterministically from\nthe contents of the Freight. i.e. Two pieces of Freight can be compared for\nequality by comparing their Names.",
                  "type": "string"
                },
                "origin": {
                  "description": "Origin describes a kind of Freight in terms of its origin.",
                  "properties": {
                    "kind": {
                      "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                      "enum": [
                        "Warehouse"
                      ],
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "kind",
                    "name"
                  ],
                  "type": "object"
                },
                "verificationHistory": {
                  "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                  "items": {
                    "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                    "properties": {
                      "actor": {
                        "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                        "type": "string"
                      },
                      "analysisRun": {
                        "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                        "properties": {
                          "name": {
                            "description": "Name is the name of the AnalysisRun.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace is the namespace of the AnalysisRun.",
                            "type": "string"
                          },
                          "phase": {
                            "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "namespace",
                          "phase"
                        ],
                        "type": "object"
                      },
                      "finishTime": {
                        "description": "FinishTime is the time at which the Verification process finished.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "description": "ID is the identifier of the Verification process.",
                        "type": "string"
                      },
                      "message": {
                        "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                        "type": "string"
                      },
                      "phase": {
                        "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                        "type": "string"
                      },
                      "startTime": {
                        "description": "StartTime is the time at which the Verification process was started.",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "verificationInfo": {
                  "description": "VerificationInfo is information about any verification process that was\nassociated with this Freight for this Stage.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                  "properties": {
                    "actor": {
                      "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                      "type": "string"
                    },
                    "analysisRun": {
                      "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                      "properties": {
                        "name": {
                          "description": "Name is the name of the AnalysisRun.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the AnalysisRun.",
                          "type": "string"
                        },
                        "phase": {
                          "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "namespace",
                        "phase"
                      ],
                      "type": "object"
                    },
                    "finishTime": {
                      "description": "FinishTime is the time at which the Verification process finished.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "description": "ID is the identifier of the Verification process.",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                      "type": "string"
                    },
                    "phase": {
                      "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                      "type": "string"
                    },
                    "startTime": {
                      "description": "StartTime is the time at which the Verification process was started.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "warehouse": {
                  "description": "Warehouse is the name of the Warehouse that created this Freight.\n\n\nDeprecated: Use the Origin instead.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "name": {
              "description": "Name is the name of the Promotion",
              "type": "string"
            },
            "status": {
              "description": "Status is the (optional) status of the promotion",
              "properties": {
                "finishedAt": {
                  "description": "FinishedAt is the time when the promotion was completed.",
                  "format": "date-time",
                  "type": "string"
                },
                "freight": {
                  "description": "Freight is the detail of the piece of freight that was referenced by this promotion.",
                  "properties": {
                    "charts": {
                      "description": "Charts describes specific versions of specific Helm charts.",
                      "items": {
                        "description": "Chart describes a specific version of a Helm chart.",
                        "properties": {
                          "name": {
                            "description": "Name specifies the name of the chart.",
                            "type": "string"
                          },
                          "repoURL": {
                            "description": "RepoURL specifies the URL of a Helm chart repository. Classic chart\nrepositories (using HTTP/S) can contain differently named charts. When this\nfield points to such a repository, the Name field will specify the name of\nthe chart within the repository. In the case of a repository within an OCI\nregistry, the URL implicitly points to a specific chart and the Name field\nwill be empty.",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version specifies a particular version of the chart.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "commits": {
                      "description": "Commits describes specific Git repository commits.",
                      "items": {
                        "description": "GitCommit describes a specific commit from a specific Git repository.",
                        "properties": {
                          "author": {
                            "description": "Author is the author of the commit.",
                            "type": "string"
                          },
                          "branch": {
                            "description": "Branch denotes the branch of the repository where this commit was found.",
                            "type": "string"
                          },
                          "committer": {
                            "description": "Committer is the person who committed the commit.",
                            "type": "string"
                          },
                          "healthCheckCommit": {
                            "description": "HealthCheckCommit is the ID of a specific commit. When specified,\nassessments of Stage health will use this value (instead of ID) when\ndetermining if applicable sources of Argo CD Application resources\nassociated with the Stage are or are not synced to this commit. Note that\nthere are cases (as in that of Kargo Render being utilized as a promotion\nmechanism) wherein the value of this field may differ from the commit ID\nfound in the ID field.",
                            "type": "string"
                          },
                          "id": {
                            "description": "ID is the ID of a specific commit in the Git repository specified by\nRepoURL.",
                            "type": "string"
                          },
                          "message": {
                            "description": "Message is the message associated with the commit. At present, this only\ncontains the first line (subject) of the commit message.",
                            "type": "string"
                          },
                          "repoURL": {
                            "description": "RepoURL is the URL of a Git repository.",
                            "type": "string"
                          },
                          "tag": {
                            "description": "Tag denotes a tag in the repository that matched selection criteria and\nresolved to this commit.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "images": {
                      "description": "Images describes specific versions of specific container images.",
                      "items": {
                        "description": "Image describes a specific version of a container image.",
                        "properties": {
                          "digest": {
                            "description": "Digest identifies a specific version of the image in the repository\nspecified by RepoURL. This is a more precise identifier than Tag.",
                            "type": "string"
                          },
                          "gitRepoURL": {
                            "description": "GitRepoURL specifies the URL of a Git repository that contains the source\ncode for the image repository referenced by the RepoURL field if Kargo was\nable to infer it.",
                            "type": "string"
                          },
                          "repoURL": {
                            "description": "RepoURL describes the repository in which the image can be found.",
                            "type": "string"
                          },
                          "tag": {
                            "description": "Tag identifies a specific version of the image in the repository specified\nby RepoURL.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "Name is system-assigned identifier that is derived deterministically from\nthe contents of the Freight. i.e. Two pieces of Freight can be compared for\nequality by comparing their Names.",
                      "type": "string"
                    },
                    "origin": {
                      "description": "Origin describes a kind of Freight in terms of its origin.",
                      "properties": {
                        "kind": {
                          "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                          "enum": [
                            "Warehouse"
                          ],
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "kind",
                        "name"
                      ],
                      "type": "object"
                    },
                    "verificationHistory": {
                      "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                      "items": {
                        "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                        "properties": {
                          "actor": {
                            "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                            "type": "string"
                          },
                          "analysisRun": {
                            "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                            "properties": {
                              "name": {
                                "description": "Name is the name of the AnalysisRun.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace is the namespace of the AnalysisRun.",
                                "type": "string"
                              },
                              "phase": {
                                "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "namespace",
                              "phase"
                            ],
                            "type": "object"
                          },
                          "finishTime": {
                            "description": "FinishTime is the time at which the Verification process finished.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": {
                            "description": "ID is the identifier of the Verification process.",
                            "type": "string"
                          },
                          "message": {
                            "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                            "type": "string"
                          },
                          "phase": {
                            "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                            "type": "string"
                          },
                          "startTime": {
                            "description": "StartTime is the time at which the Verification process was started.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "verificationInfo": {
                      "description": "VerificationInfo is information about any verification process that was\nassociated with this Freight for this Stage.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                      "properties": {
                        "actor": {
                          "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                          "type": "string"
                        },
                        "analysisRun": {
                          "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                          "properties": {
                            "name": {
                              "description": "Name is the name of the AnalysisRun.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace is the namespace of the AnalysisRun.",
                              "type": "string"
                            },
                            "phase": {
                              "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "namespace",
                            "phase"
                          ],
                          "type": "object"
                        },
                        "finishTime": {
                          "description": "FinishTime is the time at which the Verification process finished.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "ID is the identifier of the Verification process.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                          "type": "string"
                        },
                        "phase": {
                          "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                          "type": "string"
                        },
                        "startTime": {
                          "description": "StartTime is the time at which the Verification process was started.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "warehouse": {
                      "description": "Warehouse is the name of the Warehouse that created this Freight.\n\n\nDeprecated: Use the Origin instead.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "freightCollection": {
                  "description": "FreightCollection contains the details of the piece of Freight referenced\nby this Promotion as well as any additional Freight that is carried over\nfrom the target Stage's current state.",
                  "properties": {
                    "id": {
                      "description": "ID is a unique and deterministically calculated identifier for the\nFreightCollection. It is updated on each use of the UpdateOrPush method.",
                      "type": "string"
                    },
                    "items": {
                      "additionalProperties": {
                        "description": "FreightReference is a simplified representation of a piece of Freight -- not\na root resource type.",
                        "properties": {
                          "charts": {
                            "description": "Charts describes specific versions of specific Helm charts.",
                            "items": {
                              "description": "Chart describes a specific version of a Helm chart.",
                              "properties": {
                                "name": {
                                  "description": "Name specifies the name of the chart.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "description": "RepoURL specifies the URL of a Helm chart repository. Classic chart\nrepositories (using HTTP/S) can contain differently named charts. When this\nfield points to such a repository, the Name field will specify the name of\nthe chart within the repository. In the case of a repository within an OCI\nregistry, the URL implicitly points to a specific chart and the Name field\nwill be empty.",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Version specifies a particular version of the chart.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "commits": {
                            "description": "Commits describes specific Git repository commits.",
                            "items": {
                              "description": "GitCommit describes a specific commit from a specific Git repository.",
                              "properties": {
                                "author": {
                                  "description": "Author is the author of the commit.",
                                  "type": "string"
                                },
                                "branch": {
                                  "description": "Branch denotes the branch of the repository where this commit was found.",
                                  "type": "string"
                                },
                                "committer": {
                                  "description": "Committer is the person who committed the commit.",
                                  "type": "string"
                                },
                                "healthCheckCommit": {
                                  "description": "HealthCheckCommit is the ID of a specific commit. When specified,\nassessments of Stage health will use this value (instead of ID) when\ndetermining if applicable sources of Argo CD Application resources\nassociated with the Stage are or are not synced to this commit. Note that\nthere are cases (as in that of Kargo Render being utilized as a promotion\nmechanism) wherein the value of this field may differ from the commit ID\nfound in the ID field.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "ID is the ID of a specific commit in the Git repository specified by\nRepoURL.",
                                  "type": "string"
                                },
                                "message": {
                                  "description": "Message is the message associated with the commit. At present, this only\ncontains the first line (subject) of the commit message.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "description": "RepoURL is the URL of a Git repository.",
                                  "type": "string"
                                },
                                "tag": {
                                  "description": "Tag denotes a tag in the repository that matched selection criteria and\nresolved to this commit.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "images": {
                            "description": "Images describes specific versions of specific container images.",
                            "items": {
                              "description": "Image describes a specific version of a container image.",
                              "properties": {
                                "digest": {
                                  "description": "Digest identifies a specific version of the image in the repository\nspecified by RepoURL. This is a more precise identifier than Tag.",
                                  "type": "string"
                                },
                                "gitRepoURL": {
                                  "description": "GitRepoURL specifies the URL of a Git repository that contains the source\ncode for the image repository referenced by the RepoURL field if Kargo was\nable to infer it.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "description": "RepoURL describes the repository in which the image can be found.",
                                  "type": "string"
                                },
                                "tag": {
                                  "description": "Tag identifies a specific version of the image in the repository specified\nby RepoURL.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "Name is system-assigned identifier that is derived deterministically from\nthe contents of the Freight. i.e. Two pieces of Freight can be compared for\nequality by comparing their Names.",
                            "type": "string"
                          },
                          "origin": {
                            "description": "Origin describes a kind of Freight in terms of its origin.",
                            "properties": {
                              "kind": {
                                "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                                "enum": [
                                  "Warehouse"
                                ],
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ],
                            "type": "object"
                          },
                          "verificationHistory": {
                            "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                            "items": {
                              "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                              "properties": {
                                "actor": {
                                  "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                                  "type": "string"
                                },
                                "analysisRun": {
                                  "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                                  "properties": {
                                    "name": {
                                      "description": "Name is the name of the AnalysisRun.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "Namespace is the namespace of the AnalysisRun.",
                                      "type": "string"
                                    },
                                    "phase": {
                                      "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "namespace",
                                    "phase"
                                  ],
                                  "type": "object"
                                },
                                "finishTime": {
                                  "description": "FinishTime is the time at which the Verification process finished.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "ID is the identifier of the Verification process.",
                                  "type": "string"
                                },
                                "message": {
                                  "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                                  "type": "string"
                                },
                                "phase": {
                                  "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                                  "type": "string"
                                },
                                "startTime": {
                                  "description": "StartTime is the time at which the Verification process was started.",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "verificationInfo": {
                            "description": "VerificationInfo is information about any verification process that was\nassociated with this Freight for this Stage.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                            "properties": {
                              "actor": {
                                "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                                "type": "string"
                              },
                              "analysisRun": {
                                "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                                "properties": {
                                  "name": {
                                    "description": "Name is the name of the AnalysisRun.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace is the namespace of the AnalysisRun.",
                                    "type": "string"
                                  },
                                  "phase": {
                                    "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "namespace",
                                  "phase"
                                ],
                                "type": "object"
                              },
                              "finishTime": {
                                "description": "FinishTime is the time at which the Verification process finished.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "id": {
                                "description": "ID is the identifier of the Verification process.",
                                "type": "string"
                              },
                              "message": {
                                "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                                "type": "string"
                              },
                              "phase": {
                                "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                                "type": "string"
                              },
                              "startTime": {
                                "description": "StartTime is the time at which the Verification process was started.",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "warehouse": {
                            "description": "Warehouse is the name of the Warehouse that created this Freight.\n\n\nDeprecated: Use the Origin instead.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "description": "Freight is a map of FreightReference objects, indexed by their Warehouse\norigin.",
                      "type": "object"
                    },
                    "verificationHistory": {
                      "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.",
                      "items": {
                        "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                        "properties": {
                          "actor": {
                            "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                            "type": "string"
                          },
                          "analysisRun": {
                            "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                            "properties": {
                              "name": {
                                "description": "Name is the name of the AnalysisRun.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace is the namespace of the AnalysisRun.",
                                "type": "string"
                              },
                              "phase": {
                                "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "namespace",
                              "phase"
                            ],
                            "type": "object"
                          },
                          "finishTime": {
                            "description": "FinishTime is the time at which the Verification process finished.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": {
                            "description": "ID is the identifier of the Verification process.",
                            "type": "string"
                          },
                          "message": {
                            "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                            "type": "string"
                          },
                          "phase": {
                            "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                            "type": "string"
                          },
                          "startTime": {
                            "description": "StartTime is the time at which the Verification process was started.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "lastHandledRefresh": {
                  "description": "LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh\nannotation that was handled by the controller. This field can be used to\ndetermine whether the request to refresh the resource has been handled.",
                  "type": "string"
                },
                "message": {
                  "description": "Message is a display message about the promotion, including any errors\npreventing the Promotion controller from executing this Promotion.\ni.e. If the Phase field has a value of Failed, this field can be expected\nto explain why.",
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Metadata holds arbitrary metadata set by promotion mechanisms\n(e.g. for display purposes, or internal bookkeeping)",
                  "type": "object"
                },
                "phase": {
                  "description": "Phase describes where the Promotion currently is in its lifecycle.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "freightHistory": {
          "description": "FreightHistory is a list of recent Freight selections that were deployed\nto the Stage. By default, the last ten Freight selections are stored.\nThe first item in the list is the most recent Freight selection and\ncurrently deployed to the Stage, subsequent items are older selections.",
          "items": {
            "description": "FreightCollection is a collection of FreightReferences, each of which\nrepresents a piece of Freight that has been selected for deployment to a\nStage.",
            "properties": {
              "id": {
                "description": "ID is a unique and deterministically calculated identifier for the\nFreightCollection. It is updated on each use of the UpdateOrPush method.",
                "type": "string"
              },
              "items": {
                "additionalProperties": {
                  "description": "FreightReference is a simplified representation of a piece of Freight -- not\na root resource type.",
                  "properties": {
                    "charts": {
                      "description": "Charts describes specific versions of specific Helm charts.",
                      "items": {
                        "description": "Chart describes a specific version of a Helm chart.",
                        "properties": {
                          "name": {
                            "description": "Name specifies the name of the chart.",
                            "type": "string"
                          },
                          "repoURL": {
                            "description": "RepoURL specifies the URL of a Helm chart repository. Classic chart\nrepositories (using HTTP/S) can contain differently named charts. When this\nfield points to such a repository, the Name field will specify the name of\nthe chart within the repository. In the case of a repository within an OCI\nregistry, the URL implicitly points to a specific chart and the Name field\nwill be empty.",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version specifies a particular version of the chart.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "commits": {
                      "description": "Commits describes specific Git repository commits.",
                      "items": {
                        "description": "GitCommit describes a specific commit from a specific Git repository.",
                        "properties": {
                          "author": {
                            "description": "Author is the author of the commit.",
                            "type": "string"
                          },
                          "branch": {
                            "description": "Branch denotes the branch of the repository where this commit was found.",
                            "type": "string"
                          },
                          "committer": {
                            "description": "Committer is the person who committed the commit.",
                            "type": "string"
                          },
                          "healthCheckCommit": {
                            "description": "HealthCheckCommit is the ID of a specific commit. When specified,\nassessments of Stage health will use this value (instead of ID) when\ndetermining if applicable sources of Argo CD Application resources\nassociated with the Stage are or are not synced to this commit. Note that\nthere are cases (as in that of Kargo Render being utilized as a promotion\nmechanism) wherein the value of this field may differ from the commit ID\nfound in the ID field.",
                            "type": "string"
                          },
                          "id": {
                            "description": "ID is the ID of a specific commit in the Git repository specified by\nRepoURL.",
                            "type": "string"
                          },
                          "message": {
                            "description": "Message is the message associated with the commit. At present, this only\ncontains the first line (subject) of the commit message.",
                            "type": "string"
                          },
                          "repoURL": {
                            "description": "RepoURL is the URL of a Git repository.",
                            "type": "string"
                          },
                          "tag": {
                            "description": "Tag denotes a tag in the repository that matched selection criteria and\nresolved to this commit.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "images": {
                      "description": "Images describes specific versions of specific container images.",
                      "items": {
                        "description": "Image describes a specific version of a container image.",
                        "properties": {
                          "digest": {
                            "description": "Digest identifies a specific version of the image in the repository\nspecified by RepoURL. This is a more precise identifier than Tag.",
                            "type": "string"
                          },
                          "gitRepoURL": {
                            "description": "GitRepoURL specifies the URL of a Git repository that contains the source\ncode for the image repository referenced by the RepoURL field if Kargo was\nable to infer it.",
                            "type": "string"
                          },
                          "repoURL": {
                            "description": "RepoURL describes the repository in which the image can be found.",
                            "type": "string"
                          },
                          "tag": {
                            "description": "Tag identifies a specific version of the image in the repository specified\nby RepoURL.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "Name is system-assigned identifier that is derived deterministically from\nthe contents of the Freight. i.e. Two pieces of Freight can be compared for\nequality by comparing their Names.",
                      "type": "string"
                    },
                    "origin": {
                      "description": "Origin describes a kind of Freight in terms of its origin.",
                      "properties": {
                        "kind": {
                          "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                          "enum": [
                            "Warehouse"
                          ],
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "kind",
                        "name"
                      ],
                      "type": "object"
                    },
                    "verificationHistory": {
                      "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                      "items": {
                        "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                        "properties": {
                          "actor": {
                            "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                            "type": "string"
                          },
                          "analysisRun": {
                            "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                            "properties": {
                              "name": {
                                "description": "Name is the name of the AnalysisRun.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace is the namespace of the AnalysisRun.",
                                "type": "string"
                              },
                              "phase": {
                                "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "namespace",
                              "phase"
                            ],
                            "type": "object"
                          },
                          "finishTime": {
                            "description": "FinishTime is the time at which the Verification process finished.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": {
                            "description": "ID is the identifier of the Verification process.",
                            "type": "string"
                          },
                          "message": {
                            "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                            "type": "string"
                          },
                          "phase": {
                            "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                            "type": "string"
                          },
                          "startTime": {
                            "description": "StartTime is the time at which the Verification process was started.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "verificationInfo": {
                      "description": "VerificationInfo is information about any verification process that was\nassociated with this Freight for this Stage.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                      "properties": {
                        "actor": {
                          "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                          "type": "string"
                        },
                        "analysisRun": {
                          "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                          "properties": {
                            "name": {
                              "description": "Name is the name of the AnalysisRun.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace is the namespace of the AnalysisRun.",
                              "type": "string"
                            },
                            "phase": {
                              "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "namespace",
                            "phase"
                          ],
                          "type": "object"
                        },
                        "finishTime": {
                          "description": "FinishTime is the time at which the Verification process finished.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "ID is the identifier of the Verification process.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                          "type": "string"
                        },
                        "phase": {
                          "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                          "type": "string"
                        },
                        "startTime": {
                          "description": "StartTime is the time at which the Verification process was started.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "warehouse": {
                      "description": "Warehouse is the name of the Warehouse that created this Freight.\n\n\nDeprecated: Use the Origin instead.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "description": "Freight is a map of FreightReference objects, indexed by their Warehouse\norigin.",
                "type": "object"
              },
              "verificationHistory": {
                "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.",
                "items": {
                  "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                  "properties": {
                    "actor": {
                      "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                      "type": "string"
                    },
                    "analysisRun": {
                      "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                      "properties": {
                        "name": {
                          "description": "Name is the name of the AnalysisRun.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the AnalysisRun.",
                          "type": "string"
                        },
                        "phase": {
                          "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "namespace",
                        "phase"
                      ],
                      "type": "object"
                    },
                    "finishTime": {
                      "description": "FinishTime is the time at which the Verification process finished.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "description": "ID is the identifier of the Verification process.",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                      "type": "string"
                    },
                    "phase": {
                      "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                      "type": "string"
                    },
                    "startTime": {
                      "description": "StartTime is the time at which the Verification process was started.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              }
            },
            "required": [
              "id"
            ],
            "type": "object"
          },
          "type": "array"
        },
        "health": {
          "description": "Health is the Stage's last observed health.",
          "properties": {
            "argoCDApps": {
              "description": "ArgoCDApps describes the current state of any related ArgoCD Applications.",
              "items": {
                "description": "ArgoCDAppStatus describes the current state of a single ArgoCD Application.",
                "properties": {
                  "healthStatus": {
                    "description": "HealthStatus is the health of the ArgoCD Application.",
                    "properties": {
                      "message": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status"
                    ],
                    "type": "object"
                  },
                  "name": {
                    "description": "Name is the name of the ArgoCD Application.",
                    "type": "string"
                  },
                  "namespace": {
                    "description": "Namespace is the namespace of the ArgoCD Application.",
                    "type": "string"
                  },
                  "syncStatus": {
                    "description": "SyncStatus is the sync status of the ArgoCD Application.",
                    "properties": {
                      "revision": {
                        "type": "string"
                      },
                      "revisions": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "status": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status"
                    ],
                    "type": "object"
                  }
                },
                "required": [
                  "name",
                  "namespace"
                ],
                "type": "object"
              },
              "type": "array"
            },
            "issues": {
              "description": "Issues clarifies why a Stage in any state other than Healthy is in that\nstate. This field will always be the empty when a Stage is Healthy.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "status": {
              "description": "Status describes the health of the Stage.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "history": {
          "description": "History is a stack of recent Freight. By default, the last ten Freight are\nstored.\n\n\nDeprecated: Use the FreightHistory stack instead.",
          "items": {
            "description": "FreightReference is a simplified representation of a piece of Freight -- not\na root resource type.",
            "properties": {
              "charts": {
                "description": "Charts describes specific versions of specific Helm charts.",
                "items": {
                  "description": "Chart describes a specific version of a Helm chart.",
                  "properties": {
                    "name": {
                      "description": "Name specifies the name of the chart.",
                      "type": "string"
                    },
                    "repoURL": {
                      "description": "RepoURL specifies the URL of a Helm chart repository. Classic chart\nrepositories (using HTTP/S) can contain differently named charts. When this\nfield points to such a repository, the Name field will specify the name of\nthe chart within the repository. In the case of a repository within an OCI\nregistry, the URL implicitly points to a specific chart and the Name field\nwill be empty.",
                      "type": "string"
                    },
                    "version": {
                      "description": "Version specifies a particular version of the chart.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "commits": {
                "description": "Commits describes specific Git repository commits.",
                "items": {
                  "description": "GitCommit describes a specific commit from a specific Git repository.",
                  "properties": {
                    "author": {
                      "description": "Author is the author of the commit.",
                      "type": "string"
                    },
                    "branch": {
                      "description": "Branch denotes the branch of the repository where this commit was found.",
                      "type": "string"
                    },
                    "committer": {
                      "description": "Committer is the person who committed the commit.",
                      "type": "string"
                    },
                    "healthCheckCommit": {
                      "description": "HealthCheckCommit is the ID of a specific commit. When specified,\nassessments of Stage health will use this value (instead of ID) when\ndetermining if applicable sources of Argo CD Application resources\nassociated with the Stage are or are not synced to this commit. Note that\nthere are cases (as in that of Kargo Render being utilized as a promotion\nmechanism) wherein the value of this field may differ from the commit ID\nfound in the ID field.",
                      "type": "string"
                    },
                    "id": {
                      "description": "ID is the ID of a specific commit in the Git repository specified by\nRepoURL.",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message is the message associated with the commit. At present, this only\ncontains the first line (subject) of the commit message.",
                      "type": "string"
                    },
                    "repoURL": {
                      "description": "RepoURL is the URL of a Git repository.",
                      "type": "string"
                    },
                    "tag": {
                      "description": "Tag denotes a tag in the repository that matched selection criteria and\nresolved to this commit.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "images": {
                "description": "Images describes specific versions of specific container images.",
                "items": {
                  "description": "Image describes a specific version of a container image.",
                  "properties": {
                    "digest": {
                      "description": "Digest identifies a specific version of the image in the repository\nspecified by RepoURL. This is a more precise identifier than Tag.",
                      "type": "string"
                    },
                    "gitRepoURL": {
                      "description": "GitRepoURL specifies the URL of a Git repository that contains the source\ncode for the image repository referenced by the RepoURL field if Kargo was\nable to infer it.",
                      "type": "string"
                    },
                    "repoURL": {
                      "description": "RepoURL describes the repository in which the image can be found.",
                      "type": "string"
                    },
                    "tag": {
                      "description": "Tag identifies a specific version of the image in the repository specified\nby RepoURL.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "name": {
                "description": "Name is system-assigned identifier that is derived deterministically from\nthe contents of the Freight. i.e. Two pieces of Freight can be compared for\nequality by comparing their Names.",
                "type": "string"
              },
              "origin": {
                "description": "Origin describes a kind of Freight in terms of its origin.",
                "properties": {
                  "kind": {
                    "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                    "enum": [
                      "Warehouse"
                    ],
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                    "type": "string"
                  }
                },
                "required": [
                  "kind",
                  "name"
                ],
                "type": "object"
              },
              "verificationHistory": {
                "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                "items": {
                  "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                  "properties": {
                    "actor": {
                      "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                      "type": "string"
                    },
                    "analysisRun": {
                      "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                      "properties": {
                        "name": {
                          "description": "Name is the name of the AnalysisRun.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the AnalysisRun.",
                          "type": "string"
                        },
                        "phase": {
                          "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "namespace",
                        "phase"
                      ],
                      "type": "object"
                    },
                    "finishTime": {
                      "description": "FinishTime is the time at which the Verification process finished.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "description": "ID is the identifier of the Verification process.",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                      "type": "string"
                    },
                    "phase": {
                      "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                      "type": "string"
                    },
                    "startTime": {
                      "description": "StartTime is the time at which the Verification process was started.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "verificationInfo": {
                "description": "VerificationInfo is information about any verification process that was\nassociated with this Freight for this Stage.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                "properties": {
                  "actor": {
                    "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                    "type": "string"
                  },
                  "analysisRun": {
                    "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                    "properties": {
                      "name": {
                        "description": "Name is the name of the AnalysisRun.",
                        "type": "string"
                      },
                      "namespace": {
                        "description": "Namespace is the namespace of the AnalysisRun.",
                        "type": "string"
                      },
                      "phase": {
                        "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "namespace",
                      "phase"
                    ],
                    "type": "object"
                  },
                  "finishTime": {
                    "description": "FinishTime is the time at which the Verification process finished.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "id": {
                    "description": "ID is the identifier of the Verification process.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                    "type": "string"
                  },
                  "phase": {
                    "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                    "type": "string"
                  },
                  "startTime": {
                    "description": "StartTime is the time at which the Verification process was started.",
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "warehouse": {
                "description": "Warehouse is the name of the Warehouse that created this Freight.\n\n\nDeprecated: Use the Origin instead.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array"
        },
        "lastHandledRefresh": {
          "description": "LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh\nannotation that was handled by the controller. This field can be used to\ndetermine whether the request to refresh the resource has been handled.",
          "type": "string"
        },
        "lastPromotion": {
          "description": "LastPromotion is a reference to the last completed promotion.",
          "properties": {
            "finishedAt": {
              "description": "FinishedAt is the time at which the Promotion was completed.",
              "format": "date-time",
              "type": "string"
            },
            "freight": {
              "description": "Freight is the freight being promoted",
              "properties": {
                "charts": {
                  "description": "Charts describes specific versions of specific Helm charts.",
                  "items": {
                    "description": "Chart describes a specific version of a Helm chart.",
                    "properties": {
                      "name": {
                        "description": "Name specifies the name of the chart.",
                        "type": "string"
                      },
                      "repoURL": {
                        "description": "RepoURL specifies the URL of a Helm chart repository. Classic chart\nrepositories (using HTTP/S) can contain differently named charts. When this\nfield points to such a repository, the Name field will specify the name of\nthe chart within the repository. In the case of a repository within an OCI\nregistry, the URL implicitly points to a specific chart and the Name field\nwill be empty.",
                        "type": "string"
                      },
                      "version": {
                        "description": "Version specifies a particular version of the chart.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "commits": {
                  "description": "Commits describes specific Git repository commits.",
                  "items": {
                    "description": "GitCommit describes a specific commit from a specific Git repository.",
                    "properties": {
                      "author": {
                        "description": "Author is the author of the commit.",
                        "type": "string"
                      },
                      "branch": {
                        "description": "Branch denotes the branch of the repository where this commit was found.",
                        "type": "string"
                      },
                      "committer": {
                        "description": "Committer is the person who committed the commit.",
                        "type": "string"
                      },
                      "healthCheckCommit": {
                        "description": "HealthCheckCommit is the ID of a specific commit. When specified,\nassessments of Stage health will use this value (instead of ID) when\ndetermining if applicable sources of Argo CD Application resources\nassociated with the Stage are or are not synced to this commit. Note that\nthere are cases (as in that of Kargo Render being utilized as a promotion\nmechanism) wherein the value of this field may differ from the commit ID\nfound in the ID field.",
                        "type": "string"
                      },
                      "id": {
                        "description": "ID is the ID of a specific commit in the Git repository specified by\nRepoURL.",
                        "type": "string"
                      },
                      "message": {
                        "description": "Message is the message associated with the commit. At present, this only\ncontains the first line (subject) of the commit message.",
                        "type": "string"
                      },
                      "repoURL": {
                        "description": "RepoURL is the URL of a Git repository.",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Tag denotes a tag in the repository that matched selection criteria and\nresolved to this commit.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "images": {
                  "description": "Images describes specific versions of specific container images.",
                  "items": {
                    "description": "Image describes a specific version of a container image.",
                    "properties": {
                      "digest": {
                        "description": "Digest identifies a specific version of the image in the repository\nspecified by RepoURL. This is a more precise identifier than Tag.",
                        "type": "string"
                      },
                      "gitRepoURL": {
                        "description": "GitRepoURL specifies the URL of a Git repository that contains the source\ncode for the image repository referenced by the RepoURL field if Kargo was\nable to infer it.",
                        "type": "string"
                      },
                      "repoURL": {
                        "description": "RepoURL describes the repository in which the image can be found.",
                        "type": "string"
                      },
                      "tag": {
                        "description": "Tag identifies a specific version of the image in the repository specified\nby RepoURL.",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "name": {
                  "description": "Name is system-assigned identifier that is derived deterministically from\nthe contents of the Freight. i.e. Two pieces of Freight can be compared for\nequality by comparing their Names.",
                  "type": "string"
                },
                "origin": {
                  "description": "Origin describes a kind of Freight in terms of its origin.",
                  "properties": {
                    "kind": {
                      "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                      "enum": [
                        "Warehouse"
                      ],
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "kind",
                    "name"
                  ],
                  "type": "object"
                },
                "verificationHistory": {
                  "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                  "items": {
                    "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                    "properties": {
                      "actor": {
                        "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                        "type": "string"
                      },
                      "analysisRun": {
                        "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                        "properties": {
                          "name": {
                            "description": "Name is the name of the AnalysisRun.",
                            "type": "string"
                          },
                          "namespace": {
                            "description": "Namespace is the namespace of the AnalysisRun.",
                            "type": "string"
                          },
                          "phase": {
                            "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "namespace",
                          "phase"
                        ],
                        "type": "object"
                      },
                      "finishTime": {
                        "description": "FinishTime is the time at which the Verification process finished.",
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "description": "ID is the identifier of the Verification process.",
                        "type": "string"
                      },
                      "message": {
                        "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                        "type": "string"
                      },
                      "phase": {
                        "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                        "type": "string"
                      },
                      "startTime": {
                        "description": "StartTime is the time at which the Verification process was started.",
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "verificationInfo": {
                  "description": "VerificationInfo is information about any verification process that was\nassociated with this Freight for this Stage.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                  "properties": {
                    "actor": {
                      "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                      "type": "string"
                    },
                    "analysisRun": {
                      "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                      "properties": {
                        "name": {
                          "description": "Name is the name of the AnalysisRun.",
                          "type": "string"
                        },
                        "namespace": {
                          "description": "Namespace is the namespace of the AnalysisRun.",
                          "type": "string"
                        },
                        "phase": {
                          "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "namespace",
                        "phase"
                      ],
                      "type": "object"
                    },
                    "finishTime": {
                      "description": "FinishTime is the time at which the Verification process finished.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "description": "ID is the identifier of the Verification process.",
                      "type": "string"
                    },
                    "message": {
                      "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                      "type": "string"
                    },
                    "phase": {
                      "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                      "type": "string"
                    },
                    "startTime": {
                      "description": "StartTime is the time at which the Verification process was started.",
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "warehouse": {
                  "description": "Warehouse is the name of the Warehouse that created this Freight.\n\n\nDeprecated: Use the Origin instead.",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "name": {
              "description": "Name is the name of the Promotion",
              "type": "string"
            },
            "status": {
              "description": "Status is the (optional) status of the promotion",
              "properties": {
                "finishedAt": {
                  "description": "FinishedAt is the time when the promotion was completed.",
                  "format": "date-time",
                  "type": "string"
                },
                "freight": {
                  "description": "Freight is the detail of the piece of freight that was referenced by this promotion.",
                  "properties": {
                    "charts": {
                      "description": "Charts describes specific versions of specific Helm charts.",
                      "items": {
                        "description": "Chart describes a specific version of a Helm chart.",
                        "properties": {
                          "name": {
                            "description": "Name specifies the name of the chart.",
                            "type": "string"
                          },
                          "repoURL": {
                            "description": "RepoURL specifies the URL of a Helm chart repository. Classic chart\nrepositories (using HTTP/S) can contain differently named charts. When this\nfield points to such a repository, the Name field will specify the name of\nthe chart within the repository. In the case of a repository within an OCI\nregistry, the URL implicitly points to a specific chart and the Name field\nwill be empty.",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version specifies a particular version of the chart.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "commits": {
                      "description": "Commits describes specific Git repository commits.",
                      "items": {
                        "description": "GitCommit describes a specific commit from a specific Git repository.",
                        "properties": {
                          "author": {
                            "description": "Author is the author of the commit.",
                            "type": "string"
                          },
                          "branch": {
                            "description": "Branch denotes the branch of the repository where this commit was found.",
                            "type": "string"
                          },
                          "committer": {
                            "description": "Committer is the person who committed the commit.",
                            "type": "string"
                          },
                          "healthCheckCommit": {
                            "description": "HealthCheckCommit is the ID of a specific commit. When specified,\nassessments of Stage health will use this value (instead of ID) when\ndetermining if applicable sources of Argo CD Application resources\nassociated with the Stage are or are not synced to this commit. Note that\nthere are cases (as in that of Kargo Render being utilized as a promotion\nmechanism) wherein the value of this field may differ from the commit ID\nfound in the ID field.",
                            "type": "string"
                          },
                          "id": {
                            "description": "ID is the ID of a specific commit in the Git repository specified by\nRepoURL.",
                            "type": "string"
                          },
                          "message": {
                            "description": "Message is the message associated with the commit. At present, this only\ncontains the first line (subject) of the commit message.",
                            "type": "string"
                          },
                          "repoURL": {
                            "description": "RepoURL is the URL of a Git repository.",
                            "type": "string"
                          },
                          "tag": {
                            "description": "Tag denotes a tag in the repository that matched selection criteria and\nresolved to this commit.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "images": {
                      "description": "Images describes specific versions of specific container images.",
                      "items": {
                        "description": "Image describes a specific version of a container image.",
                        "properties": {
                          "digest": {
                            "description": "Digest identifies a specific version of the image in the repository\nspecified by RepoURL. This is a more precise identifier than Tag.",
                            "type": "string"
                          },
                          "gitRepoURL": {
                            "description": "GitRepoURL specifies the URL of a Git repository that contains the source\ncode for the image repository referenced by the RepoURL field if Kargo was\nable to infer it.",
                            "type": "string"
                          },
                          "repoURL": {
                            "description": "RepoURL describes the repository in which the image can be found.",
                            "type": "string"
                          },
                          "tag": {
                            "description": "Tag identifies a specific version of the image in the repository specified\nby RepoURL.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "name": {
                      "description": "Name is system-assigned identifier that is derived deterministically from\nthe contents of the Freight. i.e. Two pieces of Freight can be compared for\nequality by comparing their Names.",
                      "type": "string"
                    },
                    "origin": {
                      "description": "Origin describes a kind of Freight in terms of its origin.",
                      "properties": {
                        "kind": {
                          "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                          "enum": [
                            "Warehouse"
                          ],
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                          "type": "string"
                        }
                      },
                      "required": [
                        "kind",
                        "name"
                      ],
                      "type": "object"
                    },
                    "verificationHistory": {
                      "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                      "items": {
                        "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                        "properties": {
                          "actor": {
                            "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                            "type": "string"
                          },
                          "analysisRun": {
                            "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                            "properties": {
                              "name": {
                                "description": "Name is the name of the AnalysisRun.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace is the namespace of the AnalysisRun.",
                                "type": "string"
                              },
                              "phase": {
                                "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "namespace",
                              "phase"
                            ],
                            "type": "object"
                          },
                          "finishTime": {
                            "description": "FinishTime is the time at which the Verification process finished.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": {
                            "description": "ID is the identifier of the Verification process.",
                            "type": "string"
                          },
                          "message": {
                            "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                            "type": "string"
                          },
                          "phase": {
                            "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                            "type": "string"
                          },
                          "startTime": {
                            "description": "StartTime is the time at which the Verification process was started.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    },
                    "verificationInfo": {
                      "description": "VerificationInfo is information about any verification process that was\nassociated with this Freight for this Stage.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                      "properties": {
                        "actor": {
                          "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                          "type": "string"
                        },
                        "analysisRun": {
                          "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                          "properties": {
                            "name": {
                              "description": "Name is the name of the AnalysisRun.",
                              "type": "string"
                            },
                            "namespace": {
                              "description": "Namespace is the namespace of the AnalysisRun.",
                              "type": "string"
                            },
                            "phase": {
                              "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "namespace",
                            "phase"
                          ],
                          "type": "object"
                        },
                        "finishTime": {
                          "description": "FinishTime is the time at which the Verification process finished.",
                          "format": "date-time",
                          "type": "string"
                        },
                        "id": {
                          "description": "ID is the identifier of the Verification process.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                          "type": "string"
                        },
                        "phase": {
                          "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                          "type": "string"
                        },
                        "startTime": {
                          "description": "StartTime is the time at which the Verification process was started.",
                          "format": "date-time",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "warehouse": {
                      "description": "Warehouse is the name of the Warehouse that created this Freight.\n\n\nDeprecated: Use the Origin instead.",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "freightCollection": {
                  "description": "FreightCollection contains the details of the piece of Freight referenced\nby this Promotion as well as any additional Freight that is carried over\nfrom the target Stage's current state.",
                  "properties": {
                    "id": {
                      "description": "ID is a unique and deterministically calculated identifier for the\nFreightCollection. It is updated on each use of the UpdateOrPush method.",
                      "type": "string"
                    },
                    "items": {
                      "additionalProperties": {
                        "description": "FreightReference is a simplified representation of a piece of Freight -- not\na root resource type.",
                        "properties": {
                          "charts": {
                            "description": "Charts describes specific versions of specific Helm charts.",
                            "items": {
                              "description": "Chart describes a specific version of a Helm chart.",
                              "properties": {
                                "name": {
                                  "description": "Name specifies the name of the chart.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "description": "RepoURL specifies the URL of a Helm chart repository. Classic chart\nrepositories (using HTTP/S) can contain differently named charts. When this\nfield points to such a repository, the Name field will specify the name of\nthe chart within the repository. In the case of a repository within an OCI\nregistry, the URL implicitly points to a specific chart and the Name field\nwill be empty.",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Version specifies a particular version of the chart.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "commits": {
                            "description": "Commits describes specific Git repository commits.",
                            "items": {
                              "description": "GitCommit describes a specific commit from a specific Git repository.",
                              "properties": {
                                "author": {
                                  "description": "Author is the author of the commit.",
                                  "type": "string"
                                },
                                "branch": {
                                  "description": "Branch denotes the branch of the repository where this commit was found.",
                                  "type": "string"
                                },
                                "committer": {
                                  "description": "Committer is the person who committed the commit.",
                                  "type": "string"
                                },
                                "healthCheckCommit": {
                                  "description": "HealthCheckCommit is the ID of a specific commit. When specified,\nassessments of Stage health will use this value (instead of ID) when\ndetermining if applicable sources of Argo CD Application resources\nassociated with the Stage are or are not synced to this commit. Note that\nthere are cases (as in that of Kargo Render being utilized as a promotion\nmechanism) wherein the value of this field may differ from the commit ID\nfound in the ID field.",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "ID is the ID of a specific commit in the Git repository specified by\nRepoURL.",
                                  "type": "string"
                                },
                                "message": {
                                  "description": "Message is the message associated with the commit. At present, this only\ncontains the first line (subject) of the commit message.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "description": "RepoURL is the URL of a Git repository.",
                                  "type": "string"
                                },
                                "tag": {
                                  "description": "Tag denotes a tag in the repository that matched selection criteria and\nresolved to this commit.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "images": {
                            "description": "Images describes specific versions of specific container images.",
                            "items": {
                              "description": "Image describes a specific version of a container image.",
                              "properties": {
                                "digest": {
                                  "description": "Digest identifies a specific version of the image in the repository\nspecified by RepoURL. This is a more precise identifier than Tag.",
                                  "type": "string"
                                },
                                "gitRepoURL": {
                                  "description": "GitRepoURL specifies the URL of a Git repository that contains the source\ncode for the image repository referenced by the RepoURL field if Kargo was\nable to infer it.",
                                  "type": "string"
                                },
                                "repoURL": {
                                  "description": "RepoURL describes the repository in which the image can be found.",
                                  "type": "string"
                                },
                                "tag": {
                                  "description": "Tag identifies a specific version of the image in the repository specified\nby RepoURL.",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "name": {
                            "description": "Name is system-assigned identifier that is derived deterministically from\nthe contents of the Freight. i.e. Two pieces of Freight can be compared for\nequality by comparing their Names.",
                            "type": "string"
                          },
                          "origin": {
                            "description": "Origin describes a kind of Freight in terms of its origin.",
                            "properties": {
                              "kind": {
                                "description": "Kind is the kind of resource from which Freight may have originated. At\npresent, this can only be \"Warehouse\".",
                                "enum": [
                                  "Warehouse"
                                ],
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the name of the resource of the kind indicated by the Kind field\nfrom which Freight may originated.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "kind",
                              "name"
                            ],
                            "type": "object"
                          },
                          "verificationHistory": {
                            "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                            "items": {
                              "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                              "properties": {
                                "actor": {
                                  "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                                  "type": "string"
                                },
                                "analysisRun": {
                                  "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                                  "properties": {
                                    "name": {
                                      "description": "Name is the name of the AnalysisRun.",
                                      "type": "string"
                                    },
                                    "namespace": {
                                      "description": "Namespace is the namespace of the AnalysisRun.",
                                      "type": "string"
                                    },
                                    "phase": {
                                      "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "namespace",
                                    "phase"
                                  ],
                                  "type": "object"
                                },
                                "finishTime": {
                                  "description": "FinishTime is the time at which the Verification process finished.",
                                  "format": "date-time",
                                  "type": "string"
                                },
                                "id": {
                                  "description": "ID is the identifier of the Verification process.",
                                  "type": "string"
                                },
                                "message": {
                                  "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                                  "type": "string"
                                },
                                "phase": {
                                  "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                                  "type": "string"
                                },
                                "startTime": {
                                  "description": "StartTime is the time at which the Verification process was started.",
                                  "format": "date-time",
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            },
                            "type": "array"
                          },
                          "verificationInfo": {
                            "description": "VerificationInfo is information about any verification process that was\nassociated with this Freight for this Stage.\n\n\nDeprecated: Use FreightCollection.VerificationHistory instead.",
                            "properties": {
                              "actor": {
                                "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                                "type": "string"
                              },
                              "analysisRun": {
                                "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                                "properties": {
                                  "name": {
                                    "description": "Name is the name of the AnalysisRun.",
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "description": "Namespace is the namespace of the AnalysisRun.",
                                    "type": "string"
                                  },
                                  "phase": {
                                    "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name",
                                  "namespace",
                                  "phase"
                                ],
                                "type": "object"
                              },
                              "finishTime": {
                                "description": "FinishTime is the time at which the Verification process finished.",
                                "format": "date-time",
                                "type": "string"
                              },
                              "id": {
                                "description": "ID is the identifier of the Verification process.",
                                "type": "string"
                              },
                              "message": {
                                "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                                "type": "string"
                              },
                              "phase": {
                                "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                                "type": "string"
                              },
                              "startTime": {
                                "description": "StartTime is the time at which the Verification process was started.",
                                "format": "date-time",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "warehouse": {
                            "description": "Warehouse is the name of the Warehouse that created this Freight.\n\n\nDeprecated: Use the Origin instead.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "description": "Freight is a map of FreightReference objects, indexed by their Warehouse\norigin.",
                      "type": "object"
                    },
                    "verificationHistory": {
                      "description": "VerificationHistory is a stack of recent VerificationInfo. By default,\nthe last ten VerificationInfo are stored.",
                      "items": {
                        "description": "VerificationInfo contains the details of an instance of a Verification\nprocess.",
                        "properties": {
                          "actor": {
                            "description": "Actor is the name of the entity that initiated or aborted the\nVerification process.",
                            "type": "string"
                          },
                          "analysisRun": {
                            "description": "AnalysisRun is a reference to the Argo Rollouts AnalysisRun that implements\nthe Verification process.",
                            "properties": {
                              "name": {
                                "description": "Name is the name of the AnalysisRun.",
                                "type": "string"
                              },
                              "namespace": {
                                "description": "Namespace is the namespace of the AnalysisRun.",
                                "type": "string"
                              },
                              "phase": {
                                "description": "Phase is the last observed phase of the AnalysisRun referenced by Name.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "namespace",
                              "phase"
                            ],
                            "type": "object"
                          },
                          "finishTime": {
                            "description": "FinishTime is the time at which the Verification process finished.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "id": {
                            "description": "ID is the identifier of the Verification process.",
                            "type": "string"
                          },
                          "message": {
                            "description": "Message may contain additional information about why the verification\nprocess is in its current phase.",
                            "type": "string"
                          },
                          "phase": {
                            "description": "Phase describes the current phase of the Verification process. Generally,\nthis will be a reflection of the underlying AnalysisRun's phase, however,\nthere are exceptions to this, such as in the case where an AnalysisRun\ncannot be launched successfully.",
                            "type": "string"
                          },
                          "startTime": {
                            "description": "StartTime is the time at which the Verification process was started.",
                            "format": "date-time",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "id"
                  ],
                  "type": "object"
                },
                "lastHandledRefresh": {
                  "description": "LastHandledRefresh holds the value of the most recent AnnotationKeyRefresh\nannotation that was handled by the controller. This field can be used to\ndetermine whether the request to refresh the resource has been handled.",
                  "type": "string"
                },
                "message": {
                  "description": "Message is a display message about the promotion, including any errors\npreventing the Promotion controller from executing this Promotion.\ni.e. If the Phase field has a value of Failed, this field can be expected\nto explain why.",
                  "type": "string"
                },
                "metadata": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Metadata holds arbitrary metadata set by promotion mechanisms\n(e.g. for display purposes, or internal bookkeeping)",
                  "type": "object"
                },
                "phase": {
                  "description": "Phase describes where the Promotion currently is in its lifecycle.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "required": [
            "name"
          ],
          "type": "object"
        },
        "message": {
          "description": "Message describes any errors that are preventing the Stage controller\nfrom assessing Stage health or from finding new Freight.",
          "type": "string"
        },
        "observedGeneration": {
          "description": "ObservedGeneration represents the .metadata.generation that this Stage\nstatus was reconciled against.",
          "format": "int64",
          "maximum": 9223372036854776000,
          "minimum": -9223372036854776000,
          "type": "integer"
        },
        "phase": {
          "description": "Phase describes where the Stage currently is in its lifecycle.",
          "type": "string"
        }
      },
      "type": "object"
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}