{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "ArgoCDUpdateConfig",
  
  "definitions": {

    "argoCDAppUpdate": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "fromOrigin": {
          "$ref": "#definitions/origin"
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of an Argo CD Application resource to be updated.",
          "minLength": 1
        },
        "namespace": {
          "type": "string",
          "description": "Specifies the namespace of an Argo CD Application resource to be updated. If left unspecified, the namespace will be the controller's configured default.",
          "minLength": 1
        },
        "sources": {
          "type": "array",
          "description": "Describes updates to be applied to various sources of an Argo CD Application resource.",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/argoCDAppSourceUpdate"
          }
        }
      }
    },

    "argoCDAppSourceUpdate": {
      "type": "object",
      "additionalProperties": false,
      "required": ["repoURL"],
      "properties": {
        "chart": {
          "type": "string",
          "description": "If applicable, identifies a specific chart within the Helm chart repository specified by the 'repoURL' field. When the source to be updated references a Helm chart repository, the values of the 'repoURL' and 'chart' fields should exactly match the values of the same fields in the source. i.e. Do not match the values of these two fields to your Warehouse; match them to the Application source you wish to update.",
          "minLength": 1
        },
        "desiredCommitFromStep": {
          "type": "string",
          "description": "Applicable only when 'repoURL' references a Git repository, this field references the 'commit' output from a previous step and uses it as the desired revision for the source. If this is left undefined, the desired revision will be determined by Freight (if possible). Note that the source's 'targetRevision' will not be updated to this commit unless 'updateTargetRevision=true' is set. The utility of this field is to ensure that health checks on Argo CD ApplicationSources can account for scenarios where the desired revision differs from what may be found in Freight, likely due to the use of rendered branches and/or PR-based promotion workflows.",
          "minLength": 1
        },
        "fromOrigin": {
          "$ref": "#definitions/origin"
        },
        "helm": {
          "$ref": "#/definitions/argoCDHelmParameterUpdates"
        },
        "kustomize": {
          "$ref": "#/definitions/argoCDKustomizeImageUpdates"
        },
        "repoURL": {
          "type": "string",
          "description": "With possible help from the 'chart' field, identifies which of an Argo CD Application's sources is to be updated. When the source to be updated references a Helm chart repository, the values of the 'repoURL' and 'chart' fields should exactly match the values of the same fields in the source. i.e. Do not match the values of these two fields to your Warehouse; match them to the Application source you wish to update.",
          "minLength": 1
        },
        "updateTargetRevision": {
          "type": "boolean",
          "description": "Indicates whether the source should be updated such that its TargetRevision field points at the most recently git commit (if 'repoURL' references a Git repository) or chart version (if 'repoURL' references a chart repository)."
        }
      }
    },

    "argoCDHelmParameterUpdates": {
      "type": "object",
      "description": "Describes updates to an Argo CD Application source's Helm parameters.",
      "additionalProperties": false,
      "required": ["images"],
      "properties": {
        "fromOrigin": {
          "$ref": "#definitions/origin"
        },
        "images": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/argoCDHelmImageUpdate"
          }
        }
      }
    },

    "argoCDHelmImageUpdate": {
      "type": "object",
      "description": "Describes how to update a Helm parameter to reference a specific version of a container image.",
      "additionalProperties": false,
      "required": ["key", "repoURL", "value"],
      "properties": {
        "fromOrigin": {
          "$ref": "#definitions/origin"
        },
        "key": {
          "type": "string",
          "description": "Specifies a key within an Argo CD Application source's Helm parameters that is to be updated.",
          "minLength": 1
        },
        "repoURL": {
          "type": "string",
          "description": "The URL of a container image repository.",
          "minLength": 1
        },
        "value": {
          "type": "string",
          "description": "Specifies a new value for the setting within an Argo CD Application source's Helm parameters identified by the 'key' field.",
          "enum": ["Digest", "ImageAndDigest", "ImageAndTag", "Tag"]
        }
      }
    },

    "argoCDKustomizeImageUpdates": {
      "type": "object",
      "description": "Describes updates to an Argo CD Application source's Kustomize images.",
      "additionalProperties": false,
      "properties": {
        "fromOrigin": {
          "$ref": "#definitions/origin"
        },
        "images": {
          "type": "array",
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/argoCDKustomizeImageUpdate"
          }
        }
      }
    },    

    "argoCDKustomizeImageUpdate": {
      "type": "object",
      "description": "Describes how to update a Kustomize image to reference a specific version of a container image.",
      "additionalProperties": false,
      "required": ["repoURL"],
      "properties": {
        "fromOrigin": {
          "$ref": "#definitions/origin"
        },
        "newName": {
          "type": "string",
          "description": "Specifies a container image name override.",
          "minLength": 1
        },
        "repoURL": {
          "type": "string",
          "description": "The URL of a container image repository.",
          "minLength": 1
        },
        "useDigest": {
          "type": "boolean",
          "description": "Specifies whether the image's digest should be used instead of its tag."
        }
      }
    },

    "origin": {
      "type": "object",
      "additionalProperties": false,
      "required": ["kind", "name"],
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of origin. Currently only 'Warehouse' is supported. Required.",
          "enum": ["Warehouse"]
        },
        "name": {
          "type": "string",
          "description": "The name of the origin. Required.",
          "minLength": 1
        }
      }
    }

  },
  
  "type": "object",
  "additionalProperties": false,
  "required": ["apps"],
  "properties": {
    "apps": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/argoCDAppUpdate"
      }
    },
    "fromOrigin": {
      "$ref": "#definitions/origin"
    }
  }
}
