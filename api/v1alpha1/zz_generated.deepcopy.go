//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalysisRunArgument) DeepCopyInto(out *AnalysisRunArgument) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalysisRunArgument.
func (in *AnalysisRunArgument) DeepCopy() *AnalysisRunArgument {
	if in == nil {
		return nil
	}
	out := new(AnalysisRunArgument)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalysisRunMetadata) DeepCopyInto(out *AnalysisRunMetadata) {
	*out = *in
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Annotations != nil {
		in, out := &in.Annotations, &out.Annotations
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalysisRunMetadata.
func (in *AnalysisRunMetadata) DeepCopy() *AnalysisRunMetadata {
	if in == nil {
		return nil
	}
	out := new(AnalysisRunMetadata)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalysisRunReference) DeepCopyInto(out *AnalysisRunReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalysisRunReference.
func (in *AnalysisRunReference) DeepCopy() *AnalysisRunReference {
	if in == nil {
		return nil
	}
	out := new(AnalysisRunReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AnalysisTemplateReference) DeepCopyInto(out *AnalysisTemplateReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AnalysisTemplateReference.
func (in *AnalysisTemplateReference) DeepCopy() *AnalysisTemplateReference {
	if in == nil {
		return nil
	}
	out := new(AnalysisTemplateReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApprovedStage) DeepCopyInto(out *ApprovedStage) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApprovedStage.
func (in *ApprovedStage) DeepCopy() *ApprovedStage {
	if in == nil {
		return nil
	}
	out := new(ApprovedStage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoCDAppHealthStatus) DeepCopyInto(out *ArgoCDAppHealthStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoCDAppHealthStatus.
func (in *ArgoCDAppHealthStatus) DeepCopy() *ArgoCDAppHealthStatus {
	if in == nil {
		return nil
	}
	out := new(ArgoCDAppHealthStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoCDAppStatus) DeepCopyInto(out *ArgoCDAppStatus) {
	*out = *in
	out.HealthStatus = in.HealthStatus
	in.SyncStatus.DeepCopyInto(&out.SyncStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoCDAppStatus.
func (in *ArgoCDAppStatus) DeepCopy() *ArgoCDAppStatus {
	if in == nil {
		return nil
	}
	out := new(ArgoCDAppStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoCDAppSyncStatus) DeepCopyInto(out *ArgoCDAppSyncStatus) {
	*out = *in
	if in.Revisions != nil {
		in, out := &in.Revisions, &out.Revisions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoCDAppSyncStatus.
func (in *ArgoCDAppSyncStatus) DeepCopy() *ArgoCDAppSyncStatus {
	if in == nil {
		return nil
	}
	out := new(ArgoCDAppSyncStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoCDAppUpdate) DeepCopyInto(out *ArgoCDAppUpdate) {
	*out = *in
	if in.SourceUpdates != nil {
		in, out := &in.SourceUpdates, &out.SourceUpdates
		*out = make([]ArgoCDSourceUpdate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoCDAppUpdate.
func (in *ArgoCDAppUpdate) DeepCopy() *ArgoCDAppUpdate {
	if in == nil {
		return nil
	}
	out := new(ArgoCDAppUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoCDHelm) DeepCopyInto(out *ArgoCDHelm) {
	*out = *in
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]ArgoCDHelmImageUpdate, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoCDHelm.
func (in *ArgoCDHelm) DeepCopy() *ArgoCDHelm {
	if in == nil {
		return nil
	}
	out := new(ArgoCDHelm)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoCDHelmImageUpdate) DeepCopyInto(out *ArgoCDHelmImageUpdate) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoCDHelmImageUpdate.
func (in *ArgoCDHelmImageUpdate) DeepCopy() *ArgoCDHelmImageUpdate {
	if in == nil {
		return nil
	}
	out := new(ArgoCDHelmImageUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoCDKustomize) DeepCopyInto(out *ArgoCDKustomize) {
	*out = *in
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]ArgoCDKustomizeImageUpdate, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoCDKustomize.
func (in *ArgoCDKustomize) DeepCopy() *ArgoCDKustomize {
	if in == nil {
		return nil
	}
	out := new(ArgoCDKustomize)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoCDKustomizeImageUpdate) DeepCopyInto(out *ArgoCDKustomizeImageUpdate) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoCDKustomizeImageUpdate.
func (in *ArgoCDKustomizeImageUpdate) DeepCopy() *ArgoCDKustomizeImageUpdate {
	if in == nil {
		return nil
	}
	out := new(ArgoCDKustomizeImageUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ArgoCDSourceUpdate) DeepCopyInto(out *ArgoCDSourceUpdate) {
	*out = *in
	if in.Kustomize != nil {
		in, out := &in.Kustomize, &out.Kustomize
		*out = new(ArgoCDKustomize)
		(*in).DeepCopyInto(*out)
	}
	if in.Helm != nil {
		in, out := &in.Helm, &out.Helm
		*out = new(ArgoCDHelm)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ArgoCDSourceUpdate.
func (in *ArgoCDSourceUpdate) DeepCopy() *ArgoCDSourceUpdate {
	if in == nil {
		return nil
	}
	out := new(ArgoCDSourceUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Chart) DeepCopyInto(out *Chart) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Chart.
func (in *Chart) DeepCopy() *Chart {
	if in == nil {
		return nil
	}
	out := new(Chart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartDiscoveryResult) DeepCopyInto(out *ChartDiscoveryResult) {
	*out = *in
	if in.Versions != nil {
		in, out := &in.Versions, &out.Versions
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartDiscoveryResult.
func (in *ChartDiscoveryResult) DeepCopy() *ChartDiscoveryResult {
	if in == nil {
		return nil
	}
	out := new(ChartDiscoveryResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChartSubscription) DeepCopyInto(out *ChartSubscription) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChartSubscription.
func (in *ChartSubscription) DeepCopy() *ChartSubscription {
	if in == nil {
		return nil
	}
	out := new(ChartSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredArtifacts) DeepCopyInto(out *DiscoveredArtifacts) {
	*out = *in
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = make([]GitDiscoveryResult, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]ImageDiscoveryResult, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]ChartDiscoveryResult, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredArtifacts.
func (in *DiscoveredArtifacts) DeepCopy() *DiscoveredArtifacts {
	if in == nil {
		return nil
	}
	out := new(DiscoveredArtifacts)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredCommit) DeepCopyInto(out *DiscoveredCommit) {
	*out = *in
	if in.CreatorDate != nil {
		in, out := &in.CreatorDate, &out.CreatorDate
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredCommit.
func (in *DiscoveredCommit) DeepCopy() *DiscoveredCommit {
	if in == nil {
		return nil
	}
	out := new(DiscoveredCommit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiscoveredImageReference) DeepCopyInto(out *DiscoveredImageReference) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiscoveredImageReference.
func (in *DiscoveredImageReference) DeepCopy() *DiscoveredImageReference {
	if in == nil {
		return nil
	}
	out := new(DiscoveredImageReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Freight) DeepCopyInto(out *Freight) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Commits != nil {
		in, out := &in.Commits, &out.Commits
		*out = make([]GitCommit, len(*in))
		copy(*out, *in)
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]Image, len(*in))
		copy(*out, *in)
	}
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]Chart, len(*in))
		copy(*out, *in)
	}
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Freight.
func (in *Freight) DeepCopy() *Freight {
	if in == nil {
		return nil
	}
	out := new(Freight)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Freight) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FreightList) DeepCopyInto(out *FreightList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Freight, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FreightList.
func (in *FreightList) DeepCopy() *FreightList {
	if in == nil {
		return nil
	}
	out := new(FreightList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FreightList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FreightReference) DeepCopyInto(out *FreightReference) {
	*out = *in
	if in.Commits != nil {
		in, out := &in.Commits, &out.Commits
		*out = make([]GitCommit, len(*in))
		copy(*out, *in)
	}
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]Image, len(*in))
		copy(*out, *in)
	}
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]Chart, len(*in))
		copy(*out, *in)
	}
	if in.VerificationInfo != nil {
		in, out := &in.VerificationInfo, &out.VerificationInfo
		*out = new(VerificationInfo)
		(*in).DeepCopyInto(*out)
	}
	if in.VerificationHistory != nil {
		in, out := &in.VerificationHistory, &out.VerificationHistory
		*out = make(VerificationInfoStack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FreightReference.
func (in *FreightReference) DeepCopy() *FreightReference {
	if in == nil {
		return nil
	}
	out := new(FreightReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in FreightReferenceStack) DeepCopyInto(out *FreightReferenceStack) {
	{
		in := &in
		*out = make(FreightReferenceStack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FreightReferenceStack.
func (in FreightReferenceStack) DeepCopy() FreightReferenceStack {
	if in == nil {
		return nil
	}
	out := new(FreightReferenceStack)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FreightStatus) DeepCopyInto(out *FreightStatus) {
	*out = *in
	if in.VerifiedIn != nil {
		in, out := &in.VerifiedIn, &out.VerifiedIn
		*out = make(map[string]VerifiedStage, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ApprovedFor != nil {
		in, out := &in.ApprovedFor, &out.ApprovedFor
		*out = make(map[string]ApprovedStage, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FreightStatus.
func (in *FreightStatus) DeepCopy() *FreightStatus {
	if in == nil {
		return nil
	}
	out := new(FreightStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommit) DeepCopyInto(out *GitCommit) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommit.
func (in *GitCommit) DeepCopy() *GitCommit {
	if in == nil {
		return nil
	}
	out := new(GitCommit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitDiscoveryResult) DeepCopyInto(out *GitDiscoveryResult) {
	*out = *in
	if in.Commits != nil {
		in, out := &in.Commits, &out.Commits
		*out = make([]DiscoveredCommit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitDiscoveryResult.
func (in *GitDiscoveryResult) DeepCopy() *GitDiscoveryResult {
	if in == nil {
		return nil
	}
	out := new(GitDiscoveryResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitHubPullRequest) DeepCopyInto(out *GitHubPullRequest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitHubPullRequest.
func (in *GitHubPullRequest) DeepCopy() *GitHubPullRequest {
	if in == nil {
		return nil
	}
	out := new(GitHubPullRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitLabPullRequest) DeepCopyInto(out *GitLabPullRequest) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitLabPullRequest.
func (in *GitLabPullRequest) DeepCopy() *GitLabPullRequest {
	if in == nil {
		return nil
	}
	out := new(GitLabPullRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepoUpdate) DeepCopyInto(out *GitRepoUpdate) {
	*out = *in
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		*out = new(PullRequestPromotionMechanism)
		(*in).DeepCopyInto(*out)
	}
	if in.Render != nil {
		in, out := &in.Render, &out.Render
		*out = new(KargoRenderPromotionMechanism)
		(*in).DeepCopyInto(*out)
	}
	if in.Kustomize != nil {
		in, out := &in.Kustomize, &out.Kustomize
		*out = new(KustomizePromotionMechanism)
		(*in).DeepCopyInto(*out)
	}
	if in.Helm != nil {
		in, out := &in.Helm, &out.Helm
		*out = new(HelmPromotionMechanism)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepoUpdate.
func (in *GitRepoUpdate) DeepCopy() *GitRepoUpdate {
	if in == nil {
		return nil
	}
	out := new(GitRepoUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSubscription) DeepCopyInto(out *GitSubscription) {
	*out = *in
	if in.IgnoreTags != nil {
		in, out := &in.IgnoreTags, &out.IgnoreTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.IncludePaths != nil {
		in, out := &in.IncludePaths, &out.IncludePaths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ExcludePaths != nil {
		in, out := &in.ExcludePaths, &out.ExcludePaths
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSubscription.
func (in *GitSubscription) DeepCopy() *GitSubscription {
	if in == nil {
		return nil
	}
	out := new(GitSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Health) DeepCopyInto(out *Health) {
	*out = *in
	if in.Issues != nil {
		in, out := &in.Issues, &out.Issues
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ArgoCDApps != nil {
		in, out := &in.ArgoCDApps, &out.ArgoCDApps
		*out = make([]ArgoCDAppStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Health.
func (in *Health) DeepCopy() *Health {
	if in == nil {
		return nil
	}
	out := new(Health)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmChartDependencyUpdate) DeepCopyInto(out *HelmChartDependencyUpdate) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmChartDependencyUpdate.
func (in *HelmChartDependencyUpdate) DeepCopy() *HelmChartDependencyUpdate {
	if in == nil {
		return nil
	}
	out := new(HelmChartDependencyUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmImageUpdate) DeepCopyInto(out *HelmImageUpdate) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmImageUpdate.
func (in *HelmImageUpdate) DeepCopy() *HelmImageUpdate {
	if in == nil {
		return nil
	}
	out := new(HelmImageUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HelmPromotionMechanism) DeepCopyInto(out *HelmPromotionMechanism) {
	*out = *in
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]HelmImageUpdate, len(*in))
		copy(*out, *in)
	}
	if in.Charts != nil {
		in, out := &in.Charts, &out.Charts
		*out = make([]HelmChartDependencyUpdate, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HelmPromotionMechanism.
func (in *HelmPromotionMechanism) DeepCopy() *HelmPromotionMechanism {
	if in == nil {
		return nil
	}
	out := new(HelmPromotionMechanism)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image) DeepCopyInto(out *Image) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image.
func (in *Image) DeepCopy() *Image {
	if in == nil {
		return nil
	}
	out := new(Image)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageDiscoveryResult) DeepCopyInto(out *ImageDiscoveryResult) {
	*out = *in
	if in.References != nil {
		in, out := &in.References, &out.References
		*out = make([]DiscoveredImageReference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageDiscoveryResult.
func (in *ImageDiscoveryResult) DeepCopy() *ImageDiscoveryResult {
	if in == nil {
		return nil
	}
	out := new(ImageDiscoveryResult)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSubscription) DeepCopyInto(out *ImageSubscription) {
	*out = *in
	if in.IgnoreTags != nil {
		in, out := &in.IgnoreTags, &out.IgnoreTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSubscription.
func (in *ImageSubscription) DeepCopy() *ImageSubscription {
	if in == nil {
		return nil
	}
	out := new(ImageSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KargoRenderImageUpdate) DeepCopyInto(out *KargoRenderImageUpdate) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KargoRenderImageUpdate.
func (in *KargoRenderImageUpdate) DeepCopy() *KargoRenderImageUpdate {
	if in == nil {
		return nil
	}
	out := new(KargoRenderImageUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KargoRenderPromotionMechanism) DeepCopyInto(out *KargoRenderPromotionMechanism) {
	*out = *in
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]KargoRenderImageUpdate, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KargoRenderPromotionMechanism.
func (in *KargoRenderPromotionMechanism) DeepCopy() *KargoRenderPromotionMechanism {
	if in == nil {
		return nil
	}
	out := new(KargoRenderPromotionMechanism)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizeImageUpdate) DeepCopyInto(out *KustomizeImageUpdate) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizeImageUpdate.
func (in *KustomizeImageUpdate) DeepCopy() *KustomizeImageUpdate {
	if in == nil {
		return nil
	}
	out := new(KustomizeImageUpdate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KustomizePromotionMechanism) DeepCopyInto(out *KustomizePromotionMechanism) {
	*out = *in
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]KustomizeImageUpdate, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KustomizePromotionMechanism.
func (in *KustomizePromotionMechanism) DeepCopy() *KustomizePromotionMechanism {
	if in == nil {
		return nil
	}
	out := new(KustomizePromotionMechanism)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Project) DeepCopyInto(out *Project) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	if in.Spec != nil {
		in, out := &in.Spec, &out.Spec
		*out = new(ProjectSpec)
		(*in).DeepCopyInto(*out)
	}
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Project.
func (in *Project) DeepCopy() *Project {
	if in == nil {
		return nil
	}
	out := new(Project)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Project) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectList) DeepCopyInto(out *ProjectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Project, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectList.
func (in *ProjectList) DeepCopy() *ProjectList {
	if in == nil {
		return nil
	}
	out := new(ProjectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ProjectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectSpec) DeepCopyInto(out *ProjectSpec) {
	*out = *in
	if in.PromotionPolicies != nil {
		in, out := &in.PromotionPolicies, &out.PromotionPolicies
		*out = make([]PromotionPolicy, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectSpec.
func (in *ProjectSpec) DeepCopy() *ProjectSpec {
	if in == nil {
		return nil
	}
	out := new(ProjectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProjectStatus) DeepCopyInto(out *ProjectStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProjectStatus.
func (in *ProjectStatus) DeepCopy() *ProjectStatus {
	if in == nil {
		return nil
	}
	out := new(ProjectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Promotion) DeepCopyInto(out *Promotion) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Promotion.
func (in *Promotion) DeepCopy() *Promotion {
	if in == nil {
		return nil
	}
	out := new(Promotion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Promotion) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromotionList) DeepCopyInto(out *PromotionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Promotion, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromotionList.
func (in *PromotionList) DeepCopy() *PromotionList {
	if in == nil {
		return nil
	}
	out := new(PromotionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PromotionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromotionMechanisms) DeepCopyInto(out *PromotionMechanisms) {
	*out = *in
	if in.GitRepoUpdates != nil {
		in, out := &in.GitRepoUpdates, &out.GitRepoUpdates
		*out = make([]GitRepoUpdate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ArgoCDAppUpdates != nil {
		in, out := &in.ArgoCDAppUpdates, &out.ArgoCDAppUpdates
		*out = make([]ArgoCDAppUpdate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromotionMechanisms.
func (in *PromotionMechanisms) DeepCopy() *PromotionMechanisms {
	if in == nil {
		return nil
	}
	out := new(PromotionMechanisms)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromotionPolicy) DeepCopyInto(out *PromotionPolicy) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromotionPolicy.
func (in *PromotionPolicy) DeepCopy() *PromotionPolicy {
	if in == nil {
		return nil
	}
	out := new(PromotionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromotionReference) DeepCopyInto(out *PromotionReference) {
	*out = *in
	in.Freight.DeepCopyInto(&out.Freight)
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(PromotionStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.FinishedAt != nil {
		in, out := &in.FinishedAt, &out.FinishedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromotionReference.
func (in *PromotionReference) DeepCopy() *PromotionReference {
	if in == nil {
		return nil
	}
	out := new(PromotionReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromotionSpec) DeepCopyInto(out *PromotionSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromotionSpec.
func (in *PromotionSpec) DeepCopy() *PromotionSpec {
	if in == nil {
		return nil
	}
	out := new(PromotionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PromotionStatus) DeepCopyInto(out *PromotionStatus) {
	*out = *in
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Freight != nil {
		in, out := &in.Freight, &out.Freight
		*out = new(FreightReference)
		(*in).DeepCopyInto(*out)
	}
	if in.FinishedAt != nil {
		in, out := &in.FinishedAt, &out.FinishedAt
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PromotionStatus.
func (in *PromotionStatus) DeepCopy() *PromotionStatus {
	if in == nil {
		return nil
	}
	out := new(PromotionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestPromotionMechanism) DeepCopyInto(out *PullRequestPromotionMechanism) {
	*out = *in
	if in.GitHub != nil {
		in, out := &in.GitHub, &out.GitHub
		*out = new(GitHubPullRequest)
		**out = **in
	}
	if in.GitLab != nil {
		in, out := &in.GitLab, &out.GitLab
		*out = new(GitLabPullRequest)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestPromotionMechanism.
func (in *PullRequestPromotionMechanism) DeepCopy() *PullRequestPromotionMechanism {
	if in == nil {
		return nil
	}
	out := new(PullRequestPromotionMechanism)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepoSubscription) DeepCopyInto(out *RepoSubscription) {
	*out = *in
	if in.Git != nil {
		in, out := &in.Git, &out.Git
		*out = new(GitSubscription)
		(*in).DeepCopyInto(*out)
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(ImageSubscription)
		(*in).DeepCopyInto(*out)
	}
	if in.Chart != nil {
		in, out := &in.Chart, &out.Chart
		*out = new(ChartSubscription)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepoSubscription.
func (in *RepoSubscription) DeepCopy() *RepoSubscription {
	if in == nil {
		return nil
	}
	out := new(RepoSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stage) DeepCopyInto(out *Stage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stage.
func (in *Stage) DeepCopy() *Stage {
	if in == nil {
		return nil
	}
	out := new(Stage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Stage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageList) DeepCopyInto(out *StageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Stage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageList.
func (in *StageList) DeepCopy() *StageList {
	if in == nil {
		return nil
	}
	out := new(StageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageSpec) DeepCopyInto(out *StageSpec) {
	*out = *in
	in.Subscriptions.DeepCopyInto(&out.Subscriptions)
	if in.PromotionMechanisms != nil {
		in, out := &in.PromotionMechanisms, &out.PromotionMechanisms
		*out = new(PromotionMechanisms)
		(*in).DeepCopyInto(*out)
	}
	if in.Verification != nil {
		in, out := &in.Verification, &out.Verification
		*out = new(Verification)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageSpec.
func (in *StageSpec) DeepCopy() *StageSpec {
	if in == nil {
		return nil
	}
	out := new(StageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageStatus) DeepCopyInto(out *StageStatus) {
	*out = *in
	if in.CurrentFreight != nil {
		in, out := &in.CurrentFreight, &out.CurrentFreight
		*out = new(FreightReference)
		(*in).DeepCopyInto(*out)
	}
	if in.History != nil {
		in, out := &in.History, &out.History
		*out = make(FreightReferenceStack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Health != nil {
		in, out := &in.Health, &out.Health
		*out = new(Health)
		(*in).DeepCopyInto(*out)
	}
	if in.CurrentPromotion != nil {
		in, out := &in.CurrentPromotion, &out.CurrentPromotion
		*out = new(PromotionReference)
		(*in).DeepCopyInto(*out)
	}
	if in.LastPromotion != nil {
		in, out := &in.LastPromotion, &out.LastPromotion
		*out = new(PromotionReference)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageStatus.
func (in *StageStatus) DeepCopy() *StageStatus {
	if in == nil {
		return nil
	}
	out := new(StageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageSubscription) DeepCopyInto(out *StageSubscription) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageSubscription.
func (in *StageSubscription) DeepCopy() *StageSubscription {
	if in == nil {
		return nil
	}
	out := new(StageSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subscriptions) DeepCopyInto(out *Subscriptions) {
	*out = *in
	if in.UpstreamStages != nil {
		in, out := &in.UpstreamStages, &out.UpstreamStages
		*out = make([]StageSubscription, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subscriptions.
func (in *Subscriptions) DeepCopy() *Subscriptions {
	if in == nil {
		return nil
	}
	out := new(Subscriptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Verification) DeepCopyInto(out *Verification) {
	*out = *in
	if in.AnalysisTemplates != nil {
		in, out := &in.AnalysisTemplates, &out.AnalysisTemplates
		*out = make([]AnalysisTemplateReference, len(*in))
		copy(*out, *in)
	}
	if in.AnalysisRunMetadata != nil {
		in, out := &in.AnalysisRunMetadata, &out.AnalysisRunMetadata
		*out = new(AnalysisRunMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Args != nil {
		in, out := &in.Args, &out.Args
		*out = make([]AnalysisRunArgument, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Verification.
func (in *Verification) DeepCopy() *Verification {
	if in == nil {
		return nil
	}
	out := new(Verification)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VerificationInfo) DeepCopyInto(out *VerificationInfo) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.AnalysisRun != nil {
		in, out := &in.AnalysisRun, &out.AnalysisRun
		*out = new(AnalysisRunReference)
		**out = **in
	}
	if in.FinishTime != nil {
		in, out := &in.FinishTime, &out.FinishTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VerificationInfo.
func (in *VerificationInfo) DeepCopy() *VerificationInfo {
	if in == nil {
		return nil
	}
	out := new(VerificationInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in VerificationInfoStack) DeepCopyInto(out *VerificationInfoStack) {
	{
		in := &in
		*out = make(VerificationInfoStack, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VerificationInfoStack.
func (in VerificationInfoStack) DeepCopy() VerificationInfoStack {
	if in == nil {
		return nil
	}
	out := new(VerificationInfoStack)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VerifiedStage) DeepCopyInto(out *VerifiedStage) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VerifiedStage.
func (in *VerifiedStage) DeepCopy() *VerifiedStage {
	if in == nil {
		return nil
	}
	out := new(VerifiedStage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Warehouse) DeepCopyInto(out *Warehouse) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Warehouse.
func (in *Warehouse) DeepCopy() *Warehouse {
	if in == nil {
		return nil
	}
	out := new(Warehouse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Warehouse) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarehouseList) DeepCopyInto(out *WarehouseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Warehouse, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarehouseList.
func (in *WarehouseList) DeepCopy() *WarehouseList {
	if in == nil {
		return nil
	}
	out := new(WarehouseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WarehouseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarehouseSpec) DeepCopyInto(out *WarehouseSpec) {
	*out = *in
	out.Interval = in.Interval
	if in.Subscriptions != nil {
		in, out := &in.Subscriptions, &out.Subscriptions
		*out = make([]RepoSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarehouseSpec.
func (in *WarehouseSpec) DeepCopy() *WarehouseSpec {
	if in == nil {
		return nil
	}
	out := new(WarehouseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WarehouseStatus) DeepCopyInto(out *WarehouseStatus) {
	*out = *in
	if in.DiscoveredArtifacts != nil {
		in, out := &in.DiscoveredArtifacts, &out.DiscoveredArtifacts
		*out = new(DiscoveredArtifacts)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WarehouseStatus.
func (in *WarehouseStatus) DeepCopy() *WarehouseStatus {
	if in == nil {
		return nil
	}
	out := new(WarehouseStatus)
	in.DeepCopyInto(out)
	return out
}
