//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationReference) DeepCopyInto(out *ApplicationReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationReference.
func (in *ApplicationReference) DeepCopy() *ApplicationReference {
	if in == nil {
		return nil
	}
	out := new(ApplicationReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BaseConfigurationChange) DeepCopyInto(out *BaseConfigurationChange) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BaseConfigurationChange.
func (in *BaseConfigurationChange) DeepCopy() *BaseConfigurationChange {
	if in == nil {
		return nil
	}
	out := new(BaseConfigurationChange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Change) DeepCopyInto(out *Change) {
	*out = *in
	if in.NewImages != nil {
		in, out := &in.NewImages, &out.NewImages
		*out = new(NewImagesChange)
		(*in).DeepCopyInto(*out)
	}
	if in.BaseConfiguration != nil {
		in, out := &in.BaseConfiguration, &out.BaseConfiguration
		*out = new(BaseConfigurationChange)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Change.
func (in *Change) DeepCopy() *Change {
	if in == nil {
		return nil
	}
	out := new(Change)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Commit) DeepCopyInto(out *Commit) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Commit.
func (in *Commit) DeepCopy() *Commit {
	if in == nil {
		return nil
	}
	out := new(Commit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitRepositorySubscription) DeepCopyInto(out *GitRepositorySubscription) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitRepositorySubscription.
func (in *GitRepositorySubscription) DeepCopy() *GitRepositorySubscription {
	if in == nil {
		return nil
	}
	out := new(GitRepositorySubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitSyncStatus) DeepCopyInto(out *GitSyncStatus) {
	*out = *in
	if in.Time != nil {
		in, out := &in.Time, &out.Time
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitSyncStatus.
func (in *GitSyncStatus) DeepCopy() *GitSyncStatus {
	if in == nil {
		return nil
	}
	out := new(GitSyncStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image) DeepCopyInto(out *Image) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image.
func (in *Image) DeepCopy() *Image {
	if in == nil {
		return nil
	}
	out := new(Image)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageRepositorySubscription) DeepCopyInto(out *ImageRepositorySubscription) {
	*out = *in
	if in.IgnoreTags != nil {
		in, out := &in.IgnoreTags, &out.IgnoreTags
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageRepositorySubscription.
func (in *ImageRepositorySubscription) DeepCopy() *ImageRepositorySubscription {
	if in == nil {
		return nil
	}
	out := new(ImageRepositorySubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Migration) DeepCopyInto(out *Migration) {
	*out = *in
	if in.Commits != nil {
		in, out := &in.Commits, &out.Commits
		*out = make([]Commit, len(*in))
		copy(*out, *in)
	}
	if in.SkippedApplications != nil {
		in, out := &in.SkippedApplications, &out.SkippedApplications
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.SkippedTracks != nil {
		in, out := &in.SkippedTracks, &out.SkippedTracks
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Tickets != nil {
		in, out := &in.Tickets, &out.Tickets
		*out = make([]TicketReference, len(*in))
		copy(*out, *in)
	}
	if in.Started != nil {
		in, out := &in.Started, &out.Started
		*out = (*in).DeepCopy()
	}
	if in.Completed != nil {
		in, out := &in.Completed, &out.Completed
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Migration.
func (in *Migration) DeepCopy() *Migration {
	if in == nil {
		return nil
	}
	out := new(Migration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NewImagesChange) DeepCopyInto(out *NewImagesChange) {
	*out = *in
	if in.Images != nil {
		in, out := &in.Images, &out.Images
		*out = make([]Image, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NewImagesChange.
func (in *NewImagesChange) DeepCopy() *NewImagesChange {
	if in == nil {
		return nil
	}
	out := new(NewImagesChange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProgressRecord) DeepCopyInto(out *ProgressRecord) {
	*out = *in
	if in.Migration != nil {
		in, out := &in.Migration, &out.Migration
		*out = new(Migration)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProgressRecord.
func (in *ProgressRecord) DeepCopy() *ProgressRecord {
	if in == nil {
		return nil
	}
	out := new(ProgressRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Station) DeepCopyInto(out *Station) {
	*out = *in
	if in.Applications != nil {
		in, out := &in.Applications, &out.Applications
		*out = make([]ApplicationReference, len(*in))
		copy(*out, *in)
	}
	if in.Tracks != nil {
		in, out := &in.Tracks, &out.Tracks
		*out = make([]TrackReference, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Station.
func (in *Station) DeepCopy() *Station {
	if in == nil {
		return nil
	}
	out := new(Station)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ticket) DeepCopyInto(out *Ticket) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Change.DeepCopyInto(&out.Change)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ticket.
func (in *Ticket) DeepCopy() *Ticket {
	if in == nil {
		return nil
	}
	out := new(Ticket)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Ticket) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TicketList) DeepCopyInto(out *TicketList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Ticket, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TicketList.
func (in *TicketList) DeepCopy() *TicketList {
	if in == nil {
		return nil
	}
	out := new(TicketList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TicketList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TicketReference) DeepCopyInto(out *TicketReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TicketReference.
func (in *TicketReference) DeepCopy() *TicketReference {
	if in == nil {
		return nil
	}
	out := new(TicketReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TicketStatus) DeepCopyInto(out *TicketStatus) {
	*out = *in
	if in.Progress != nil {
		in, out := &in.Progress, &out.Progress
		*out = make([]ProgressRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TicketStatus.
func (in *TicketStatus) DeepCopy() *TicketStatus {
	if in == nil {
		return nil
	}
	out := new(TicketStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Track) DeepCopyInto(out *Track) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Track.
func (in *Track) DeepCopy() *Track {
	if in == nil {
		return nil
	}
	out := new(Track)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Track) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackList) DeepCopyInto(out *TrackList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Track, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackList.
func (in *TrackList) DeepCopy() *TrackList {
	if in == nil {
		return nil
	}
	out := new(TrackList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TrackList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackReference) DeepCopyInto(out *TrackReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackReference.
func (in *TrackReference) DeepCopy() *TrackReference {
	if in == nil {
		return nil
	}
	out := new(TrackReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackSpec) DeepCopyInto(out *TrackSpec) {
	*out = *in
	if in.ImageRepositorySubscriptions != nil {
		in, out := &in.ImageRepositorySubscriptions, &out.ImageRepositorySubscriptions
		*out = make([]ImageRepositorySubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GitRepositorySubscription != nil {
		in, out := &in.GitRepositorySubscription, &out.GitRepositorySubscription
		*out = new(GitRepositorySubscription)
		**out = **in
	}
	if in.Stations != nil {
		in, out := &in.Stations, &out.Stations
		*out = make([]Station, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackSpec.
func (in *TrackSpec) DeepCopy() *TrackSpec {
	if in == nil {
		return nil
	}
	out := new(TrackSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrackStatus) DeepCopyInto(out *TrackStatus) {
	*out = *in
	if in.GitSyncStatus != nil {
		in, out := &in.GitSyncStatus, &out.GitSyncStatus
		*out = new(GitSyncStatus)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrackStatus.
func (in *TrackStatus) DeepCopy() *TrackStatus {
	if in == nil {
		return nil
	}
	out := new(TrackStatus)
	in.DeepCopyInto(out)
	return out
}
