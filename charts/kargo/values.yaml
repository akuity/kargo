## Default values for kargo
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

image:
  repository: ghcr.io/akuity/kargo
  ## tag should only be specified if you want to override Chart.appVersion
  ## The default tag is the value of .Chart.AppVersion
  # tag:
  pullPolicy: IfNotPresent

rbac:
  ## Indicates whether relevant cluster-scoped roles should be installed/updated
  ## by this chart. Set to false if this is NOT the first install of Kargo in
  ## a given cluster, otherwise this chart will attempt to create resources that
  ## already exist. You may also wish to set this to false if you are installing
  ## Kargo into one cluster, but configuring it to manage a DIFFERENT cluster.
  ## In that case, you should use the kargo-kit chart to install these resources
  ## in the Kargo-managed cluster.
  installClusterRoles: true
  ## Indicates whether relevant ClusterRoleBindings should be installed/updated
  ## by this chart. You may wish to set this to false if you are installing
  ## Kargo into one cluster, but configuring it to manage a DIFFERENT cluster.
  ## In that case, you should use the kargo-kit chart to install these resources
  ## in the Kargo-managed cluster.
  installClusterRoleBindings: true

## Optionally point to Kubernetes Secrets containing kubeconfig for a remote
## Kubernetes cluster hosting Kargo resources and/or a remote Kubernetes cluster
## hosting Argo CD resources. This is useful for cases where the Kargo
## controller is running somewhere other than the cluster(s) it is managing. The
## config for Kargo and Argo CD can be the same, different, or omitted entirely.
## When omitted, the controller will fall back on in-cluster configuration.
## In the average case, these settings should be left alone.
kubeconfigSecrets: {}
  # kargo:
  # argocd:

## All settings for the api component
api:

  ## Whether the API server is enabled.
  enabled: true

  ## The number of API server pods. (Default: 1)
  # replicas: 3

  logLevel: INFO

  resources: {}
    # We usually recommend not to specify default resources and to leave this as
    # a conscious choice for the user. This also increases chances charts run on
    # environments with little resources, such as KinD. If you do want to
    # specify resources, uncomment the following lines, adjust them as
    # necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

## All settings for the controller component
controller:

  ## Whether the controller is enabled.
  enabled: true

  ## Set a shard name if, and only if, you are running multiple controllers
  ## backed by a single underlying control plane. This is advanced configuration
  ## and in nearly all cases should be left undefined.
  # shardName:

  ## All settings relating to the Argo CD control plane this controller will
  ## integrate with.
  argocd:
    ## The namespace into which Argo CD is installed.
    namespace: argocd
    ## Specifies whether the reconciler that watches Argo CD Applications for
    ## the sake of forcing related Stages to reconcile should only watch Argo CD
    ## Application resources residing in Argo CD's own namespace. Note: Older
    ## versions of Argo CD only supported Argo CD Application resources in Argo
    ## CD's own namespace, but newer versions support Argo CD Application
    ## resources in any namespace. This should usually be left as false.
    watchArgocdNamespaceOnly: false
    ## Specifies whether Kargo may borrow repository credentials (specially
    ## formatted and specially annotated Secrets) from Argo CD.
    enableCredentialBorrowing: true

  logLevel: INFO

  resources: {}
    # We usually recommend not to specify default resources and to leave this as
    # a conscious choice for the user. This also increases chances charts run on
    # environments with little resources, such as KinD. If you do want to
    # specify resources, uncomment the following lines, adjust them as
    # necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

webhooks:
  ## Whether to create ValidatingWebhookConfiguration and
  ## MutatingWebhookConfiguration resources. Since these are installed at a
  ## cluster scope, there may be circumstances under which one wishes NOT to
  ## install these. An example would be if Kargo were being hosted in one
  ## cluster, but managing another cluster. In such a case, the
  ## ValidatingWebhookConfiguration and MutatingWebhookConfiguration resources
  ## (as well as CRDs) should be installed into the cluster under management
  ## using the kargo-kit chart.
  register: true

webhooksServer:

  ## Whether the webhooks server is enabled.
  enabled: true

  ## The number of webhooks server pods. (Default: 1)
  # replicas: 3

  logLevel: INFO

  tls:
    ## Whether to generate a self-signed certificate for the controller's
    ## built-in webhook server. If true, cert-manager CRDs MUST be
    ## pre-installed on this cluster. Kargo will create and use its own
    ## namespaced issuer. If false, a cert secret named
    ## <Helm release name>-webhook-servers-cert MUST be provided in the same
    ## namespace as Kargo.
    selfSignedCert: true

  resources: {}
    # We usually recommend not to specify default resources and to leave this as
    # a conscious choice for the user. This also increases chances charts run on
    # environments with little resources, such as KinD. If you do want to
    # specify resources, uncomment the following lines, adjust them as
    # necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []
