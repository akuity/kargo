{{- $ca := genCA "kargo-webhook-ca" 3650 }}
{{- $cn := printf "%s-webhook-server" (include "kargo.fullname" .) }}
{{- $altName1 := printf "%s-webhook-server.%s" (include "kargo.fullname" .) .Release.Namespace }}
{{- $altName2 := printf "%s-webhook-server.%s.svc" (include "kargo.fullname" .) .Release.Namespace }}
{{- $altName3 := printf "%s-webhook-server.%s.svc.cluster" (include "kargo.fullname" .) .Release.Namespace }}
{{- $altName4 := printf "%s-webhook-server.%s.svc.cluster.local" (include "kargo.fullname" .) .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $altName1 $altName2 $altName3 $altName4) 3650 $ca }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "kargo.fullname" . }}-webhook-server-cert
  labels:
    {{- include "kargo.labels" . | nindent 4 }}
    {{- include "kargo.controller.labels" . | nindent 4 }}
data:
  tls.crt: {{ b64enc $cert.Cert }}
  tls.key: {{ b64enc $cert.Key }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: {{ include "kargo.fullname" . }}
  labels:
    {{- include "kargo.labels" . | nindent 4 }}
    {{- include "kargo.controller.labels" . | nindent 4 }}
webhooks:
- name: environment.kargo.akuity.io
  admissionReviewVersions: ["v1"]
  sideEffects: None
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kargo.fullname" . }}-webhook-server
      path: /mutate-kargo-akuity-io-v1alpha1-environment
    caBundle: {{ b64enc $ca.Cert }}
  rules:
  - scope: Namespaced
    apiGroups: ["kargo.akuity.io"]
    apiVersions: ["v1alpha1"]
    resources: ["environments"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: {{ include "kargo.fullname" . }}
  labels:
    {{- include "kargo.labels" . | nindent 4 }}
    {{- include "kargo.controller.labels" . | nindent 4 }}
webhooks:
- name: environment.kargo.akuity.io
  admissionReviewVersions: ["v1"]
  sideEffects: None
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: {{ include "kargo.fullname" . }}-webhook-server
      path: /validate-kargo-akuity-io-v1alpha1-environment
    caBundle: {{ b64enc $ca.Cert }}
  rules:
  - scope: Namespaced
    apiGroups: ["kargo.akuity.io"]
    apiVersions: ["v1alpha1"]
    resources: ["environments"]
    operations: ["CREATE", "UPDATE"]
  failurePolicy: Fail
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "kargo.controller.fullname" . }}
  labels:
    {{- include "kargo.labels" . | nindent 4 }}
    {{- include "kargo.controller.labels" . | nindent 4 }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "kargo.selectorLabels" . | nindent 6 }}
      {{- include "kargo.controller.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "kargo.selectorLabels" . | nindent 8 }}
        {{- include "kargo.controller.labels" . | nindent 8 }}
      annotations:
        checksum/webhook-server-cert: {{ sha256sum $cert.Cert }}
        checksum/webhook-server-private-key: {{ sha256sum $cert.Key }}
    spec:
      serviceAccount: {{ include "kargo.controller.fullname" . }}
      imagePullSecrets:
      - name: {{ include "kargo.fullname" . }}-image-pull-secret
      containers:
      - name: controller
        image: {{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/usr/local/bin/kargo", "controller"]
        env:
        - name: LOG_LEVEL
          value: {{ .Values.controller.logLevel }}
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        resources:
          {{- toYaml .Values.controller.resources | nindent 10 }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ include "kargo.fullname" . }}-webhook-server-cert
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
